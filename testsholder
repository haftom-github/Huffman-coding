
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.Part IV: Software Development
Chapter 18 —The Source Code Control System ...................... 489
Intr oduction .........................................................................................
Overview of Commands .....................................................................
Basic Operation ..................................................................................
Identification Keywords ......................................................................
Data Keywords ....................................................................................
Alphabetical Summary of SCCS Commands ......................................
sccs and Pseudo-Commands ..............................................................
489
490
490
493
493
495
503
Chapter 19 —The Revision Control System ............................. 506
Overview of Commands .....................................................................
Basic Operation ..................................................................................
General RCS Specifications .................................................................
Conversion Guide for SCCS Users .....................................................
Alphabetical Summary of Commands ................................................
506
507
508
512
513
Chapter 20 —The make Utility ................................................... 525
Conceptual Overview .........................................................................
Command-Line Syntax ........................................................................
Description File Lines .........................................................................
Macr os .................................................................................................
Special Target Names ..........................................................................
Writing Command Lines .....................................................................
Sample Default Macros, Suffixes, and Rules .....................................
525
526
527
528
529
529
531
Part V: Appendixes
Appendix A —ASCII Character Set ............................................ 537
Appendix B —Obsolete Commands ........................................... 542
Bibliography .................................................................................... 566
Index ................................................................................................. 577
xi
18 October 2001 15:5318 October 2001 15:53Preface
The third edition of Unix in a Nutshell (for System V) generally follows the dictum
that “if it’s not broken, don’t fix it.” This edition has the following new features:
• Many mistakes and typographical errors have been fixed.
• Covers Solaris 7, the latest version of the SVR4-based operating system from
Sun Microsystems. *
• Sixty new commands have been added, mostly in Chapter 2, Unix Com-
mands.
• Chapter 4, The Bourne Shell and Korn Shell, now covers both the 1988 and
the 1993 versions of ksh .
• Chapter 7, The Emacs Editor, now covers GNU emacs Version 20.
• A new chapter, Chapter 16, man Macros, describes the troff man macr os.
• Chapter 13, mm Macros, thr ough Chapter 16, which cover the troff macr o
packages, come with simple example documents showing the order in which
to use the macros.
• Chapter 17, tr off Prepr ocessors, now covers refer and its related programs.
• Chapter 19, The Revision Control System, now covers Version 5.7 of RCS.
• Commands that are no longer generally useful but that still come with SVR4
or Solaris have been moved to Appendix B, Obsolete Commands.
• The Bibliography lists books that every Unix wizard should have on his or her
bookshelf. All books that are referr ed to in the text are listed here.
* The version used for this book was for Intel x86-based systems.
xiii
18 October 2001 14:40Audience
This book should be of interest to Unix users and Unix programmers, as well as to
anyone (such as a system administrator) who might offer direct support to users
and programmers. The presentation is geared mainly toward people who are
alr eady familiar with the Unix system; that is, you know what you want to do, and
you even have some idea how to do it. You just need a reminder about the
details. For example, if you want to remove the third field from a database, you
might think, “I know I can use the cut command, but what are the options?” In
many cases, specific examples are provided to show how a command is used.
This refer ence might also help people who are familiar with some aspects of Unix
but not with others. Many chapters include an overview of the particular topic.
While this isn’t meant to be comprehensive, it’s usually sufficient to get you started
in unfamiliar territory.
And some of you may be coming from a Unix system that runs the BSD or SunOS
4.1 version. To help with such a transition, SVR4 and Solaris include a group of
“compatibility” commands, many of which are presented in this guide.
Finally, if you’re new to the Unix operating system, and you’re feeling bold, you
might appreciate this book as a quick tour of what Unix has to offer. The section
“Beginner’s Guide,” in Chapter 1, Intr oduction, can point you to the most useful
commands, and you’ll find brief examples of how to use them, but take note: this
book should not be used in place of a good beginner’s tutorial on Unix. (You
might try O’Reilly’s Lear ning the Unix Operating System for that.) This refer ence
should be a supplement, not a substitute. (There are refer ences thr oughout the text
to other relevant O’Reilly books that will help you learn the subject matter under
discussion; you may be better off detouring to those books first.)
Scope of This Book
Unix in a Nutshell, Third Edition, is divided into five parts:
• Part I (Chapters 1 through 5) describes the syntax and options for Unix com-
mands and for the Bourne, Korn, and C shells.
• Part II (Chapters 6 through 11) presents various editing tools and describes
their command sets (alphabetically and by group). Part II begins with a
review of pattern matching, including examples geared toward specific edi-
tors.
• Part III (Chapters 12 through 17) describes the nroff and troff text formatting
pr ograms, related macro packages, and the prepr ocessors tbl , eqn , pic , and
refer .
• Part IV (Chapters 18 through 20) summarizes the Unix utilities for software
development — SCCS, RCS, and make .
• Part V (Appendixes A and B, Bibliography) contains a table of ASCII charac-
ters and equivalent values (Appendix A), obsolete commands that are still part
of SVR4 and/or Solaris (Appendix B), and a bibliography of Unix books.
xiv Preface
18 October 2001 14:40Conventions
This book follows certain typographic conventions, outlined below:
Constant width
is used for directory names, filenames, commands, program names, functions,
and options. All terms shown in constant width are typed literally. It is also
used to show the contents of files or the output from commands.
Constant width italic
is used in syntax and command summaries to show generic text; these should
be replaced with user-supplied values.
Constant width bold
is used in examples to show text that should be typed literally by the user.
Italic
is used to show generic arguments and options; these should be replaced
with user-supplied values. Italic is also used to indicate URLs, macro package
names, comments in examples, and the first mention of terms.
% , $ , #
ar e used in some examples as the C shell prompt ( % ) and as the Bourne shell
or Korn shell prompt ( $ ). # is the prompt for the root user.
? , >
ar e used in some examples as the C shell secondary prompt ( ? ) and as the
Bour ne shell or Korn shell secondary prompt ( > ).
pr ogram (N )
indicates the “manpage” for pr ogram in section N of the online manual. For
example, echo (1) means the entry for the echo command.
[ ] surr ound optional elements in a description of syntax. (The brackets them-
selves should never be typed.) Note that many commands show the argu-
ment [ files ]. If a filename is omitted, standard input (usually the keyboard) is
assumed. End keyboard input with an end-of-file character.
EOF
indicates the end-of-file character (normally CTRL-D ).
ˆx , CTRL-x
indicates a “control character,” typed by holding down the Control key and
the x key for any key x.
| is used in syntax descriptions to separate items for which only one alternative
may be chosen at a time.
→ is used at the bottom of a right-hand page to show that the current entry con-
tinues on the next page. The continuation is marked by a ←.
A final word about syntax. In many cases, the space between an option and its
argument can be omitted. In other cases, the spacing (or lack of spacing) must be
followed strictly. For example, -wn (no intervening space) might be interpreted dif-
fer ently fr om -w n . It’s important to notice the spacing used in option syntax.
Pr eface
18 October 2001 14:40
xvHow to Contact Us
We have tested and verified all of the information in this book to the best of our
ability, but you may find that features have changed (or even that we have made
mistakes!). Please let us know about any errors you find, as well as your sugges-
tions for future editions, by writing:
O’Reilly & Associates, Inc.
101 Morris Street
Sebastopol, CA 95472
1-800-998-9938 (in the United States or Canada)
1-707-829-0515 (international/local)
1-707-829-0104 (fax)
You can also send us messages electronically. To be put on the mailing list or
request a catalog, send email to:
info@or eilly.com
To ask technical questions or comment on the book, send email to:
bookquestions@or eilly.com
We have a web site for the book, where we’ll list examples, errata, and any plans
for future editions. You can access this page at:
http://www.or eilly.com/catalog/unixnut3/
Acknowledgments
Thanks to Yosef Gold for letting me share his office, allowing me to work effi-
ciently and productively. Deb Cameron revised Chapter 7. Thanks to Gigi
Estabr ook at O’Reilly & Associates for her help and support. Thanks also to Frank
Willison for managing the project.
Good reviewers make for good books, even though they also make for more work
for the author. I would like to thank Glenn Barry (Sun Microsystems) for a number
of helpful comments. Nelson H. F. Beebe (University of Utah Department of Math-
ematics) went through the book with a fine-tooth comb; it is greatly improved for
his efforts. A special thanks to Brian Kernighan (Bell Labs) for his review and com-
ments. The troff -r elated chapters in particular benefited from his authority and
expertise, as did the rest of the book (not to mention much of Unix!). Nelson H. F.
Beebe, Dennis Ritchie (Bell Labs), and Peter H. Salus (Unix historian and author)
pr ovided considerable help in putting together the Bibliography.
Finally, much thanks to my wonderful wife Miriam; without her love and support
this project would not have been possible.
Ar nold Robbins
Nof Ayalon, ISRAEL
April 1999
xvi
18 October 2001 14:40
PrefacePART I
Commands and Shells
Part I presents a summary of Unix commands of interest to users and program-
mers. It also describes the three major Unix shells, including special syntax and
built-in commands.
• Chapter 1, Intr oduction
• Chapter 2, Unix Commands
• Chapter 3, The Unix Shell: An Overview
• Chapter 4, The Bourne Shell and Korn Shell
• Chapter 5, The C Shell
18 October 2001 15:3818 October 2001 15:38Introduction
The Unix operating system originated at AT&T Bell Labs in the early 1970s. System
V Release 4 came from USL (Unix System Laboratories) in the late 1980s. Unix
source code is currently owned by SCO (the Santa Cruz Operation). Because Unix
was able to run on differ ent hardwar e fr om dif ferent vendors, developers were
encouraged to modify Unix and distribute it as their own value-added version.
Separate Unix traditions evolved as a result: USL’s System V, Berkeley Software
Distribution (BSD, from the University of California, Berkeley), Xenix, etc.
Merging the Traditions
Today, Unix developers have blended the differ ent traditions into a more standard
version. (The ongoing work on POSIX, an international standard based on System
V and BSD, is influencing this movement.) This quick refer ence describes two sys-
tems that offer what many people consider to be a “more standard” version of
Unix: System V Release 4 (SVR4) and Solaris 7. *
SVR4, which was developed jointly by USL (then a division of AT&T) and Sun
Micr osystems, merged features from BSD and SVR3. This added about two dozen
BSD commands (plus some new SVR4 commands) to the basic Unix command set.
In addition, SVR4 provides a BSD Compatibility Package, a kind of “second string”
command group. This package includes some of the most fundamental BSD com-
mands, and its purpose is to help users of BSD-derived systems make the transi-
tion to SVR4.
Solaris 7 is a distributed computing environment from Sun Microsystems. The his-
tory of Solaris 7 is more complicated.
* Many other Unix-like systems, such as Linux and those based on 4.4BSD-Lite, also offer standards com-
pliance and compatibility with SVR4 and earlier versions of BSD. Covering them, though, is outside the
scope of this book.
3
18 October 2001 14:41
CHAPTER 1Solaris 7 includes the SunOS 5.7 operating system, plus additional features such as
the Common Desktop Environment and Java tools. SunOS 5.7, in turn, merges
SunOS 4.1 and SVR4. In addition, the kernel has received significant enhancement
to support multiprocessor CPUs, multithreaded processes, kernel-level threads, and
dynamic loading of device drivers and other kernel modules. Most of the user-
level (and system administration) content comes from SVR4. As a result, Solaris 7 is
based on SVR4 but contains additional BSD/SunOS features. To help in the transi-
tion from the old (largely BSD-based) SunOS, Solaris provides the BSD/SunOS
Compatibility Package and the Binary Compatibility Package.
Sun has made binary versions of Solaris for the SPARC and Intel architectur es avail-
able for “free,” for noncommercial use. You pay only for the media, shipping, and
handling. To find out more, see http://www.sun.com/developer.
Bundling
Another issue affecting Unix systems is the idea of bundling. Unix has many fea-
tur es—sometimes more than you need to use. Nowadays, Unix systems are often
split, or bundled, into various component packages. Some components are
included automatically in the system you buy; others are optional; you get them
only if you pay extra. Bundling allows you to select only the components you
need. Typical bundling includes the following:
Basic system
Basic commands and utilities
Pr ogramming
Compilers, debuggers, and libraries
Text processing
troff , macr os, and related tools
Windowing
Graphical user interfaces such as OPEN LOOK, Motif, and CDE—the Com-
mon Desktop Environment
Bundling depends on the vendor. For example, Solaris comes with text-processing
tools. For others, they are an extra-cost option. Similarly, some vendors ship com-
pilers, and others don’t.
Solar is Installation Levels and Bundling
When you (or your system administrator) first install Solaris, you have the choice
of three levels of installation:
End User System Support
This is the simplest system.
Developer System Support
This adds libraries and header files for software development.
4
18 October 2001 14:41
Chapter 1 – IntroductionNote that many commands discussed in this book (such as make and the SCCS
suite) won’t be on your system if all you’ve done is an end user install. If you can
af ford the disk space, do at least a developer install.
For support issues and publicly released patches to Solaris, the web starting point
is http://sunsolve.sun.com.
Solaris does not come with C or C++ compilers; these are available at extra cost
fr om Sun. The GNU C compiler (which includes C++), and other free software
compiled specifically for Solaris, can be downloaded from http://www.sunfr ee-
war e.com. Although it does not come with pic , Solaris does include a modern ver-
sion of troff and its companion tools.
What’s in the Quick Reference
This guide presents the major features of generic SVR4, plus a few extras from the
compatibility packages and from Solaris 7. In addition, this guide presents chapters
on emacs and RCS. Although they are not part of the standard SVR4 distribution,
they are found on many Unix systems because they are useful add-ons.
But keep in mind: if your system doesn’t include all the component packages,
ther e will be commands in this book you won’t find on your system.
The summary of Unix commands in Chapter 2, Unix Commands, makes up a large
part of this book. Only user/programmer commands are included; administrative
commands are ignor ed. Chapter 2 describes the following set:
• Commands and options in SVR4
• Selected commands from the compatibility packages and from Solaris 7, such
as the Java-related tools
• “Essential” tools for which source and/or binaries are available via the Internet
Solaris users should note that the following commands are either unbundled or
unavailable:
cb
cscope
pic
cc
ctrace
cflow
cxref
cof2elf
lprof
Appendix B, Obsolete Commands, describes SVR4 commands that are obsolete.
These commands still ship with SVR4 or Solaris, but their functionality has been
superseded by other commands or technologies.
What’s in the Quick Reference
18 October 2001 14:41
5
Entir e Distribution
This adds many optional facilities, including support for many non-English
languages and character sets.Beg inner’s Guide
If you’re just beginning to work on a Unix system, the abundance of commands
might prove daunting. To help orient you, the following lists present a small sam-
pling of commands on various topics.
Communication
ftp
login
mailx
rlogin
talk
telnet
vacation
File transfer protocol.
Sign on to Unix.
Read or send mail.
Sign on to remote Unix.
Write to other terminals.
Connect to another system.
Respond to mail automatically.
Compar isons
cmp
comm
diff
diff3
dircmp
sdiff
Compar e
Compar e
Compar e
Compar e
Compar e
Compar e
two files, byte by byte.
items in two sorted files.
two files, line by line.
thr ee files.
dir ectories.
two files, side by side.
File Management
cat
cd
chmod
cp
csplit
file
head
ln
ls
mkdir
more
mv
pwd
rcp
rm
rmdir
split
6
18 October 2001 14:41
Concatenate files or display them.
Change directory.
Change access modes on files.
Copy files.
Br eak files at specific locations.
Deter mine a file’s type.
Show the first few lines of a file.
Cr eate filename aliases.
List files or directories.
Cr eate a dir ectory.
Display files by screenful.
Move or rename files or directories.
Print working directory.
Copy files to remote system.
Remove files.
Remove directories.
Split files evenly.
Chapter 1 – IntroductionShow the last few lines of a file.
Count lines, words, and characters.
tail
wc
Miscellaneous
Make posters from words.
Arbitrary precision calculator.
Display calendar.
Check for reminders.
Clear the screen.
Get information on a command.
Reduce a job’s priority.
Pr eserve a running job after logging out.
Set your login password.
Pr oduce a transcript of your login session.
Report misspelled words.
Become a superuser.
banner
bc
cal
calendar
clear
man
nice
nohup
passwd
script
spell
su
Pr inting
cancel
lp
lpstat
pr
Cancel a printer request.
Send to the printer.
Get printer status.
For mat and paginate for printing.
Prog ramming
cb
cc
cflow
ctags
ctrace
cxref
lint
ld
lex
make
od
strip
truss
yacc
C source code “beautifier.”
C compiler.
C function flowchart.
C function refer ences (for vi ).
C debugger using function call tracing.
C cross-r efer ences.
C program analyzer.
Loader.
Lexical analyzer generator.
Execute commands in a specified order.
Dump input in various formats.
Remove data from an object file.
Trace signals and system calls.
Parser generator. Can be used with lex .
Beginner’s Guide
18 October 2001 14:41
7Sear ching
Extended version of grep .
Search files for literal words.
Search the system for filenames.
Search files for text patterns.
Search binary files for text patterns.
egrep
fgrep
find
grep
strings
Shell Prog ramming
echo
expr
line
printf
sleep
test
Repeat command-line arguments on the output.
Per form arithmetic and comparisons.
Read a line of input.
For mat and print command-line arguments.
Pause during processing.
Test a condition.
Storage
compress
cpio
gunzip
gzcat
gzip
tar
uncompress
zcat
Compr ess files to free up space.
Copy archives in or out.
Expand compressed ( .gz and .Z ) files (preferr ed).
Display contents of compressed files (may be linked to zcat ).
Compr ess files to free up space (preferr ed).
Tape archiver.
Expand compressed ( .Z ) files.
Display contents of compressed files.
System Status
at
chgrp
chown
crontab
date
df
du
env
finger
kill
ps
stty
who
8
18 October 2001 14:41
Execute commands later.
Change file group.
Change file owner.
Automate commands.
Display or set date.
Show free disk space.
Show disk usage.
Show environment variables.
Display information about users.
Terminate a running command.
Show processes.
Set or display terminal settings.
Show who is logged on.
Chapter 1 – IntroductionTe xt Processing
Select columns for display.
Line editor underlying vi .
Pr oduce roughly uniform line lengths.
Merge differ ent columns into a database.
New version of awk (patter n-matching language for textual database files).
Merge columns or switch order.
Noninteractive text editor.
Sort or merge files.
Translate (redefine) characters.
Find repeated or unique lines in a file.
Visual text editor.
Pr ocess many arguments in manageable portions.
nroff and troff
In SVR4, all but deroff ar e in the compatibility packages. Solaris comes bundled
with a modern version of troff and its prepr ocessors ( pic isn’t included).
deroff
eqn
nroff
pic
refer
tbl
troff
Remove troff codes.
Pr eprocessor for equations.
For matter for terminal display.
Pr eprocessor for line graphics.
Pr eprocessor for bibliographic refer ences.
Pr eprocessor for tables.
For matter for typesetting (including PostScript printers).
Guide for Users of BSD-Der ived Systems
Those of you making a transition to SVR4 from a BSD-derived system should note
that BSD commands reside in your system’s /usr/ucb dir ectory. This is especially
important when using certain commands, because the compatibility packages
include several commands that have an existing counterpart in SVR4, and the two
versions usually work differ ently. If your PATH variable specifies /usr/ucb befor e
the SVR4 command directories (e.g., /usr/bin ), you’ll end up running the BSD ver-
sion of the command. Check your PATH variable (use echo $PATH ) to make sure
you get what you want. The commands that have both BSD and SVR4 variants are:
basename
cc
chown
deroff
df
du
echo
groups
ld
ln
ls
ps
stty
sum
test
tr
vacation
Guide for Users of BSD-Derived Systems
18 October 2001 14:41
9
cut
ex
fmt
join
nawk
paste
sed
sort
tr
uniq
vi
xargsThis book describes the SVR4 version of these commands. (Often, the standard
Solaris version of a command includes features or options from the BSD version as
well.)
Solar is: Standard Compliant Prog rams
Ther e ar e a number of differ ent standards that specify the behavior of portable
pr ograms in a Unix-like environment. POSIX 1003.2 and XPG4 are two of the
mor e widely known ones. Where the behavior specified by a standard differs from
the historical behavior provided by a command, Solaris provides a differ ent ver-
sion of the command in /usr/xpg4/bin . These commands are listed here, but not
otherwise covered in this book, as most users typically do not have /usr/xpg4/bin
in their search paths. The manual entries for each command discuss the differ-
ences between the /usr/bin version and the /usr/xpg4/bin version.
ar
awk
basename
cp
ctags
date
delta
df
du
10
18 October 2001 14:41
ed
edit
env
expr
get
grep
id
ls
m4
make
more
nice
nl
nm
nohup
od
pr
rm
sccs
sed
sort
stty
tail
tr
who
Chapter 1 – Intr oductionCHAPTER 2
This chapter presents the Unix commands of interest to users and programmers.
Most of these commands appear in the “Commands” section of the User’s Refer-
ence Manual and Pr ogrammer’s Refer ence Manual for Unix System V Release 4
(SVR4). This chapter describes additional commands from the compatibility pack-
ages; these commands are prefixed with /usr/ucb , the name of the directory in
which they reside. Also included here are commands specific to Solaris 7, such as
those for using Java and the occasional absolutely essential program available from
the Internet.
Particularly on Solaris, useful commands are spr ead acr oss a number of differ ent
“bin” directories, such as /usr/ccs/bin , /usr/dt/bin , /usr/java/bin , and /usr/
openwin/bin , and not just /usr/bin and /usr/ucb . In such cases, this book provides
the full pathname, e.g., /usr/ccs/bin/make . In some instances, a symbolic link for
a command exists in /usr/bin to the actual command elsewhere.
Each entry is labeled with the command name on the outer edge of the page. The
syntax line is followed by a brief description and a list of all available options.
Many commands come with examples at the end of the entry. If you need only a
quick reminder or suggestion about a command, you can skip directly to the
examples.
Note: comments such as “SVR4 only,” or “Solaris only,” compare only those two
systems. Many “Solaris only” commands and/or options are commonly available
on other Unix systems as well.
Some options can be invoked only by a user with special system privileges. Such a
person is often called a “superuser.” This book uses the term privileged user
instead.
Typographic conventions for describing command syntax are listed in the Preface.
For additional help in locating commands, see the Index.
11
18 October 2001 14:52
Unix CommandsAlphabetical Summary of Commands
addbib
addbib [ options ] database
Part of the refer suite of programs. See Chapter 17, tr off Prepr o-
cessors.
admin
/usr/ccs/bin/admin [ options ] files
An SCCS command. See Chapter 18, The Source Code Control Sys-
tem.
appletviewer /usr/java/bin/appletviewer [ options ] urls
Solaris only. Connect to the specified urls and run any Java
applets they specify in their own windows, outside the context of
a web browser.
Options
-debug
Run the applet viewer from within the Java debugger, jdb .
-encoding name
Specify the input HTML file encoding.
-J opt
Pass opt on to the java command. opt should not contain
spaces; use multiple -J options if necessary.
apropos
apropos keywords
Look up one or more keywor ds in the online manpages. Same as
man -k . See also whatis.
ar
/usr/ccs/bin/ar [ -V ] key [ args ] [ posname ] archive [ files ]
Maintain a group of files that are combined into a file ar chive.
Used most commonly to create and update library files as used by
the loader ( ld ). Only one key letter may be used, but each can be
combined with additional ar gs (with no separations between).
posname is the name of a file in ar chive. When moving or replac-
ing files, you can specify that they be placed before or after pos-
name. See lorder in Appendix B, Obsolete Commands, for
another example. -V prints the version number of ar on standard
err or.
12
18 October 2001 14:52
Chapter 2 – Unix CommandsOn Solaris, key and ar gs can be preceded with a - , as though
they were regular options.
ar
Ke y
Delete files fr om ar chive.
Move files to end of ar chive.
Print files in ar chive.
Append files to ar chive.
Replace files in ar chive.
List the contents of ar chive or list the named files.
Extract contents from ar chive or only the named files.
d
m
p
q
r
t
x
Args
a
b
c
C
i
s
T
u
v
Use with r or m to place files in the archive after posname.
Same as a but before posname.
Cr eate ar chive silently.
Don’t replace existing files of the same name with the one
extracted from the archive. Useful with T . Solaris only.
Same as b .
Force regeneration of ar chive symbol table (useful after run-
ning strip or mcs ).
Truncate long filenames when extracting onto filesystems
that don’t support long filenames. Without this operation,
extracting files with long filenames is an error. Solaris only.
Use with r to replace only files that have changed since
being put in ar chive.
Verbose; print a description.
Example
Update the versions of object files in mylib.a with the ones in the
curr ent dir ectory. Any files in mylib.a that are not in the current
dir ectory ar e not replaced.
ar r mylib.a *.o
/usr/ccs/bin/as [ options ] files
as
Generate an object file from each specified assembly language
source file. Object files have the same root name as source files
but replace the .s suf fix with .o . Ther e may be additional system-
specific options. See also dis.
→
Alphabetical Summary of Commands — as
18 October 2001 14:52
13as
←
Options
-m Run m4 on file.
-n Turn off optimization of long/short addresses.
-o objfile
Place output in object file objfile (default is file .o ).
-Qc Put the assembler’s version number in the object file (when c
= y ); default is not to put it (c = n ).
-R Remove file upon completion.
-T Force obsolete assembler directives to be obeyed.
-V Display the version number of the assembler.
-Y [ key ,] dir
Search directory dir for the m4 pr eprocessor (if key is m ), for
the file containing predefined macros (if key is d ), or for both
(if key is omitted).
at
at options1 time [ date ] [ + increment ]
at options2 [ jobs ]
Execute commands entered on standard input at a specified time
and optional date. (See also batch and cronta b.) End input with
EOF. time can be formed either as a numeric hour (with optional
minutes and modifiers) or as a keyword. date can be formed
either as a month and date, as a day of the week, or as a special
keyword. incr ement is a positive integer followed by a keyword.
See the following lists for details.
Options1
-c
Use the C shell to execute the job. Solaris only.
-f file
Execute commands listed in file.
-k Use the Korn shell to execute the job. Solaris only.
-m Send mail to user after job is completed.
-q queuename
Schedule the job in queuename. Values for queuename ar e
the lowercase letters a thr ough z . Queue a is the default
queue for at jobs. Queue b is the queue for batch jobs.
Queue c is the queue for cron jobs. Solaris only.
14
18 October 2001 14:52
Chapter 2 – Unix Commands-s
Use the Bourne shell to execute the job. Solaris only.
at
-t time
Run the job at time, which is in the same format as allowed
by touch . Solaris only.
Options2
Report all jobs that are scheduled for the invoking user or, if
jobs ar e specified, report only for those. See also atq.
-r Remove specified jobs that were previously scheduled. To
remove a job, you must be a privileged user or the owner of
the job. Use -l first to see the list of scheduled jobs. See also
atr m.
-l
Time
hh:mm [ modifiers ]
Hours can have one or two digits (a 24-hour clock is
assumed by default); optional minutes can be given as one
or two digits; the colon can be omitted if the format is h, hh,
or hhmm; e.g., valid times are 5, 5:30, 0530, 19:45. If modi-
fier am or pm is added, time is based on a 12-hour clock. If
the keyword zulu is added, times correspond to Greenwich
Mean Time (UTC).
midnight | noon | now
Use any one of these keywords in place of a numeric time.
now must be followed by an incr ement.
Date
month num [ , year ]
month is one of the 12 months, spelled out or abbreviated to
their first three letters; num is the calendar day of the month;
year is the four-digit year. If the given month occurs before
the current month, at schedules that month next year.
day One of the seven days of the week, spelled out or abbrevi-
ated to their first three letters.
today | tomorrow
Indicate the current day or the next day. If date is omitted,
at schedules today when the specified time occurs later than
the current time; otherwise, at schedules tomorrow .
Increment
Supply a numeric increment if you want to specify an execution
time or day relative to the current time. The number should pre-
cede any of the keywords minute , hour , day , week , month , or year
(or their plural forms). The keyword next can be used as a syn-
onym of + 1 .
→
Alphabetical Summary of Commands — at
18 October 2001 14:52
15Examples
at
←
Note that the first two commands are equivalent:
at
at
at
at
at
atq
1945 pm December 9
7:45pm Dec 9
3 am Saturday
now + 5 hours
noon next day
atq [ options ] [ users ]
List jobs created by the at command that are still in the queue.
Nor mally, jobs are sorted by the order in which they execute.
Specify the users whose jobs you want to check. If no users ar e
specified, the default is to display all jobs if you’re a privileged
user; otherwise, only your jobs are displayed.
Options
atr m
-c Sort the queue according to the time the at command was
given.
-n Print only the total number of jobs in queue.
atrm [ options ] [ users | jobIDs ]
Remove jobs queued with at that match the specified jobIDs. A
privileged user may also specify the users whose jobs are to be
removed.
Options
awk
-a Remove all jobs belonging to the current user. (A privileged
user can remove all jobs.)
-f Remove jobs unconditionally, suppressing all information
regarding removal.
-i Pr ompt for y (r emove the job) or n (do not remove).
awk [ options ] [ program ] [ var=value ...] [ files ]
Use the pattern-matching pr ogram to process the specified files.
awk has been replaced by nawk (ther e’s also a GNU version called
gawk ). pr ogram instructions have the general form:
pattern { procedure }
16
18 October 2001 14:52
Chapter 2 – Unix Commandspatter n and pr ocedure ar e optional. When specified on the com-
mand line, pr ogram must be enclosed in single quotes to prevent
the shell from interpreting its special symbols. Any variables spec-
ified in pr ogram can be assigned an initial value by using com-
mand-line arguments of the form var=value . See Chapter 11, The
awk Programming Language, for more infor mation (including
examples) on awk .
awk
Options
-f file
Use program instructions contained in file, instead of specify-
ing pr ogram on the command line.
-Fc Tr eat input file as fields separated by character c. By default,
input fields are separated by runs of spaces and/or tabs.
banner
banner characters
Print characters as a poster on the standard output. Each word
supplied must contain ten characters or less.
basename pathname [ suffix ]
basename
Given a pathname, strip the path prefix and leave just the file-
name, which is printed on standard output. If specified, a file-
name suf fix (e.g., .c ) is removed also. basename is typically
invoked via command substitution ( ‘ ... ‘ ) to generate a filename.
See also dir name.
The Solaris version of basename allows the suffix to be a pattern
of the form accepted by expr . See the entry for expr for more
details.
Example
Given the following fragment from a Bourne shell script:
ofile=output_file
myname="‘basename $0‘"
echo "$myname: QUITTING: can’t open $ofile" 1>&2
exit 1
If the script is called do_it , the following message would be
printed on standard error:
do_it: QUITTING: can’t open output_file
Alphabetical Summary of Commands — basename
18 October 2001 14:52
17batch
batch
Execute commands entered on standard input. End with EOF.
Unlike at , which executes commands at a specific time, batch
executes commands one after another (waiting for each one to
complete). This avoids the potentially high system load caused by
running several background jobs at once. See also at.
batch is equivalent to at -q b -m now .
Example
$ batch
sort in > out
troff -ms bigfile > bigfile.ps
EOF
bc
bc [ options ] [ files ]
Interactively perfor m arbitrary-pr ecision arithmetic or convert
numbers from one base to another. Input can be taken from files
or read from the standard input. To exit, type quit or EOF.
Options
-c Do not invoke dc ; compile only. (Since bc is a prepr ocessor
for dc , bc nor mally invokes dc .)
-l Make available functions from the math library.
bc is a language (and compiler) whose syntax resembles that of
C. bc consists of identifiers, keywords, and symbols, which are
briefly described here. Examples follow at the end.
Identifier s
An identifier is a single character, consisting of the lowercase let-
ters a–z. Identifiers are used as names for variables, arrays, and
functions. Within the same program you may name a variable, an
array, and a function using the same letter. The following identi-
fiers would not conflict:
x
x[i]
x(y,z)
Variable x .
Element i of array x . i can range from 0 to 2047 and
can also be an expression.
Call function x with parameters y and z .
Input/Output Keywords
ibase , obase , and scale each store a value. Typing them on a line
by themselves displays their current value. More commonly, you
18
18 October 2001 14:52
Chapter 2 – Unix Commandswould change their values through assignment. Letters A–F are
tr eated as digits whose values are 10–15.
bc
ibase = n
Numbers that are input (e.g., typed) are read as base n
(default is 10).
obase = n
Numbers displayed are in base n (default is 10). Note: once
ibase has been changed from 10, use digit “A” to restor e
ibase or obase to decimal.
scale = n
Display computations using n decimal places (default is 0,
meaning that results are truncated to integers). scale is nor-
mally used only for base-10 computations.
Statement Keywords
A semicolon or a newline separates one statement from another.
Curly braces are needed only when grouping multiple statements.
if (rel-expr) {statements}
Do one or more statements if relational expression rel-expr is
true; for example:
if (x == y) i = i + 1
while (rel-expr) {statements}
Repeat one or more statements while rel-expr is true; for
example:
while (i > 0) {p = p*n; q = a/b; i = i-1}
for (expr1; rel-expr; expr2) {statements}
Similar to while ; for example, to print the first 10 multiples of
5, you could type:
for (i = 1; i <= 10; i++) i*5
break
Terminate a while or for statement.
quit
Exit bc .
Function Keywords
define j(k) {
Begin the definition of function j having a single argument k.
Additional arguments are allowed, separated by commas.
Statements follow on successive lines. End with a } .
→
Alphabetical Summary of Commands — bc
18 October 2001 14:52
19bc
←
auto x, y
Set up x and y as variables local to a function definition, ini-
tialized to 0 and meaningless outside the function. Must
appear first.
return(expr)
Pass the value of expression expr back to the program.
Retur n 0 if ( expr ) is left off. Used in function definitions.
sqrt(expr)
Compute the square root of expression expr.
length(expr)
Compute how many digits are in expr.
scale(expr)
Same, but count only digits to the right of the decimal point.
Math Librar y Functions
These are available when bc is invoked with -l . Library functions
set scale to 20.
s(angle)
Compute the sine of angle, a constant or expression in radi-
ans.
c(angle)
Compute the cosine of angle, a constant or expression in
radians.
a(n)
Compute the arctangent of n, retur ning an angle in radians.
e(expr)
Compute e to the power of expr.
l(expr)
Compute natural log of expr.
j(n, x)
Compute Bessel function of integer order n.
Operator s
These consist of operators and other symbols. Operators can be
arithmetic, unary, assignment, or relational.
Arithmetic
Unary
Assignment
Relational
20
18 October 2001 14:52
+ -
- ++ --
*
/
%
ˆ
=+ =- =* =/ =% =ˆ =
<
Chapter 2 – Unix Commands
<= >
>= == !=Other Symbols
/*
bc
*/
Enclose comments.
( ) Contr ol the evaluation of expressions (change precedence).
Can also be used around assignment statements to force the
result to print.
{ } Used to group statements.
[ ] Array index.
"text"
Use as a statement to print text.
Examples
Note that when you type some quantity (a number or expres-
sion), it is evaluated and printed, but assignment statements pro-
duce no display:
ibase = 8
20
16
obase = 2
20
10000
ibase = A
scale = 3
8/7
1.001001000
obase = 10
8/7
1.142
Octal input
Evaluate this octal number
Terminal displays decimal value
Display output in base 2 instead of base 10
Octal input
Terminal now displays binary value
Restor e base 10 input
Truncate results to three places
Evaluate a division
Oops! Forgot to reset output base to 10
Input is decimal now, so "A" isn’t needed
Terminal displays result (truncated)
The following lines show the use of functions:
define p(r,n){
auto v
v = rˆn
return(v)}
scale = 5
x = p(2.5,2)
x
6.25
length(x)
3
scale(x)
2
Function p uses two arguments
v is a local variable
r raised to the n power
Value retur ned
x = 2.5 ˆ 2
Print value of x
Number of digits
Number of places to right of decimal point
bdiff file1 file2 [ options ]
bdif f
Compar e file1 with file2 and report the differing lines. bdiff splits
the files and then runs diff , allowing it to act on files that would
→
Alphabetical Summary of Commands — bdif f
18 October 2001 14:52
21bdif f
←
nor mally be too large to handle. bdiff reads standard input if one
of the files is – . See also dif f.
Options
bif f
n Split each file into n-line segments (default is 3500). This
option must be listed first.
-s Suppr ess err or messages from bdiff (but not from diff ).
/usr/ucb/biff [ y | n ]
Turn mail notification on or off. With no arguments, biff indi-
cates the current status.
When mail notification is turned on, each time you get incoming
mail, the bell rings, and the first few lines of each message are
displayed.
cal
cal [[ month ] year ]
With no arguments, print a calendar for the current month. Other-
wise, print either a 12-month calendar (beginning with January)
for the given year or a one-month calendar of the given month
and year. month ranges from 1 to 12; year ranges from 1 to 9999.
Examples
cal 12 1999
cal 1999 > year_file
calendar
calendar [ option ]
Read your calendar file and display all lines that contain the cur-
rent date. The calendar file is like a memo board. You create the
file and add entries like the following:
5/4
may 6
meeting with design group at 2 pm
pick up anniversary card on way home
When you run calendar on May 4, the first line is displayed. cal-
endar can be automated by using crontab or at , or by including it
in your startup files .profile or .login .
Option
–
22
18 October 2001 14:52
Allow a privileged user to invoke calendar for all users,
searching each user’s login directory for a file named calen-
dar . Entries that match are sent to a user via mail. This fea-
Chapter 2 – Unix Commandstur e is intended for use via cron . It is not recommended in
networked environments with large user bases.
cancel [ options ] [ printer ]
calendar
cancel
Cancel print requests made with lp . The request can be specified
by its ID, by the printer on which it is currently printing, or by
the username associated with the request (only privileged users
can cancel another user’s print requests). Use lpstat to determine
either the id or the printer to cancel.
Options
id
Cancel print request id.
-u user
Cancel request associated with user.
cat [ options ] [ files ]
cat
Read one or more files and print them on standard output. Read
standard input if no files ar e specified or if – is specified as one of
the files; end input with EOF. Use the > shell operator to combine
several files into a new file; >> appends files to an existing file.
Options
-b Like -n , but don’t number blank lines. Solaris only.
-e Print a $ to mark the end of each line. Must be used with -v .
-n Number lines. Solaris only.
-s Suppr ess messages about nonexistent files. (Note: On some
systems, -s squeezes out extra blank lines.)
-t Print each tab as ˆI and each form feed as ˆL . Must be used
with -v .
-u Print output as unbuffer ed (default is buffer ed in blocks or
scr een lines).
-v Display control characters and other nonprinting characters.
Examples
cat
cat
cat
cat
cat
ch1
ch1 ch2 ch3 > all
note5 >> notes
> temp1
> temp2 << STOP
Display a file
Combine files
Append to a file
Cr eate file at terminal; end with EOF
Cr eate file at terminal; end with STOP
Alphabetical Summary of Commands — cat
18 October 2001 14:52
23cb
cb [ options ] [ files ]
C program “beautifier” that formats files using proper C program-
ming structure.
Options
-j
Join split lines.
-l length
Split lines longer than length.
-s Standardize code to style of Kernighan and Ritchie in The C
Pr ogramming Language.
-V Print the version of cb on standard error.
Example
cb -l 70 calc.c > calc_new.c
cc
/usr/ccs/bin/cc [ options ] files
Compile one or more C source files ( file .c ), assembler source
files ( file .s ), or prepr ocessed C source files (file .i ). cc automati-
cally invokes the loader ld (unless -c is supplied). In some cases,
cc generates an object file having a .o suf fix and a corresponding
root name. By default, output is placed in a.out . cc accepts addi-
tional system-specific options.
Notes
• Add /usr/ccs/bin to your PATH to use the C compiler and
other C Compilation System tools. This command runs the
ANSI C compiler; use /usr/bin/cc if you want to run the
compiler for pre-ANSI C.
• Solaris 7 does not come with a C compiler. You must pur-
chase one separately from Sun, or download the GNU C
Compiler (GCC) from http://www.sunfr eewar e.com.
• Options for cc vary wildly across Unix systems. We have
chosen here to document only those options that are com-
monly available. You will need to check your local docu-
mentation for complete information.
•
Usually, cc passes any unrecognized options to the loader,
ld .
24
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
-c
cc
Suppr ess loading and keep any object files that were pro-
duced.
-Dname [ =def ]
-E Run only the macro prepr ocessor, sending results to standard
output.
-g Generate more symbol-table information needed for debug-
gers.
Supply a #define dir ective, defining name to be def or, if no
def is given, the value 1 .
-Idir
Search for include files in directory dir (in addition to stan-
dard locations). Supply a -I for each new dir to be searched.
-lname
Link source file with library files lib name .so or lib name .a .
-Ldir
Like -I , but search dir for library archives.
-o file
Send object output to file instead of to a.out .
-O Optimize object code (produced from .c or .i files).
-p Generate benchmark code to count the times each routine is
called. File mon.out is created, so prof can be used later to
pr oduce an execution profile.
-P Run only the prepr ocessor and place the result in file .i .
-S Compile (and optimize, if -O is supplied), but don’t assemble
or load; assembler output is placed in file .s .
-Uname
Remove definition of name, as if through an #undef dir ective.
Example
Compile xpop.c and load it with the X libraries:
cc -o xpop xpop.c -lXaw -lXmu -lXt -lX11
cd [ dir ]
cd
Change directory. cd is a built-in shell command. See Chapter 4,
The Bourne Shell and Korn Shell, and Chapter 5, The C Shell.
Alphabetical Summary of Commands — cd
18 October 2001 14:52
25cdc
/usr/ccs/bin/cdc -rsid [ option ] files
An SCCS command. See Chapter 18.
cde
Common Desktop Environment
Solaris only. The Common Desktop Environment (CDE) is the
default graphical user interface (GUI) on Solaris systems. Solaris 7
users may choose between CDE and OpenWindows, but Open-
Windows is marked as obsolete and not supported past Solaris 7.
Documenting CDE would requir e its own book and is beyond the
scope of this one. Instead, listed here are some of the more use-
ful individual CDE commands, which are kept in /usr/dt/bin .
(Commands for the Desktop.) In addition, a number of OpenWin-
dows commands are still useful. See the listing under openwin in
Appendix B.
Useful CDE Prog rams
The following CDE and Sun Desktop commands may be of inter-
est. Check the manpages for more infor mation.
answerbook2
dtaction
dtbuilder
dtcalc
dtcm
dterror.ds
dtfile_error
dticon
dtksh
dtmail
dtpad
dtprintinfo
dtscreen
dtterm
fdl
hotjava
sdtconvtool
sdtfind
sdtimage
sdtperfmeter
sdtprocess
26
18 October 2001 14:52
Sun hypertext documentation viewer.
Invoke CDE actions from within shell scripts.
CDE applications builder.
Onscr een scientific, logical, and financial calculator.
Calendar manager.
dtksh script for error notices and dialogues.
dtksh script for error dialogues.
Icon editor.
The “Desktop Korn shell,” a version of ksh93 .
Mail reader.
Simple text editor.
Print job manager.
Scr een savers.
Terminal emulator.
Font downloader utility for PostScript printers.
Java-based web browser.
GUI for iconv .
File finder.
Image viewer (PostScript, GIF, JPEG, etc.).
System perfor mance meter.
Pr ocess manager.
Chapter 2 – Unix Commandscflow [ options ] files
cflow
Pr oduce an outline (or flowchart) of external function calls for the
C, lex , yacc , assembler, or object files. cflow also accepts the cc
options -D , -I , and -U .
Options
-dn Stop outlining when nesting level n is reached.
-i_ Include functions whose names begin with _ .
-ix Include external and static data symbols.
-r
Invert the listing; show the callers of each function and sort
in lexicographical order by callee.
checkeq [ files ]
checkeq
Solaris only. Check nroff / troff input files for missing or unbal-
anced eqn delimiters. checkeq checks both .EQ / .EN pairs and
inline delimiters as indicated by the delim statement.
checknr [ options ] [ files ]
checknr
Solaris only. Check nroff / troff source files for mismatched
delimiters and unknown commands. It also checks for macros
that come in open/close pairs, such as .TS and .TE . With no files,
checks the standard input.
checknr works best when input is designed for its conventions:
\fP always ends a font change, and \s0 always restor es a point-
size change. checknr knows about the me and ms macr os.
Options
-amacros
Add new pairs of macros that come in open/close pairs. The
six characters repr esenting the new macros must immediately
follow the -a , e.g., -a.PS.PE for the pic macr os.
-ccommands
Don’t complain that the given commands ar e undefined.
String the command names together, as in -a . Useful if you
have your own macro package.
-f
Ignor e inline font changes ( \f ).
→
Alphabetical Summary of Commands — checknr
18 October 2001 14:52
27Ignor e inline point-size changes ( \s ).
checknr -s
chgrp chgrp [ options ] newgroup files
←
Change the ownership of one or more files to newgr oup. new-
gr oup is either a group ID number or a group name located in
/etc/group . You must own the file or be a privileged user to suc-
ceed with this command.
Options
chke y
-f Force error messages to be suppressed.
-h Change the group on symbolic links. Nor mally, chgrp acts
on the file refer enced by a symbolic link, not on the link
itself. (This option is not necessarily available on all Unix
systems.)
-R Recursively descend through the directory, including subdi-
rectories and symbolic links, setting the specified group ID
as it proceeds.
chkey [ options ]
Solaris only. Prompt for login password and use it to encrypt a
new key. See also ke ylog in and ke ylogout.
Options
-p
Reencrypt the existing secret key with the user’s login pass-
word.
-m mechanism
Change or reencrypt the secret key for the specified
mechanism.
(Mechanisms
ar e
those
allowed
by
nisauthconf (1).)
-s database
Update the given database, which is one of files , nis , or
nisplus .
chmod
chmod [ option ] mode files
Change the access mode of one or more files. Only the owner of
a file or a privileged user may change its mode. Create mode by
concatenating the characters from who, opcode, and per mission.
who is optional (if omitted, default is a ); choose only one opcode.
28
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
chmod
-f Suppr ess err or message upon failure to change a file’s mode.
-R Recursively descend directory arguments while setting
modes.
u
g
o
a
Who
User
Gr oup
Other
All (default)
Opcode
+
-
=
Add permission
Remove permission
Assign permission (and remove permission of the
unspecified fields)
Permission
r
w
x
s
t
u
g
o
l
Read
Write
Execute
Set user (or group) ID
Sticky bit; save text mode (file) or prevent removal of
files by nonowners (directory)
User’s present permission
Gr oup’s pr esent per mission
Other’s present permission
Mandatory locking
Alter natively, specify permissions by a three-digit sequence. The
first digit designates owner permission; the second, group permis-
sion; and the third, others permission. Permissions are calculated
by adding the following octal values:
4
2
1
Read
Write
Execute
→
Alphabetical Summary of Commands — chmod
18 October 2001 14:52
29chmod
←
Note: a fourth digit may precede this sequence. This digit assigns
the following modes:
4
2
1
Set user ID on execution
Set group ID on execution or set mandatory locking
Sticky bit
Examples
Add execute-by-user permission to file :
chmod u+x file
Either of the following assigns read-write-execute permission by
owner (7), read-execute permission by group (5), and execute-
only permission by others (1) to file :
chmod 751 file
chmod u=rwx,g=rx,o=x file
Any one of the following assigns read-only permission to file for
everyone:
chmod =r file
chmod 444 file
chmod a-wx,a+r file
Set the user ID, assign read-write-execute permission by owner,
and assign read-execute permission by group and others:
chmod 4755 file
chown
chown [ options ] newowner [ :newgroup ] files
Change the ownership of one or more files to newowner.
newowner is either a user ID number or a login name located in
/etc/passwd . The optional newgr oup is either a group ID number
(GID) or a group name located in the /etc/group file. When new-
gr oup is supplied, the behavior is to change the ownership of
one or more files to newowner and make it belong to newgr oup.
Note: some systems accept a period as well as the colon for sepa-
rating newowner and newgr oup. The colon is mandated by
POSIX; the period is accepted for compatibility with older BSD
systems.
Options
-f
30
18 October 2001 14:52
Force error messages to be suppressed.
Chapter 2 – Unix Commands-h Change the owner on symbolic links. Normally, chown acts
on the file refer enced by a symbolic link, not on the link
itself. (This option is not necessarily available on all Unix
systems.)
-R Recursively descend through the directory, including subdi-
rectories and symbolic links, resetting the ownership ID.
cksum
Solaris only. Calculate and print a cyclic redundancy check (CRC)
for each file. The CRC algorithm is based on the polynomial used
for Ethernet packets. For each file, cksum prints a line of the form:
sum count filename
Her e, sum is the CRC, count is the number of bytes in the file,
and filename is the file’s name. The name is omitted if standard
input is used.
clear
clear
Clear the terminal display.
cmp [ options ] file1 file2
cmp
Compar e file1 with file2. Use standard input if file1 or file2 is - .
See also comm and dif f. The exit codes are as follows:
0
1
2
Files are identical.
Files are dif ferent.
Files are inaccessible.
Options
-l For each differ ence, print the byte number in decimal and
the differing bytes in octal.
-s Work silently; print nothing, but retur n exit codes.
Example
Print a message if two files are the same (exit code is 0):
cmp -s old new && echo ’no changes’
Alphabetical Summary of Commands — cmp
18 October 2001 14:52
31
cksum [ files ]
chowncol
col [ options ]
A postpr ocessing filter that handles reverse linefeeds and escape
characters, allowing output from tbl (or nroff , occasionally) to
appear in reasonable form on a ter minal.
Options
-b Ignor e backspace characters; helpful when printing man-
pages.
-f Pr ocess half-line vertical motions, but not reverse line
motion. (Normally, half-line input motion is displayed on
the next full line.)
-p Print unknown escape sequences (normally ignored) as regu-
lar characters. This option can garble output, so its use is not
recommended.
-x Nor mally, col saves printing time by converting sequences of
spaces to tabs. Use -x to suppress this conversion.
Examples
Run file thr ough tbl and nroff , then capture output on screen by
filtering through col and more :
tbl file | nroff | col | more
Save manpage output in file .print , stripping out backspaces
(which would otherwise appear as ˆH ):
man file | col -b > file.print
comb
/usr/ccs/bin/comb [ options ] files
An SCCS command. See Chapter 18.
comm
comm [ options ] file1 file2
Compar e lines common to the sorted files file1 and file2. Thr ee-
column output is produced: lines unique to file1, lines unique to
file2, and lines common to both files. comm is similar to diff in
that both commands compare two files. In addition, comm can be
used like uniq ; that is, comm selects duplicate or unique lines
between two sorted files, whereas uniq selects duplicate or
unique lines within the same sorted file.
32
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
comm
Read the standard input.
-1 Suppr ess printing of Column 1.
-2 Suppr ess printing of Column 2.
-3 Suppr ess printing of Column 3.
–
-12 Print only lines in Column 3 (lines common to file1 and
file2).
-13 Print only lines in Column 2 (lines unique to file2).
-23 Print only lines in Column 1 (lines unique to file1).
Example
Compar e two lists of top-10 movies and display items that appear
in both lists:
comm -12 shalit_top10 maltin_top10
compress [ options ] [ files ]
compress
Reduce the size of one or more files using adaptive Lempel-Ziv
coding and move to file .Z . Restor e with uncompress or zcat .
With a filename of – , or with no files, compress reads standard
input.
Note: Unisys claims a patent on the algorithm used by compress .
Today, gzip is generally preferr ed for file compression.
Options
-bn Limit the number of bits in coding to n; n is 9–16, and 16 is
the default. A lower n pr oduces a larger, less densely com-
pr essed file.
-c Write to the standard output (do not change files).
-f Compr ess unconditionally; i.e., do not prompt before over-
writing files. Also, compress files even if the resulting file
would actually be larger.
-v Print the resulting percentage of reduction for files.
Alphabetical Summary of Commands — compr ess
18 October 2001 14:52
33cp
cp [ options ] file1 file2
cp [ options ] files directory
Copy file1 to file2, or copy one or more files to the same names
under dir ectory. If the destination is an existing file, the file is
overwritten; if the destination is an existing directory, the file is
copied into the directory (the directory is not overwritten). If one
of the inputs is a directory, use the -r option.
Options
-i Pr ompt for confirmation ( y for yes) before overwriting an
existing file.
-p Pr eserve the modification time and permission modes for the
copied file. (Normally cp supplies the permissions of the
invoking user.)
-r Recursively copy a directory, its files, and its subdirectories to
a destination dir ectory, duplicating the tree structure. (This
option is used with the second command-line format when
at least one of the source file arguments is a directory.) Bear
in mind that both symbolic and hard links are copied as real
files; the linking structure of the original tree is not pr e-
served.
Example
Copy two files to their parent directory (keep the same names):
cp outline memo ..
cpio
cpio control_options [ options ]
Copy file archives in from, or out to, tape or disk, or to another
location on the local machine. Each of the three control options,
-i , -o , or -p accepts differ ent options. (See also pax and tar.)
cpio -i [ options ] [ patterns ]
Copy in (extract) files whose names match selected patter ns.
Each pattern can include filename metacharacters from the
Bour ne shell. (Patterns should be quoted or escaped so they
ar e interpr eted by cpio , not by the shell.) If no pattern is
used, all files are copied in. During extraction, existing files
ar e not overwritten by older versions in the archive (unless
-u is specified).
cpio -o [ options ]
Copy out a list of files whose names are given on the stan-
dard input.
34
18 October 2001 14:52
Chapter 2 – Unix Commandscpio -p [ options ] directory
cpio
Copy files to another directory on the same system. Destina-
tion pathnames are interpr eted relative to the named dir ec-
tory.
Compar ison of Valid Options
Options available to the -i , -o , and -p options are shown respec-
tively in the first, second, and third row below. (The - is omitted
for clarity.)
i: 6
b B c C d E f H I k
m M r R s S t u v V
o: a A
B c C
H
L
M O
v V
p: a
d
l L m
P R
u v V
Options
-a Reset access times of input files.
-A Append files to an archive (must use with -O ).
-b Swap bytes and half-words. Words are 4 bytes.
-B Block input or output using 5120 bytes per record (default is
512 bytes per record).
-c Read or write header information as ASCII characters; useful
when source and destination machines are dif ferent types.
-C n
Like -B , but block size can be any positive integer n.
-d
Cr eate dir ectories as needed.
-E file
Extract filenames listed in file fr om the archive.
-f
Reverse the sense of copying; copy all files except those that
match patter ns.
-H format
Read or write header information according to for mat. Val-
ues for format are bar ( bar for mat header and file, read-only,
Solaris only), crc (ASCII header containing expanded device
numbers), odc (ASCII header containing small device num-
bers), ustar (IEEE/P1003 Data Interchange Standard header),
or tar ( tar header). Solaris also allows CRC , TAR , and USTAR .
-I file
Read file as an input archive.
-k
Skip corrupted file headers and I/O errors.
→
Alphabetical Summary of Commands — cpio
18 October 2001 14:52
35cpio
←
-l Link files instead of copying. Can be used only with -p .
-L Follow symbolic links.
-m Retain previous file-modification time.
-M msg
Print msg when switching media. Use variable %d in the
message as a numeric ID for the next medium. -M is valid
only with -I or -O .
-O file
Dir ect the output to file.
-P Pr eserve ACLs. Can be used only with -p . Solaris only.
-r Rename files interactively.
-R ID
Reassign file ownership and group information of extracted
files to the user whose login ID is ID (privileged users only).
-s Swap bytes.
-S Swap half-words.
-t Print a table of contents of the input (create no files). When
used with the -v option, resembles output of ls -l .
-u Unconditional copy; old files can overwrite new ones.
-v Print a list of filenames.
-V Print a dot for each file read or written (this shows cpio at
work without cluttering the screen).
-6 Pr ocess a PWB Unix 6th Edition archive format file. Useful
only with the -i option, mutually exclusive with -c and -H .
Examples
Generate a list of old files using find ; use list as input to cpio :
find . -name "*.old" -print | cpio -ocBv > /dev/rmt/0
Restor e fr om a tape drive all files whose name contains “save”
(subdir ectories ar e cr eated if needed):
cpio -icdv "*save*" < /dev/rmt/0
To move a directory tree:
find . -depth -print | cpio -padml /mydir
36
18 October 2001 14:52
Chapter 2 – Unix Commandscrontab [ file ]
crontab options [ user ]
cronta b
Run crontab on your current crontab file, or specify a crontab file
to add to the crontab directory. A privileged user can run crontab
for another user by supplying a user after any of the options.
A crontab file is a list of commands, one per line, that will exe-
cute automatically at a given time. Numbers are supplied before
each command to specify the execution time. The numbers
appear in five fields, as follows:
Minute
Hour
Day of month
Month
Day of week
0-59
0-23
1-31
1-12
0-6, with 0 = Sunday
Use a comma between multiple values, a hyphen to indicate a
range, and an asterisk to indicate all possible values. For exam-
ple, assuming the crontab entries below:
59 3 * * 5
0 0 1,15 * *
find / -print | backup_program
echo "Timesheets due" | mail user
The first command backs up the system files every Friday at 3:59
a.m., and the second command mails a reminder on the 1st and
15th of each month.
Options
-e Edit the user’s current crontab file (or create one).
-l List the user’s file in the crontab directory.
-r Delete the user’s file in the crontab directory.
cscope [ options ] files
cscope
Interactive utility for finding code fragments in one or more C,
lex , or yacc source files. cscope builds a symbol cross refer ence
(named cscope.out by default) and then calls up a menu. The
menu prompts the user to search for functions, macros, variables,
pr eprocessor directives, etc. Type ? to list interactive commands.
Subsequent calls to cscope rebuild the cross refer ence if needed
(i.e., if filenames or file contents have changed). Source filenames
can be stored in a file cscope.files . This file can then be speci-
fied instead of files. Options -I , -p , and -T ar e also recognized
when placed in cscope.files .
→
Alphabetical Summary of Commands — cscope
18 October 2001 14:52
37cscope
←
Options
-b Build the symbol cross refer ence only.
-c Cr eate output in ASCII (don’t compress data).
-C Ignor e uppercase/lowercase differ ences in searches.
-d Don’t update the cross refer ence.
-e Don’t show the ˆE pr ompt between files.
-f out
Name the cross-r efer ence file out instead of cscope.out .
-i in
Check source files whose names are listed in in rather than
in cscope.files .
-I dir
Search for include files in dir befor e searching the default
( /usr/include ). cscope searches the current directory, then
dir, then the default.
-l Run in line mode; useful from within a screen editor.
-L Use with - n pat to do a single search.
-p n
Show the last n parts of the filename path. Default is 1 (file-
name); use 0 to suppress the filename.
-P path
Use with -d to prepend path to filenames in existing cross
refer ence. This lets you run cscope without changing to the
dir ectory wher e the cross refer ence was built.
-s dir
Look for source files in directory dir instead of in current
dir ectory.
-T Match only the first eight characters of C symbols.
-u Build cross refer ence unconditionally (assume all files
changed).
-U Ignor e file timestamps (assume no files changed).
-V Print the cscope version on first line of screen.
-n pat
Go to field n of input (starting at 0), then find pat.
38
18 October 2001 14:52
Chapter 2 – Unix Commandscsh [ options ] [ arguments ]
csh
Command interpreter that uses syntax resembling C. csh (the C
shell) executes commands from a terminal or a file. See Chapter 5
for information on the C shell, including command-line options.
csplit
Separate file into sections and place sections in files named xx00
thr ough xx n (n < 100), breaking file at each pattern specified in
ar guments. See also split.
Options
-f file
Name new files file 00 thr ough fileN (default is xx00 thr ough
xx n).
-k Keep newly created files, even when an error occurs (which
would normally remove these files). This is useful when you
need to specify an arbitrarily large repeat argument, {n} , and
you don’t want the “out of range” error to remove the new
files.
-s Suppr ess all character counts.
Arguments
Any one or a combination of the following expressions. Argu-
ments containing blanks or other special characters should be
surr ounded by single quotes.
/expr/
Cr eate file from the current line up to the line containing the
regular expression expr. This argument takes an optional suf-
fix of the form + n or - n, wher e n is the number of lines
below or above expr.
% expr %
Same as / expr / , except no file is created for lines previous to
line containing expr.
num Cr eate file from current line up to line number num.
{n} Repeat argument n times. May follow any of the above argu-
ments. Files will split at instances of expr or in blocks of
num lines.
Examples
Cr eate up to 20 chapter files from the file novel :
→
Alphabetical Summary of Commands — csplit
18 October 2001 14:52
39
csplit [ options ] file argumentscsplit -k -f chap. novel ’%CHAPTER%’ ’{20}’
csplit
←
Cr eate up to 100 address files ( xx00 thr ough xx99 ), each four lines
long, from a database named address_list :
csplit -k address_list 4 {99}
cta gs
ctags [ options ] files
Cr eate a list of function and macro names that are defined in the
specified C, Pascal, FORTRAN, yacc , or lex source files. Solaris
ctags can also process C++ source files. The output list (named
tags by default) contains lines of the form:
name
file
context
wher e name is the function or macro name, file is the source file
in which name is defined, and context is a search pattern that
shows the line of code containing name. After the list of tags is
cr eated, you can invoke vi on any file and type:
:set tags=tagsfile
:tag name
This switches the vi editor to the source file associated with the
name listed in tagsfile (which you specify with -f ).
Options
-a Append tag output to existing list of tags.
-B context uses backward search patterns.
-ftagsfile
Place output in tagsfile (default is tags ).
40
18 October 2001 14:52
-F context uses forward search patterns (default).
-t Include C typedef s as tags.
-u Update tags file to reflect new locations of functions (e.g.,
when functions are moved to a differ ent source file). Old
tags are deleted; new tags are appended.
-v Pr oduce a listing (index) of each function, source file, and
page number (1 page = 64 lines). -v is intended to create a
file for use with vgrind .
-w Suppr ess war ning messages.
-x Pr oduce a listing of each function, its line number, source
file, and context.
Chapter 2 – Unix CommandsExamples
cta gs
Stor e tags in Taglist for all C programs:
ctags -f Taglist *.c
Update tags and store in Newlist :
ctrace [ options ] [ file ]
ctrace
Debug a C program. ctrace reads the C source file and writes a
modified version to standard output. Common options are -f and
-v . ctrace also accepts the cc options -D , -I , and -U .
Options
-e
Print variables as floating point.
-f functions
Trace only the specified functions.
-l n
Follow a statement loop n times (default is 20).
-o
Print variables in octal.
-p s
Print trace output via function s (default is printf ).
-P
Run the C prepr ocessor befor e tracing.
-Qc Print information about ctrace in output (if c = y ) or sup-
pr ess infor mation (if c = n , the default).
-rfile
Change the trace function package to file (default is run-
time.c ).
-s
Suppr ess certain redundant code.
-tn Trace n variables per statement (default is 10; maximum is
20).
-u
Print variables as unsigned.
-v functions
Do not trace the specified functions.
-V Print version information on standard error.
-x Print variables as floating point.
Alphabetical Summary of Commands — ctrace
18 October 2001 14:52
41
ctags -u -f Newlist *.ccut
cut options [ files ]
Select a list of columns or fields from one or more files. Either -c
or -f must be specified. list is a sequence of integers. Use a
comma between separate values and a hyphen to specify a range
(e.g., 1-10,15,20 or 50- ). See also paste and join.
Options
-b list
This list specifies byte positions, not character positions.
This is important when multibyte characters are used. With
this option, lines should be 1023 bytes or less in size. Solaris
only.
-clist
Cut the character positions identified in list.
-dc Use with -f to specify field delimiter as character c (default is
tab); special characters (e.g., a space) must be quoted.
-flist
Cut the fields identified in list.
-n Do not split characters. When used with -b , cut doesn’t split
multibyte characters. Solaris only.
-s Use with -f to suppress lines without delimiters.
Examples
Extract usernames and real names from /etc/passwd :
cut -d: -f1,5 /etc/passwd
Find out who is logged on, but list only login names:
who | cut -d" " -f1
Cut characters in the fourth column of file, and paste them back
as the first column in the same file. Send the results to standard
output:
cut -c4 file | paste - file
cxref
cxref [ options ] files
Build a cross-r efer ence table for each of the C source files. The
table lists all symbols, providing columns for the name and the
associated function, file, and line. In the table, symbols are
marked by = if assigned, - if declared, or * if defined. cxref also
accepts the cc options -D , -I , and -U .
42
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
cxref
Report on all files in a single table.
-C Don’t execute the second pass of cxref ; save output from
first pass in .cx files. (Like -c in lint and cc .)
-d Simplify report by omitting print declarations.
-F Print files using full pathname, not just the filename.
-l Don’t print local variables.
-c
-L [ n ]
Limit the LINE field to n columns (default is 5).
-o file
Send output to file.
-s Silent mode; don’t print input filenames.
-t For mat for 80-column listing.
-V Print version information on standard error.
-w [ n ]
For mat for maximum width of n columns (default is 80; n
must be more than 50).
-Wn1,n2,n3,n4
Set the width of each (or any) column to n1, n2, n3, or n4
(r espective defaults are 15, 13, 15, and 20). Column headings
ar e NAME, FILE, FUNCTION, and LINE, respectively.
date [ option ] [ +format ]
date [ options ] [ string ]
date
In the first form, print the current date and time, specifying an
optional display for mat. In the second form, a privileged user can
set the current date by supplying a numeric string. for mat can
consist of literal text strings (blanks must be quoted) as well as
field descriptors, whose values will appear as described below
(the listing shows some logical groupings).
Format
%n
%t Insert a newline.
Insert a tab.
%m
%d Month of year (01–12).
Day of month (01–31).
→
Alphabetical Summary of Commands — date
18 October 2001 14:52
43date
←
%y
%D Last two digits of year (00–99).
Date in %m/%d/%y for mat.
%b
%e
%Y
%g
%G Abbr eviated month name.
Day of month (1–31); pad single digits with a space.
Four-digit year (e.g., 1996).
Week-based year within century (00–99). Solaris only.
Week-based year, including the century (0000–9999).
Solaris only.
%h
%B Same as %b .
Full month name.
%H
%M
%S Hour in 24-hour format (00–23).
Minute (00–59).
Second (00–61); 61 permits leap seconds and double
leap seconds.
Time in %H:%M for mat.
Time in %H:%M:%S for mat.
Hour (24-hour clock, 0–23); single digits are preceded
by a space. Solaris only.
Hour (12-hour clock, 1–12); single digits are preceded
by a space. Solaris only.
%R
%T
%k
%l
%I
%p
%r Hour in 12-hour format (01–12).
String to indicate a.m. or p.m. (default is AM or PM ).
Time in %I:%M:%S %p for mat.
%a
%A
%w
%u %j
%Z Abbr eviated weekday.
Full weekday.
Day of week (Sunday = 0).
Weekday as a decimal number (1–7), Sunday = 1.
Solaris only.
Week number in year (00–53); start week on Sunday.
Week number in year (00–53); start week on Monday.
The ISO-8601 week number (01–53). In ISO-8601,
weeks begin on a Monday, and week 1 of the year is
the one that includes both January 4th and the first
Thursday of the year. If the first Monday of January is
the 2nd, 3rd, or 4th, the preceding days are part of the
last week of the previous year. Solaris only.
Julian day of year (001–366).
Time-zone name.
%x
%X Country-specific date format.
Country-specific time format.
%U
%W
%V
44
18 October 2001 14:52
Chapter 2 – Unix CommandsCountry-specific date and time format (default is %a %b
%e %T %Z %Y ; e.g., Mon Feb 1 14:30:59 EST 1993).
%c
date
The actual formatting is done by the str ftime (3) library routine.
On Solaris, the country-specific formats depend on the setting of
the LC_CTYPE, LC_TIME, LC_MESSAGES, and NLSPATH envir on-
ment variables.
Options
-a s.f
(Privileged user only.) Gradually adjust the system clock
until it drifts s seconds away from what it thinks is the “cur-
rent” time. (This allows continuous micro-adjustment of the
clock while the system is running.) f is the fraction of sec-
onds by which time drifts. By default, the clock speeds up;
pr ecede s by a — to slow down.
Display or set the time using Greenwich Mean Time (UTC) .
-u
Str ings for Setting the Date
A privileged user can set the date by supplying a numeric string.
string consists of time, day, and year concatenated in one of three
ways: time or [day ]time or [day ]time [year ]. Note: don’t type the
brackets.
time
A two-digit hour and two-digit minute (HHMM ); HH uses
24-hour format.
day A two-digit month and two-digit day of month (mmdd );
default is current day and month.
year
The year specified as either the full four digits or just the last
two digits; default is current year.
Examples
Set the date to July 1 ( 0701 ), 4 a.m. ( 0400 ), 1999 ( 99 ):
date 0701040099
The command:
date +"Hello%t Date is %D %n%t Time is %T"
pr oduces a for matted date as follows:
Hello
Date is 05/09/93
Time is 17:53:39
Alphabetical Summary of Commands — date
18 October 2001 14:52
45dc
dc [ file ]
An interactive desk calculator program that perfor ms arbitrary-
pr ecision integer arithmetic (input may be taken from a file). Nor-
mally you don’t run dc dir ectly, since it’s invoked by bc (see bc).
dc pr ovides a variety of one-character commands and operators
that perfor m arithmetic; dc works like a Reverse Polish calculator;
ther efor e, operators and commands follow the numbers they
af fect. Operators include + - / * % ˆ (as in C, although ˆ means
exponentiation); some simple commands include:
p
q
c
v
i
o
k
!
Print current result.
Quit dc .
Clear all values on the stack.
Take square root.
Change input base; similar to bc ’s ibase .
Change output base; similar to bc ’s obase .
Set scale factor (number of digits after decimal); similar
to bc ’s scale .
Remainder of line is a Unix command.
Examples
3 2 ˆ p
9
8 * p
72
47 - p
25
v p
5
2 o p
101
Evaluate 3 squared, then print result
Curr ent value (9) times 8, then print result
Subtract 47 from 72, then print result
Squar e root of 25, then print result
Display current result in base 2
Note: spaces are not needed except between numbers.
dd
dd [ option=value ]
Make a copy of an input file ( if= ), or standard input if no named
input file, using the specified conditions, and send the results to
the output file (or standard output if of is not specified). Any
number of options can be supplied, although if and of ar e the
most common and are usually specified first. Because dd can han-
dle arbitrary block sizes, it is useful when converting between
raw physical devices.
46
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
dd
bs=n
Set input and output block size to n bytes; this option super-
sedes ibs and obs .
cbs = n
Set the size of the conversion buffer (logical record length)
to n bytes. Use only if the conversion flag is ascii , asciib ,
ebcdic , ebcdicb , ibm , ibmb , block , or unblock .
conv=flags
Convert the input according to one or more (comma-sepa-
rated) flags listed below. The first six flags ar e mutually
exclusive. The next two are mutually exclusive with each
other, as are the following two.
ascii
asciib
ebcdic
ebcdicb
ibm
ibmb
EBCDIC to ASCII.
EBCDIC to ASCII, using BSD-compatible con-
versions. Solaris only.
ASCII to EBCDIC.
ASCII to EBCDIC, using BSD-compatible con-
versions. Solaris only.
ASCII to EBCDIC with IBM conventions.
ASCII to EBCDIC with IBM conventions, using
BSD-compatible conversions. Solaris only.
unblock Variable-length records (i.e., those terminated
by a newline) to fixed-length records.
Fixed-length records to variable-length.
lcase
ucase Uppercase to lowercase.
Lowercase to uppercase.
noerror Continue processing when errors occur (up to
five in a row).
Do not truncate the output file. This preserves
blocks in the output file that this invocation of
dd did not write. Solaris only.
Swap all pairs of bytes.
Pad input blocks to ibs .
block
notrunc
swab
sync
count = n
Copy only n input blocks.
files = n
Copy n input files (e.g., from magnetic tape), then quit.
ibs = n
Set input block size to n bytes (default is 512).
→
Alphabetical Summary of Commands — dd
18 October 2001 14:52
47if = file
dd
←
Read input from file (default is standard input).
obs = n
Set output block size to n bytes (default is 512).
of = file
Write output to file (default is standard output).
iseek = n
Seek n blocks from start of input file (like skip but more effi-
cient for disk file input).
oseek = n
Seek n blocks from start of output file.
seek = n
Same as oseek (r etained for compatibility).
skip = n
Skip n input blocks; useful with magnetic tape.
You can multiply size values (n) by a factor of 1024, 512, or 2 by
appending the letters k , b , or w , respectively. You can use the let-
ter x as a multiplication operator between two numbers.
Examples
Convert an input file to all lowercase:
dd if=caps_file of=small_file conv=lcase
Retrieve variable-length data; write it as fixed-length to out :
data_r etrieval_cmd | dd of=out conv=sync,block
delta
/usr/ccs/bin/delta [ options ] files
An SCCS command. See Chapter 18.
derof f
deroff [ options ] [ files ]
Remove all nroff / troff requests and macros, backslash escape
sequences, and tbl and eqn constructs from the named files.
Options
-i
Ignor e .so and .nx requests. Solaris only.
-mm Suppr ess text that appears on mm macr o lines (i.e., para-
graphs print but headings might be stripped).
48
18 October 2001 14:52
Chapter 2 – Unix Commands-ml Same as -mm , but also deletes lists created by mm macr os;
e.g., .BL / .LE , .VL / .LE constructs. (Nested lists are handled
derof f
poorly.)
-ms Suppr ess text that appears on ms macr o lines (i.e., para-
graphs print but headings might be stripped). Solaris only.
Output the text as a list, one word per line. See also the
example under xar gs.
df [ options ] [ name ]
df
Report the number of free disk blocks and inodes available on all
mounted filesystems or on the given name. (Unmounted filesys-
tems are checked with -F .) name can be a device name (e.g.,
/dev/dsk/0s9 ), the directory name of a mount point (e.g., /usr ), a
dir ectory name, or a remote filesystem name (e.g., an NFS filesys-
tem). Besides the options listed, there are additional options spe-
cific to differ ent filesystem types or df modules.
Options
-a Pr ovide infor mation about all filesystems, even ones usually
marked in /etc/mnttab to be ignored. Solaris only.
-b Print only the number of free kilobytes.
-e Print only the number of free files.
-F type
Report on an unmounted filesystem specified by type. Avail-
able types can be seen in the file /etc/vfstab .
-g Print the whole statvfs structur e (overriding other print
options).
-i /usr/ucb/df only. Show the number of used and available
inodes in a format similar to df -k .
-k Print allocation in kilobytes (typically used without other
options). This option produces output in the format tradi-
tionally used by the BSD version of df .
-l Report only on local filesystems.
-n
Print only the filesystem type name; with no other arguments,
-n lists the types for all mounted filesystems.
-o suboptions
Supply a comma-separated list of type -specific suboptions.
→
Alphabetical Summary of Commands — df
18 October 2001 14:52
49
-wdf
←
dif f
-t Report total allocated space as well as free space.
-V Echo command line but do not execute command.
diff [ options ] [ diroptions ] file1 file2
diff reports lines that differ between file1 and file2. Output con-
sists of lines of context from each file, with file1 text flagged by a
< symbol and file2 text by a > symbol. Context lines are preceded
by the ed command ( a , c , or d ) that converts file1 to file2. If one
of the files is – , standard input is read. If one of the files is a
dir ectory, diff locates the filename in that directory correspond-
ing to the other argument (e.g., diff my_dir junk is the same as
diff my_dir/junk junk ). If both arguments are dir ectories, diff
reports lines that differ between all pairs of files having equiva-
lent names (e.g., olddir/program and newdir/program ); in addi-
tion, diff lists filenames unique to one directory, as well as
subdir ectories common to both. See also bdif f, cmp, comm, dif f3,
dircmp, and sdif f.
Options
Options -c , -C , -D , -e , -f , -h , and -n cannot be combined with
each other (they are mutually exclusive).
-b Ignor e repeating blanks and end-of-line blanks; treat succes-
sive blanks as one.
-c Pr oduce output in alternate format, with three lines of con-
text. (This is called a “context diff.”)
-Cn Like -c , but produce n lines of context.
-D def
Merge file1 and file2 into a single file containing conditional
C prepr ocessor dir ectives ( #ifdef ). Defining def and then
compiling yields file2 ; compiling without defining def yields
file1.
50
18 October 2001 14:52
-e Pr oduce a script of commands ( a , c , d ) to recr eate file2 fr om
file1 using the ed editor.
-f Pr oduce a script to recr eate file1 fr om file2; the script is in
the opposite order, so it isn’t useful to ed .
-h Do a half-hearted (but hopefully faster) comparison; complex
dif ferences (e.g., long stretches of many changes) may not
show up; -e and -f ar e disabled.
Chapter 2 – Unix CommandsIgnor e uppercase and lowercase distinctions.
-n Like -f , but counts changed lines. rcsdiff works this way.
-t Expand tabs in output lines; useful for preserving indentation
changed by -c for mat.
-w Like -b , but ignores all spaces and tabs; e.g., a + b is the
same as a+b .
dif f
-i
The following dir options ar e valid only when both file arguments
ar e dir ectories.
Diroptions
-l Long format; output is paginated by pr so that diff listings
for each file begin on a new page; other comparisons are
listed afterward.
-r Run diff recursively for files in common subdirectories.
-s Report files that are identical.
-Sfile
Begin directory comparisons with file, skipping files whose
names alphabetically precede file.
diff3 [ options ] file1 file2 file3
dif f3
Compar e thr ee files and report the differ ences with the following
codes:
====
====1
====2
====3
All three files differ.
file1 is differ ent.
file2 is differ ent.
file3 is differ ent.
Options
-e Cr eate an ed script to incorporate into file1 all differ ences
between file2 and file3.
-E Same as -e , but mark with angle brackets any lines that differ
between all three files.
-x Cr eate an ed script to incorporate into file1 all differ ences
between all three files.
-X Same as -x , but mark with angle brackets any lines that differ
between all three files.
→
Alphabetical Summary of Commands — dif f3
18 October 2001 14:52
51Cr eate an ed script to incorporate into file1 dif ferences
between file1 and file3.
dif f3 -3
dif fmk diffmk oldfile newfile markedfile
←
A useful program for reviewing changes between drafts of a doc-
ument. diffmk compar es two versions of a file (oldfile and new-
file) and creates a third file (markedfile) that contains troff
“change mark” requests. When markedfile is formatted with nroff
or troff , the differ ences between the two files are marked in the
margin (via the .mc request). diffmk uses a | to mark changed
lines and a * to mark deleted lines. Note that change marks are
pr oduced even if the changes are inconsequential (e.g., extra
blanks, differ ent input line lengths).
Example
To run diffmk on multiple files, it’s convenient to set up directo-
ries in which to keep the old and new versions of your files, and
to create a directory in which to store the marked files:
$ mkdir OLD NEW CHANGED
Move your old files to OLD and your new files to NEW . Then use
this rudimentary Bourne shell script:
$ cat do.mark
for file
do
echo "Running diffmk on $file ..."
diffmk ../OLD/$file $file ../CHANGED/$file
done
You must run the script in the directory of new files:
$ cd NEW
$ do.mark Ch*
dircmp
dircmp [ options ] dir1 dir2
Compar e the contents of dir1 and dir2. See also dif f and cmp.
Options
-d Execute diff on files that differ.
-s Don’t report files that are identical.
-wn Change the output line length to n (default is 72).
52
18 October 2001 14:52
Chapter 2 – Unix Commandsdir name
dirname pathname
Print pathname, excluding last level. Useful for stripping the
actual filename from a pathname. See also basename.
/usr/ccs/bin/dis [ options ] files
dis
Disassemble the object or archive files. See also as.
Options
-C
Display demangled C++ symbol names. Solaris only.
-d section
Disassemble only the specified section of data, printing its
of fset.
-D section
Same as -d , but print the data’s actual address.
-F func
Disassemble only the specified function; reuse -F for addi-
tional functions.
-l string
Disassemble only the library file string (e.g., string would be
malloc for libmalloc.a ).
-L Look for C source labels in files containing debug informa-
tion (e.g., files compiled with cc -g ).
-o Print octal output (default is hexadecimal).
-t section
Same as -d , but print text output.
-V
Print version information on standard error.
dos2unix [ options ] dosfile unixfile
dos2unix
Solaris only. Convert files using the DOS extended character set
to their ISO standard counterparts. If dosfile and unixfile ar e the
same, the file is overwritten after the conversion is done. See also
unix2dos.
Options
-ascii
Remove extra carriage retur ns and convert (remove) DOS
end-of-file characters for use under Unix.
→
Alphabetical Summary of Commands — dos2unix
18 October 2001 14:52
53dos2unix
←
-iso
Same as the default action.
-7
download
Convert 8-bit DOS graphics characters to space characters.
/usr/lib/lp/postscript/download [ options ] [ files ]
Add a font to the beginning of one or more PostScript files. By
adding a font name directly to a PostScript specification, this com-
mand can make additional fonts available when printing a
PostScript file. download deter mines which fonts to add by pro-
cessing PostScript comments that begin with %%DocumentFonts: ,
followed by a list of PostScript font names. download loads the
fonts whose names are listed in a map table. This table links
PostScript names with the system file that contains the font defini-
tion. A map table for the Times font family might look like:
Times-Bold
Times-Italic
Times-Roman
times/bold
times/italic
times/roman
Filenames that begin with a slash are used verbatim. Otherwise,
they are taken to be relative to the host font directory.
Options
- Read the standard input.
-f Search the entire PostScript file instead of just the header
comments. Header comments such as %%DocumentFonts:
(atend) redir ect download to the end of the file. Use this
option when such comments aren’t present.
-H fontdir
Use fontdir as the directory in which font-definition files are
searched (default is /usr/lib/lp/postscript ).
-m table
Use map table specified by file table. A leading / in table
indicates an absolute pathname; otherwise (as in the previ-
ous option), the filename is appended to the fontdir speci-
fied by -H . Without -H , the default is /usr/lib/lp/
postscript .
-p printer
Nor mally, download loads fonts that reside on the host
machine. With this option, download first checks for fonts
that reside on printer (by looking at /etc/lp/printers/
printer /residentfonts ).
54
18 October 2001 14:52
Chapter 2 – Unix Commands/usr/lib/lp/postscript/dpost [ options ] [ files ]
A postpr ocessor that
PostScript for printing.
translates
troff -for matted
dpost
files
into
Options
Read the standard input.
-
-c n
Print n copies of each page (default is 1).
-e 0 | 1 | 2
Set text encoding to 0 (default), 1, or 2. Higher encoding
reduces the output size and speeds printing, but may be less
reliable.
-F dir
Set the font directory to dir (default is /usr/lib/font ).
-H dir
Set the host-resident font directory to dir. Files there must
describe PostScript fonts and have filenames corresponding
to a two-character troff font.
-L file
Set the PostScript prologue to file (default is /usr/lib/
postscript/dpost.ps , /usr/lib/lp/postscript/dpost.ps on
Solaris).
-m scale
Incr ease (multiply) the size of logical pages by factor scale
(default is 1.0).
-n n
Print n logical pages on each sheet of output (default is 1).
-o list
Print only pages contained in comma-separated list. A page
range is specified by n-m.
-O
Omit PostScript pictures from output. Useful when running
in a networked environment.
-p layout
Specify layout to be either portrait (long side is vertical;
also the default) or landscape (long side is horizontal). layout
can be abbreviated to p or l .
-T device
Use device to best describe available PostScript fonts.
Default is post , with dpost reading binary files in /usr/lib/
font/devpost . Use of -T is discouraged; usually the system
PostScript fonts are best, if they are available.
→
Alphabetical Summary of Commands — dpost
18 October 2001 14:52
55dpost
←
-w n
Draw troff graphics (e.g., pic , tbl ) using lines that are n
points thick (default is 0.3).
-x n
Of fset the x-coordinate of the origin n inches to the right (if
n is positive).
-y n
Of fset the y-coordinate of the origin n inches down (if n is
positive). Default origin is the upper-left corner of the page.
Example
pic file | tbl | eqn | troff -ms -Tpost | dpost -c2 | lp
du
du [ options ] [ directories ]
Print disk usage, i.e., the number of 512-byte blocks used by each
named directory and its subdirectories (default is current direc-
tory).
Options
echo
-a Print usage for all files, not just subdirectories.
-d Do not cross filesystem boundaries. Solaris only.
-k Print information in units of kilobytes.
-L For symbolic links, process the file or directory to which the
link refers, not the link itself. Solaris only.
-o Do not add child-directory statistics to the parent directory’s
total. No ef fect if -s is also used. Solaris only.
-r Print a “cannot open” message if a file or directory is inacces-
sible.
-s Print only the grand total for each named directory.
echo [ -n ] [ string ]
Echo arguments to standard output. Often used for producing
pr ompts fr om shell scripts. This is the /bin/echo command. echo
also exists in /usr/ucb , and as a command built into the Bourne,
C, and Korn shells (see Chapter 4 and Chapter 5).
Although echo is conceptually the simplest of all Unix commands,
using it in practice is complicated, because of portability and ver-
56
18 October 2001 14:52
Chapter 2 – Unix Commandssion differ ences. (Consider using printf instead.) The following
sections summarize the differ ences.
echo
Version Differences
/bin/echo
Interprets the escape
Does not accept the -n option.
sequences described next.
/usr/ucb/echo
Accepts the -n option if it’s first. Does not interpret escape
sequences.
Bour ne shell echo
Does not accept the -n option. Interprets the escape
sequences described next, except \a .
C shell echo
Accepts the -n option if it’s first. Does not interpret escape
sequences.
Kor n shell echo
Searches $PATH and behaves like the first version of echo
that it finds.
Escape Sequences
\a
\b
\c
\f
\n
\r
\t
\v
\\
\0nnn
Alert (ASCII BEL). (Not in /bin/sh ’s echo .)
Backspace.
Suppr ess the terminating newline (same as -n ).
For mfeed.
Newline.
Carriage retur n.
Tab character.
Vertical-tab character.
Backslash.
ASCII character repr esented by octal number nnn,
wher e nnn is 1, 2, or 3 digits and is preceded by a 0.
Examples
echo "testing printer" | lp
echo "TITLE\nTITLE" > file ; cat doc1 doc2 >> file
echo "Warning: ringing bell \07"
ed [ options ] [ file ]
ed
The standard text editor. If the named file does not exist, ed cr e-
ates it; otherwise, the existing file is opened for editing. As a line
editor, ed is generally no longer used because vi and ex have
superseded it. Some utilities, such as diff , continue to make use
→
Alphabetical Summary of Commands — ed
18 October 2001 14:52
57of ed command syntax. Encryption (with -x ) can be used only in
the United States.
ed
←
Options
-C
Same as -x , but assume file began in encrypted form.
-p string
Set string as the prompt for commands (default is * ). The P
command turns the prompt display on and off.
edit
-s Suppr ess character counts, diagnostics, and the ! pr ompt for
shell commands. Earlier versions of ed used plain - ; this is
still accepted.
-x Supply a key to encrypt or decrypt file using crypt .
edit [ options ] [ files ]
A line-oriented text editor that runs a simplified version of ex for
novice users. The set variables report , showmode , and magic ar e
pr eset to report editing changes, to display edit modes (when in
:vi mode), and to requir e literal search patterns (no metacharac-
ters allowed), respectively. (Encryption is not supported outside
the United States.) edit accepts the same options as ex ; see ex for
a listing. See Chapter 8, The vi Editor, and Chapter 9, The ex Edi-
tor, for more infor mation.
egrep
egrep [ options ] [ regexp ] [ files ]
Search one or more files for lines that match a regular expression
regexp. egrep doesn’t support the metacharacters \( , \) , \ n, \< ,
\> , \{ , or \} , but does support the other metacharacters, as well
as the extended set + , ? , | , and ( ) . Remember to enclose these
characters in quotes. Regular expressions are described in Chap-
ter 6, Patter n Matching. Exit status is 0 if any lines match, 1 if
not, and 2 for errors. See also gr ep and fgrep.
Options
-b Pr ecede each line with its block number. (Not terribly use-
ful.)
-c Print only a count of matched lines.
-e regexp
Use this if regexp begins with - .
58
18 October 2001 14:52
Chapter 2 – Unix Commandsegrep
-f file
Take expression from file.
List matched lines but not filenames (inverse of -l ).
-i Ignor e uppercase and lowercase distinctions.
-l List filenames but not matched lines.
-n Print lines and their line numbers.
-s Silent mode: print only error messages, and retur n the exit
status. Not on SVR4, but common on most commercial Unix
systems.
-v Print all lines that don’t match regexp.
-h
Examples
Search for occurrences of Victor or Victoria in file :
egrep ’Victor(ia)?’ file
egrep ’(Victor|Victoria)’ file
Find and print strings such as old.doc1 or new.doc2 in files, and
include their line numbers:
egrep -n ’(old|new)\.doc?’ files
eject [ options ] [ media ]
eject
Solaris only. Eject removable media, such as a floppy disk or CD-
ROM. Necessary for media being managed by vold , or for media
without an eject button, such as the floppy drives on Sun SPARC
systems. media is either a device name or a nickname, such as
floppy or cdrom .
With volume management available, eject unmounts any filesys-
tems mounted on the named media. In this case, it also displays a
pop-up dialog if a window system is running. Without volume
management, it simply sends an “eject” command to the given
device.
Options
-d Print the name of the default device to be ejected.
-f When volume management is not in effect, force the eject,
even if the device is busy.
-n Display the list of nicknames and their corresponding real
devices.
→
Alphabetical Summary of Commands — eject
18 October 2001 14:52
59eject
←
elfdump
-p Do not use a windowing pop-up dialog.
-q Query to see if the device has media. Use the exit status to
deter mine the answer.
elfdump [ options ] filename ...
Solaris only. Symbolically dump parts of an object file. files may
be individual files, or ar archives (libraries) of object files.
Options
-c Print section headers.
-d Print the .dynamic section.
-e Print the ELF header.
-i Print the .interp section.
-G Print the .got section.
-h Print the .hash section.
-n Print the .note section.
-N name
Qualify an option with the specific name name (e.g., to
choose a specific symbol table with -s ).
-p Print program headers.
-r Print the relocation sections.
-s Print the symbol table sections.
-v Print the version sections.
-w file
Write the specified section to file.
env
env [ options ] [ variable=value ... ] [ command ]
Display the current environment or, if envir onment variables ar e
specified, set them to a new value and display the modified envi-
ronment. If command is specified, execute it under the modified
envir onment.
60
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
env
- Ignor e curr ent envir onment entir ely.
-i Same as - . Solaris only.
eqn
Equation prepr ocessor for troff . See Chapter 17.
/usr/ccs/bin/error [ options ] [ files ]
er ror
Read compiler error messages, and insert them into the source
files that generated them. This makes it easier to work during the
typical edit-compile-debug cycle. Typical usage would be:
cc -O -c files 2>&1 | error
Options
-n Do not edit any files; print errors on standard output.
-q Query. error pr ompts for a y or n response before inserting
err or messages into a file.
-s Print statistics about the differ ent kinds of errors.
-v After inserting error messages into the source files, run vi on
the files.
-t list
Only process files whose suffixes appear in list. Suf fixes ar e
dot-separated, and wildcards are allowed, but should be
quoted to prevent interpretation by the shell.
ex [ options ] files
ex
A line-oriented text editor; a superset of ed and the root of vi . See
Chapter 8 and Chapter 9 for more infor mation.
Options
-c command
Begin edit session by executing the given ex command (usu-
ally a search pattern or line address). If command contains
spaces or special characters, enclose it in single quotes to
pr otect it from the shell. For example, command could be
’:set list’ (show tabs and newlines) or / wor d (search for
wor d ) or ’$’ (show last line). (Note: -c command was for-
merly + command. The old version still works.)
→
Alphabetical Summary of Commands — ex
18 October 2001 14:52
61
eqn [ options ] [ files ]ex
←
-l Run in LISP mode for editing LISP programs.
-L List filenames saved due to an editor or system crash.
-r file
Recover and edit file after an editor or system crash.
-R Edit in read-only mode to prevent accidental changing of
files.
-s Suppr ess status messages (e.g., errors, prompts); useful when
running an ex script. ( -s was formerly the - option; the old
version still works.)
-t tag
Edit the file containing tag and position the editor at its defi-
nition (see cta gs for more infor mation).
-v Invoke vi . Running vi dir ectly is simpler.
-V Verbose; print nonterminal input on standard error. Useful
for tracking shell scripts running ex .
-wn Set the window size to n. Useful over slow dial-up (or slow
Inter net) connections.
-x Supply a key to encrypt or decrypt file using crypt .
-C Same as -x , but assume that file began in encrypted form.
Examples
Either of the following examples applies the ex commands in
exscript to text file doc :
ex -s doc < exscript
cat exscript | ex -s doc
expand
expand [ options ] [ files ]
Expand tab characters into appropriate number of spaces. expand
reads the named files or standard input if no files ar e pr ovided.
See also unexpand.
Options
-t tablist
Interpr et tabs according to tablist, a space- or comma-sepa-
rated list of numbers in ascending order, that describe the
“tabstops” for the input data.
-n
62
18 October 2001 14:52
Set the tabstops every n characters. The default is 8.
Chapter 2 – Unix Commandsexpand
-tablist
Interpr et tabs according to tablist, a space- or comma-sepa-
rated list of numbers in ascending order, that describe the
“tabstops” for the input data.
Example
Cut columns 10–12 of the input data, even when tabs are used:
expand data | cut -c 10-12 > data.col2
expr arg1 operator arg2 [ operator arg3 ... ]
expr
Evaluate arguments as expressions and print the result. Strings
can be compared and searched. Arguments and operators must
be separated by spaces. In most cases, an argument is an integer,
typed literally or repr esented by a shell variable. There are thr ee
types of operators: arithmetic, relational, and logical. Exit status
for expr is 0 (expression is nonzero and nonnull), 1 (expression is
0 or null), or 2 (expression is invalid).
expr is typically used in shell scripts to perfor m simple mathemat-
ics, such as addition or subtraction. It is made obsolete in the
Kor n shell by that program’s built-in arithmetic capabilities.
Ar ithmetic Operator s
Use the following operators to produce mathematical expressions
whose results are printed:
+
-
*
/
%
Add ar g2 to ar g1.
Subtract ar g2 fr om ar g1.
Multiply the arguments.
Divide ar g1 by ar g2.
Take the remainder when ar g1 is divided by ar g2.
Addition and subtraction are evaluated last, unless they are
gr ouped inside parentheses. The symbols * , ( , and ) have mean-
ing to the shell, so they must be escaped (preceded by a back-
slash or enclosed in single or double quotes).
Relational Operator s
Use relational operators to compare two arguments. Arguments
can also be words, in which case comparisons assume a < z and
A < Z . If the comparison statement is true, the result is 1; if false,
the result is 0. Symbols < and > must be escaped.
→
Alphabetical Summary of Commands — expr
18 October 2001 14:52
63expr
←
=
!=
>
>=
<
<=
Ar e the arguments equal?
Ar e the arguments differ ent?
Is ar g1 gr eater than ar g2 ?
Is ar g1 gr eater than or equal to ar g2 ?
Is ar g1 less than ar g2 ?
Is ar g1 less than or equal to ar g2 ?
Log ical Operator s
Use logical operators to compare two arguments. Depending on
the values, the result can be ar g1 (or some portion of it), ar g2, or
0. Symbols | and & must be escaped.
| Logical OR; if ar g1 has a nonzero (and nonnull) value, the
result is ar g1; otherwise, the result is ar g2.
& Logical AND; if both ar g1 and ar g2 have a nonzero (and
nonnull) value, the result is ar g1; otherwise, the result is 0.
: Similar to grep ; ar g2 is a pattern to search for in ar g1. ar g2
must be a regular expression in this case. If the ar g2 patter n
is enclosed in \( \) , the result is the portion of ar g1 that
matches; otherwise, the result is simply the number of char-
acters that match. By default, a pattern match always applies
to the beginning of the first argument (the search string
implicitly begins with a ˆ ). To match other parts of the
string, start the search string with .* .
Examples
Division happens first; result is 10:
expr 5 + 10 / 2
Addition happens first; result is 7 (truncated from 7.5):
expr \( 5 + 10 \) / 2
Add 1 to variable i ; this is how variables are incr emented in shell
scripts:
i=‘expr $i + 1‘
Print 1 (true) if variable a is the string “hello”:
expr $a = hello
Print 1 (true) if variable b plus 5 equals 10 or more:
expr $b + 5 \>= 10
In the following examples, variable p is the string "version.100" .
64
18 October 2001 14:52
Chapter 2 – Unix CommandsThis command prints the number of characters in p :
expr $p : ’.*’
expr
Result is 11
Match all characters and print them:
expr $p : ’\(.*\)’
Result is "version.100"
expr $p : ’[a-z]*’
Print the number of lowercase letters at the beginning of p :
Result is 7
Match the lowercase letters at the beginning of p :
expr $p : ’\([a-z]*\)’ Result is "version"
Truncate $x if it contains five or more characters; if not, just print
$x . (Logical OR uses the second argument when the first one is 0
or null; i.e., when the match fails.) Double-quoting is a good
idea, in case $x contains whitespace characters.
expr "$x" : ’\(.....\)’ \| "$x"
In a shell script, rename files to their first five letters:
mv "$x" ‘expr "$x" : ’\(.....\)’ \| "$x"‘
(To avoid overwriting files with similar names, use mv -i .)
exstr [ options ] file
exstr
Extract strings from C source files, so that they can be stored in a
database and retrieved at application runtime using the gettxt
library function. With no options, exstr pr oduces a grep -type list
showing only filename and strings. exstr is one of several com-
mands to use when customizing applications for international
use.
Typical use involves three steps:
1. Specify -e and the C source file, and redir ect the output to a
file. This cr eates a database of text strings and identifying
infor mation.
2. Edit this database by adding information that was previously
retur ned by the mkmsgs command.
3. Specify -r and the C source file, using the edited database as
input. This replaces hardcoded text strings with calls to get-
txt . gettxt lets you access translated versions of text strings.
(The strings reside in a directory specified by environment
variable LC_MESSAGES.)
→
Alphabetical Summary of Commands — exstr
18 October 2001 14:52
65exstr
←
Options
-d Use with -r to give the gettxt call a second argument, the
original text string. This string is printed as the fallback in
case the gettxt call fails.
-e Extract text strings from file. ( -e is not used with other
options.) The infor mation appears in this format:
file:line:field:msg_file:msg_num:string
file
line
field
msg_file
msg_num
-r
C source file from the command line.
Line number on which the string is found in
file.
Inline numerical position of the string’s begin-
ning.
Initially null, but later filled in when you edit
the database. msg_file is the name of the list
of message strings you create by running the
mkmsgs command.
Initially null but filled in later. It corr esponds
to the order of the strings in msg_file.
Replace strings in the source file with calls to gettxt .
Example
Assume a C source file named proverbs.c :
main() {
printf("Haste makes waste\n");
printf("A stitch in time\n");
}
1.
First issue the command:
exstr -e proverbs.c > proverb.list
proverb.list might look something like this:
proverbs.c:3:8:::Haste makes waste\n
proverbs.c:4:8:::A stitch in time\n
2.
Run mkmsgs to create a message file (e.g., prov.US ) that can
be read by the gettxt call. If the two previous proverb
strings are listed ninth and tenth in prov.US , you would edit
proverb.list as follows:
proverbs.c:3:8:prov.US:9:Haste makes waste\n
proverbs.c:4:8:prov.US:10:A stitch in time\n
3.
Finally, specify -r to insert gettxt calls:
exstr -rd proverbs.c < proverb.list > Prov.c
66
18 October 2001 14:52
Chapter 2 – Unix CommandsThe internationalized version of your program, Prov.c , now
looks like this:
exstr
factor [ num ]
extern char *gettxt();
main() {
printf(gettxt("prov.US:9",
"Haste makes waste\n"));
printf(gettxt("prov.US:10",
"A stitch in time\n"));
}
factor
Pr oduce the prime factors of num or read numbers from input.
false
false
A do-nothing command that retur ns an unsuccessful (nonzero)
exit status. Normally used in Bourne shell scripts. See also tr ue.
Examples
# This loop never executes
while false
do
commands
done
# This loop executes forever
until false
do
commands
done
fdformat [ options ] [ device ]
fdfor mat
Solaris only. Format floppy disks and PCMCIA memory cards.
device is the name of the appropriate device to format, and varies
considerably based on the density of the media, the capability of
the disk drive, and whether or not volume management is in
ef fect.
Options
-b label
Apply the label to the media. SunOS labels may be up to
eight characters; DOS labels may be up to eleven uppercase
characters.
→
Alphabetical Summary of Commands — fdfor mat
18 October 2001 14:52
67fdfor mat
←
-B file
Install bootloader in file on an MS-DOS diskette. Can only
be used with -d or -t dos .
-D For mat a 720KB (3.5 inch) or 360KB (5.25 inch) double-den-
sity diskette (same as -l or -L ). Use on high- or extended-
density drives.
-e Eject floppy disk when done.
-E For mat a 2.88MB (3.5 inch) extended-density diskette.
-f Force. Do not prompt for confirmation before for matting.
-H For mat a 1.44MB (3.5 inch) or 1.2MB (5.25 inch) high-density
diskette. Use on extended-density drive.
-M Use a 1.2MB (3.5 inch) medium-density format on a high-
density diskette. Use only with the -t nec option. Identical
to -m .
-U Unmount any filesystems on the media, and then format.
-q Quiet mode. Don’t print status messages.
-v Verify each block on the media after formatting.
-x Don’t format, just write a SunOS label or MS-DOS filesystem.
-t dos
Install an MS-DOS filesystem and boot sector formatting.
Same as DOS format or -d .
-t nec
Install an NEC-DOS filesystem and boot sector after format-
ting. Use only with -M .
Compatibility Options
These options are for compatibility with previous versions of
fdformat . Their use is discouraged.
fgrep
-d Same as -t dos .
-l Same as -D or -L .
-L Same as -l or -D .
-m Same as -M .
fgrep [ options ] [ pattern ] [ files ]
Search one or more files for lines that match a literal, text-string
patter n. Because fgrep does not support regular expressions, it is
68
18 October 2001 14:52
Chapter 2 – Unix Commandsfaster than grep (hence fgrep , for fast grep ). Exit status is 0 if any
lines match, 1 if not, and 2 for errors. See also egrep and gr ep.
fgrep
Options
Pr ecede each line with its block number. (Not terribly use-
ful.)
-c Print only a count of matched lines.
-b
-e pat
Use this if pat begins with – .
-ffile
Take a list of patterns from file.
-h Print matched lines but not filenames (inverse of -l ).
-i Ignor e uppercase and lowercase distinctions.
-l List filenames but not matched lines.
-n Print lines and their line numbers.
-s Silent mode: print only error messages, and retur n the exit
status. Not on SVR4, but common on most commercial Unix
systems.
-v Print all lines that don’t match patter n.
-x Print lines only if patter n matches the entire line.
Examples
Print lines in file that don’t contain any spaces:
fgrep -v ’ ’ file
Print lines in file that contain the words in spell_list :
fgrep -f spell_list file
file [ options ] files
file
Classify the named files according to the type of data they con-
tain. file checks the magic file (usually /etc/magic ) to identify
many common file types.
Options
-c
Check the format of the magic file (files argument is invalid
with -c ).
→
Alphabetical Summary of Commands — file
18 October 2001 14:52
69file
←
-flist
Run file on the filenames in list.
-h
Do not follow symbolic links.
-mfile
Use file as the magic file instead of /etc/magic .
Many file types are understood. Output lists each filename, fol-
lowed by a brief classification such as:
ascii text
c program text
c-shell commands
data
empty
iAPX 386 executable
directory
[nt]roff, tbl, or eqn input text
shell commands
symbolic link to ../usr/etc/arp
Example
List all files that are deemed to be nroff / troff input:
file * | grep roff
find
find pathname(s) condition(s)
An extremely useful command for finding particular groups of
files (numerous examples follow this description). find descends
the directory tree beginning at each pathname and locates files
that meet the specified conditions. At least one pathname and
one condition must be specified. The most useful conditions
include -print (which must be explicitly given to display any out-
put), -name and -type (for general use), -exec and -size (for
advanced users), and -mtime and -user (for administrators). On
Solaris (and other recent Unix systems), -print is the default con-
dition if none are provided.
Conditions may be grouped by enclosing them in \( \)
(escaped parentheses), negated with ! (use \! in the C shell),
given as alternatives by separating them with -o , or repeated
(adding restrictions to the match; usually only for -name , -type ,
and -perm ).
The find command can often be combined with the xargs com-
mand when there are too many files for naming on the command
line. (See xar gs.)
70
18 October 2001 14:52
Chapter 2 – Unix CommandsConditions
find
-atime +n | -n | n
Find files that were last accessed more than n ( + n), less than
n ( - n), or exactly n days ago. Note that find will change the
access time of directories supplied as pathnames.
-cpio dev
Take matching files and write them on device dev, using
cpio . Obsolete.
-ctime +n | -n | n
Find files that were changed more than n ( + n), less than n
( - n), or exactly n days ago. Change refers to modification,
per mission or ownership changes, etc.; therefor e, -ctime is
mor e inclusive than -atime or -mtime .
-depth
Descend the directory tree, skipping directories and working
on actual files first (and then the parent directories). Useful
when files reside in unwritable directories (e.g., when using
find with cpio ).
-exec command {} \;
Run the Unix command on each file matched by find , pro-
vided command executes successfully on that file; i.e.,
retur ns a 0 exit status. When command runs, the argument
{} substitutes the current file. Follow the entire sequence
with an escaped semicolon ( \; ).
-follow
Follow symbolic links and track the directories visited (don’t
use this with -type l ).
-fstype type
Find files that reside on filesystems of type type.
-group gname
Find files belonging to group gname. gname can be a group
name or a group ID number.
-inum n
Find files whose inode number is n.
-links n
Find files having n links.
-local
Find files that physically reside on the local system.
-ls Display matching files with associated statistics (as if run
thr ough ls -lids ).
→
Alphabetical Summary of Commands — find
18 October 2001 14:52
71find
←
-mount
Search for files that reside only on the same filesystem as
pathname.
-mtime +n | -n | n
Find files that were last modified more than n ( + n), less than
n ( - n), or exactly n days ago.
-name pattern
Find files whose names match patter n. Filename metacharac-
ters may be used, but should be escaped or quoted.
-ncpio dev
Take matching files and write them on device dev, using cpio
-c . Obsolete.
-newer file
Find files that have been modified more recently than file ;
similar to -mtime .
-nogroup
Find files belonging to a group not in /etc/group .
-nouser
Find files owned by a user not in /etc/passwd .
-ok command {} \;
Same as -exec , but user must respond (with a y ) befor e com-
mand is executed.
-perm nnn
Find files whose permission settings (e.g., rwx ) match octal
number nnn exactly (e.g., 664 matches -rw-rw-r- - ). Use a
minus sign to make a wildcard match of any specified bit
(e.g., -perm -600 matches -rw****** , wher e * can be any
mode). Some systems also allow + nnn for this purpose.
Solaris allows nnn to be a symbolic mode in the same form
as allowed by chmod .
-print
Print the matching files and directories, using their full path-
names. On Solaris, this is the default.
-prune
“Prune” the directory tree of unwanted directory searches;
that is, skip the directory most recently matched.
-size n [ c ]
Find files containing n blocks, or, if c is specified, files that
ar e n characters (bytes) long. (One block = 512 bytes).
Some systems allow n k to specify the size in kilobytes.
72
18 October 2001 14:52
Chapter 2 – Unix Commandsfind
-type c
Find files whose type is c. c can be:
Block special file
Character special file
Dir ectory
Door special file, Solaris only
Plain file
Symbolic link
Fifo or named pipe
Socket
b
c
d
D
f
l
p
s
-user user
Find files belonging to a user name or ID.
-xdev
Same as -mount . Solaris (and some BSD systems) only.
Examples
List all files (and subdirectories) in your home directory:
find $HOME -print
List all files named chapter1 under neath the /work dir ectory:
find /work -name chapter1 -print
List “memo” files owned by ann (note the use of multiple starting
paths):
find /work /usr -name ’memo*’ -user ann -print
Search the filesystem (begin at root) for manpage directories:
find / -type d -name ’man*’ -print
Search the current directory, look for filenames that don’t begin
with a capital letter, and send them to the printer:
find . \! -name ’[A-Z]*’ -exec lp {} \;
Find and compress files whose names don’t end with .Z :
compress ‘find . -type f \! -name ’*.Z’ -print‘
Remove all empty files on the system (prompting first):
find / -size 0 -ok rm {} \;
Skip RCS directories, but list remaining read-only files:
find . -name RCS -prune -o -perm 444 -print
→
Alphabetical Summary of Commands — find
18 October 2001 14:52
73Search the system for files that were modified within the last two
days (good candidates for backing up):
find
←
find / -mtime -2 -print
Recursively grep for a pattern down a directory tree:
find /book -print | xargs grep ’[Nn]utshell’
finger
finger [ options ] users
Display data about one or more users, including information
listed in the files .plan and .project in user’s home directory.
You can specify each user either as a login name (exact match) or
as a first or last name (display information on all matching
names). Networked environments recognize arguments of the
for m user @ host and @ host. (Today, many systems on the Internet
disallow connections from finger requests.)
Options
fmt
-b Omit user’s home directory and shell from display.
-f Used with -s to omit heading that normally displays in short
for mat.
-h Omit .project file from display.
-i Show “idle” format, a terse format (like -s ).
-l Force long format (default).
-m users must match usernames exactly, instead of also search-
ing for a match of first or last names.
-p Omit .plan file from display.
-q Show “quick” format, the tersest of all (requir es an exact
match of username).
-s Show short format.
-w Used with -s to omit user’s full name that normally displays
in short format.
fmt [ options ] [ files ]
Fill and join text, producing lines of roughly the same length.
(Unlike nroff , the lines are not justified.) fmt ignor es blank lines
and lines beginning with a dot ( . ) or with “From:”. The emacs edi-
tor uses ESC-q to join paragraphs, so fmt is useful for other edi-
74
18 October 2001 14:52
Chapter 2 – Unix Commandstors, such as vi . The following vi command fills and joins the
remainder of the current paragraph:
fmt
!}fmt
Options
Don’t adjust the first two lines; align subsequent lines with
the second line. Useful for paragraphs that begin with a
hanging tag.
-s Split long lines but leave short lines alone. Useful for pre-
serving partial lines of code.
-c
-w n
Cr eate lines no longer than n columns wide. Default is 72.
(Can also be invoked as - n for compatibility with BSD.)
ftp [ options ] [ hostname ]
ftp
Transfer files to and from remote network site hostname. ftp
pr ompts the user for a command. Type help to see a list of
known commands.
Options
-d Enable debugging.
-g Disable filename expansion (globbing).
-i Turn off interactive prompting.
-n No auto-login upon initial connection.
-v Verbose on. Show all responses from remote server.
gcore [ option ] process_ids
gcore
Cr eate (“get”) a core image of each running process specified.
The core image can be used with a debugger. You must own the
running process or be a privileged user to use this command.
Option
-o file
Cr eate
cor e
file
named
file . pr ocess_id
(default
is
core. pr ocess_id).
Alphabetical Summary of Commands — gcor e
18 October 2001 14:52
75gencat
gencat [ option ] database msgfiles
Append (or merge) messages contained in one or more msgfiles
with the formatted message database file. If database doesn’t
exist, it is created. Each message in msgfile is preceded by a
numerical identifier. Comment lines can be added by using a dol-
lar sign at the beginning of a line, followed by a space or tab. See
also genmsg and mkmsgs.
Option
-m
genmsg
Build a single database that is backward-compatible with
databases created by earlier versions of gencat . SVR4 only.
genmsg [ options ] files ...
Solaris only. Extract messages strings from source code that uses
catgets (3C) for further processing with gencat . The purpose of
this command is to create the initial data for use by a translator
when internationalizing an application. See also gencat and
mkmsgs.
Options
-a Append (merge) the output into the file specified by -o .
-b Place extracted comments after the corresponding message,
instead of before it.
-c tag
Extract messages containing tag and write them, prefixed by
$ , in a comment in the output file.
-d Also add the original messages as comments in the output
file.
-f With -r , overwrite the original input files. With -l , also
overwrite the project files.
-g file
Cr eate file as a project file, listing set numbers and their max-
imum message numbers.
-l file
Use information in file as a project file to calculate new mes-
sage numbers.
-m prefix
Fill in the message with pr efix. Intended for testing.
76
18 October 2001 14:52
Chapter 2 – Unix Commandsgenmsg
-M suffix
Fill in the message with suf fix. Intended for testing.
-n
Add comments in the output indicating the original file’s
name and line number for the message.
-o msgfile
Put the output in msgfile.
-p preprocessor
Run the source files through pr eprocessor befor e extracting
messages.
-r
Replace message numbers with −1 (negative one). Reverse
action of -l .
-s tag
Extract comments of the form /* SET tag */ fr om the source
files. Write them to the output as comments, prefixed with $ .
Only the first matching comment for tag is extracted.
-t Triple the lengths of extracted messages. Intended for test-
ing.
-x Don’t warn about message and set number range checks and
conflicts.
/usr/ccs/bin/get [ options ] files
get
An SCCS command. See Chapter 18.
getconf [ -v spec ] system_var
getconf [ -v spec ] path_var path
getconf -a
getconf
Solaris only. This command is specified by POSIX as a portable
way of determining system limits. In the first form, print the value
of system configuration variables. In the second, print the value
of filesystem-related parameters. In the third, print the values of
all system configuration variables.
Options
-a
Print the names and values of all system configuration vari-
ables.
-v spec
Use spec to govern the selection of values for configuration
variables.
Alphabetical Summary of Commands — getconf
18 October 2001 14:52
77getopts
getopts string name [ arg ]
Same as built-in Bourne shell command getopts . See Chapter 4.
gettext
gettext [ domain ] string
Solaris only. Retrieve and print the translated version of string.
This provides shell-level access to the facilities of gettext (3C).
Translations are looked up in /usr/lib/locale/ lang /LC_MESSAGES/
domain .mo . lang is the current locale (e.g., en_US ). If domain is
not supplied, the value of $TEXTDOMAIN is used instead. With-
out a domain, or if no translation can be found, gettext simply
prints string. If $TEXTDOMAINDIR exists, its value is used instead
of /usr/lib/locale/ .
gettxt
gettxt msgfile:msgnum [ default_message ]
Obtain the message that resides in file msgfile and whose mes-
sage ID is msgnum. msgnum is a number from 1 to n, wher e n is
the number of messages in msgfile. gettxt searches for msgfile in
dir ectory /usr/lib/locale/ locale /LC_MESSAGES , wher e locale is the
language in which the message strings have been written. The
value of locale is set by the environment variable LC_MESSAGES,
or failing that, the LANG environment variable. If neither is set,
locale defaults to a directory named C . If gettxt fails, it displays
default_message or (if none is specified) the string, “Message not
found!!”
gprof
/usr/ccs/bin/gprof [ options ] [ objfile [ pfile ]]
Solaris only. (Many other modern Unix systems also have it.) Dis-
play call-graph profile data of C programs. Programs compiled
with the -xpg option of cc ( -pg on other compilers) produce a
call-graph profile file pfile, whose default name is gmon.out . The
specified object file objfile ( a.out by default) contains a symbol
table that is read and correlated with pfile. See also prof and
lprof.
Options
78
18 October 2001 14:52
-a Don’t print statically declared functions.
-b Brief; don’t print field descriptions in the profile.
-c Find the program’s static call-graph. Call counts of 0 indicate
static-only parents or children.
Chapter 2 – Unix Commands-C Demangle C++ symbol names before printing them out.
-D With this option, you supply one or more existing pfiles.
Pr ocess the information in all specified profile files and pro-
duce profile file called gmon.sum that shows the differ ence
between the runs. See also the -s option below.
gprof
-e name
Don’t print the graph profile entry for the routine name. -e
may be repeated.
-E name
Like -e above. In addition, during time computations, omit
the time spent in name.
-f name
Print the graph profile entry only for routine name. -f may
be repeated.
-F name
Like -f above. In addition, during time computations, use
only the times of the printed routines. -F may be repeated,
and it overrides -E .
-l Don’t print entries for local symbols.
-s With this option, you supply one or more existing pfiles.
Sum the information in all specified profile files and send it
to a profile file called gmon.sum . Useful for accumulating data
acr oss several runs.
-z Show routines that have zero usage. Useful with -c to find
out which routines were never called.
-n Only print the top n functions.
grep [ options ] regexp [ files ]
gr ep
Search one or more files for lines that match a regular expression
regexp. Regular expressions are described in Chapter 6. Exit status
is 0 if any lines match, 1 if not, and 2 for errors. See also egrep
and fgrep.
Options
-b Pr ecede each line with its block number. (Not terribly use-
ful.)
-c Print only a count of matched lines.
→
Alphabetical Summary of Commands — grep
18 October 2001 14:52
79gr ep
←
-e pat
Use this if pat begins with – . Solaris: this option is only
available in /usr/xpg4/bin/grep , not /usr/bin/grep . It is
common, though, on many modern Unix systems.
-h Print matched lines but not filenames (inverse of -l ).
-i Ignor e uppercase and lowercase distinctions.
-l List filenames but not matched lines.
-n Print lines and their line numbers.
-s Suppr ess err or messages for nonexistent or unreadable files.
-v Print all lines that don’t match regexp.
-w Restrict regexp to matching a whole word (like using \< and
\> in vi ). Not on SVR4, but common on many commercial
Unix systems.
Examples
List the number of users who use the C shell:
grep -c /bin/csh /etc/passwd
List header files that have at least one #include dir ective:
grep -l ’ˆ#include’ /usr/include/*
List files that don’t contain patter n :
grep -c pattern files | grep :0
gr oups
groups [ user ]
Show the groups that user belongs to (default is your groups).
Gr oups ar e listed in /etc/passwd and /etc/group .
gunzip
gunzip [ gzip options ] [ files ]
Identical to gzip -d . Typically provided as a hard link to gzip .
The -1 ... -9 and corresponding long-form options are not avail-
able with gunzip ; all other gzip options are accepted. See gzip for
mor e infor mation.
gzcat
gzcat [ gzip options ] [ files ]
A link to gzip instead of using the name zcat , which preserves
zcat ’s original link to compress . Its action is identical to gunzip -c .
80
18 October 2001 14:52
Chapter 2 – Unix CommandsMay be installed as zcat on some systems. See gzip for more
infor mation.
gzcat
gzip [ options ] [ files ]
gzip
GNU Zip. Reduce the size of one or more files using Lempel-Ziv
(L Z 7 7) coding, and move to file .gz . Restor e with gunzip . With a
filename of - , or with no files, gzip reads standard input. Usually,
compr ession is considerably better than that provided by com-
press . Further more, the algorithm is patent-free.
gzip ignor es symbolic links. The original file’s name, permissions,
and modification time are stor ed in the compressed file, and
restor ed when the file is uncompressed. gzip is capable of
uncompr essing files that were compr essed with compress , pack , or
the BSD compact . Default options may be placed in the environ-
ment variable GZIP.
gunzip is equivalent to gzip -d . It is typically a hard link to the
gzip command. gzcat and zcat ar e equivalent to gunzip -c , and
ar e also often hard links to gzip .
Note: while not distributed with SVR4 or Solaris, gzip is the de
facto standard file compression program for files available over
the Internet. Source code can be obtained from the Free Software
Foundation (http://www.gnu.or g). Precompiled binaries for Solaris
can be obtained from http://www.sunfr eewar e.com. gzip also has
its own web site: see http://www.gzip.or g.
Options
Like most GNU programs, gzip has both short and long versions
of its command-line options:
-a , --ascii
ASCII text mode: convert end-of-lines using local conven-
tions. Not supported on all systems.
-c , --stdout , --to-stdout
Write output on standard output; keep original files
unchanged. Individual input files are compr essed separately;
for better compression, concatenate all the input files first.
-d , --decompress , --uncompress
Decompr ess.
-f , --force
Force. The file is compressed or decompressed, even if the
target file exists or if the file has multiple links.
→
Alphabetical Summary of Commands — gzip
18 October 2001 14:52
81gzip
←
-h , --help
Display a help screen and exit.
-l , --list
List the compressed and uncompressed sizes, the compres-
sion ratio, and the original name of the file for each com-
pr essed file. With --verbose , also list the compression
method, the 32-bit CRC, and the original file’s last-modifica-
tion time. With --quiet , the title and totals lines are not dis-
played.
-L , --license
Display the gzip license and quit.
-n , --no-name
For gzip , do not save the original filename and modification
time in the compressed file. For gunzip , do not restor e the
original name and modification time; use those of the com-
pr essed file (this is the default).
-N , --name
For gzip , save the original filename and modification time in
the compressed file (this is the default). For gunzip , restor e
the original filename and modification time based on the
infor mation in the compressed file.
-q , --quiet
Suppr ess all warnings.
-r , --recursive
Recursively walk the current directory tree and compress (for
gunzip , uncompr ess) all files found.
-S .suf , --suffix .suf
Use .suf as the suffix instead of .gz . A null suffix makes
gunzip attempt decompression on all named files, no matter
what their suffix.
-t , --test
Check the compressed file integrity.
-v , --verbose
Display the name and percentage reduction for each file
compr essed or decompressed.
-V , --version
Display the version number and compilation options, and
then quit.
-n , --fast , --best
Contr ol the compression method. n is a number between 1
and 9. -1 (same as --fast ) gives the fastest, but least com-
pr essed method. -9 (same as --best ) gives the best
82
18 October 2001 14:52
Chapter 2 – Unix Commandscompr ession, but is slower. Values between 1 and 9 vary the
tradeof f in compression method. The default compression
level is -6 , which gives better compression at some expense
in speed. In practice, the default is excellent, and you
should not need to use these options.
head
Print the first few lines of one or more files (default is 10).
Options
Print the first n lines of the file.
-n
-n n
Print the first n lines of the file. Solaris only.
Examples
Display the first 20 lines of phone_list :
head -20 phone_list
Display the first 10 phone numbers having a 202 area code:
grep ’(202)’ phone_list | head
/usr/ccs/bin/help [ commands | error_codes ]
help
An SCCS command. See Chapter 18.
hostid
hostid
Print the hexadecimal ID number of the host machine.
hostname [ newhost ]
hostname
Print the name of the host machine. Often the same as uname . A
privileged user can change the hostname to newhost.
iconv -f from_encoding -t to_encoding [ file ]
iconv
Convert the contents of file fr om one character set
( fr om_encoding ) to another (to_encoding ). If the destination
character set provides no equivalent for a character, it is con-
→
Alphabetical Summary of Commands — iconv
18 October 2001 14:52
83
head [ options ] [ files ]
gzipiconv ← verted to an underscore (_). Supported conversion sets are listed
in the directory /usr/lib/iconv .
id id [ -a ]
List user and group IDs; list all groups with -a . When you’re run-
ning an su session as another user, id displays this user’s informa-
tion.
indxbib
indxbib files
Part of the refer suite of programs. See Chapter 17.
ipcr m
ipcrm [ options ]
Remove a message queue, semaphore set, or shared memory
identifier as specified by the options. ipcrm is useful for freeing
shar ed memory left behind by programs that failed to deallocate
the space. Use ipcs first to list items to remove.
Options
-m shmid
Remove shared memory identifier shmid.
-M shmkey
Remove shmid cr eated with key shmkey.
-q msqid
Remove message queue identifier msqid.
-Q msgkey
Remove msqid cr eated with key msgkey.
-s semid
Remove semaphore identifier semid.
-S semkey
Remove semid cr eated with key semkey.
ipcs
ipcs [ options ]
Print data about active interprocess communication facilities.
84
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
ipcs
-m Report on active shared memory segments.
-q Report on active message queues.
-s Report on active semaphores.
-a Use almost all the print options (short for -bcopt ).
-A Use all of the print options (short for -bciopt ). Solaris only.
-b Report maximum allowed number of message bytes, segment
sizes, and number of semaphores.
-c Report the creator’s login name and group.
With the -m , -q , or -s options, only the specified interprocess
facility is reported on. Otherwise, information about all three is
printed.
-Cfile
Read status from file instead of from /dev/kmem .
-i
Report the number of shared-memory attaches to the seg-
ment. Solaris only.
-Nlist
Use the argument for the kernel “name list” (the list of func-
tions and variables in the kernel) instead of /stand/unix
(Solaris: /dev/ksyms ).
-o Report outstanding usage.
-p Report process numbers.
-t Report time information.
/usr/java/bin/jar [ options ] [ manifest ] dest files
jar
Solaris only. Java archive tool. All the named objects and direc-
tory trees (if directories are given) are combined into a single Java
archive, presumably for downloading. jar is based on the ZIP
and ZLIB compression formats; zip and unzip can process .jar
files with no trouble. If a manifest is not provided, jar cr eates
one automatically. The manifest becomes the first entry in the
archive, and it contains any needed metainformation about the
archive.
Usage is similar to tar , in that the leading – may be omitted from
the options.
→
Alphabetical Summary of Commands — jar
18 October 2001 14:52
85jar
←
Options
-c Cr eate a new or empty archive to standard output.
-f The second argument, dest, is the archive to process.
-M Use specified manifest instead of creating a manifest file.
-m Don’t create a manifest file.
-o Don’t compress the files with ZIP compression.
-t Print a table of contents for the archive on standard output.
-v Pr oduce verbose output to standard error.
-x [ file ]
Extract named file, or all files if no file given.
java
/usr/java/bin/java [ options ] classname [ args ]
Solaris only. Compile and then run Java bytecode class files. By
default, the compiler uses the JIT (“Just In Time”) compiler for the
curr ent system. ar gs ar e passed on to the Java program’s main
method. See also java_g.
Options
-cs , -checksource
Compar e the source code file’s modification time to that of
the compiled class file, and recompile if it is newer.
-classpath path
Use path as the search path for class files, overriding
$CLASSPATH. path is a colon-separated list of directories.
-debug
Print a password that must be used for debugging and allow
jdb to attach itself to the session. (See jdb.)
-Dprop=val
Redefine the value of pr op to be val. This option may be
used any number of times.
-fullversion
Print full version information.
-help
Print a usage message.
-ms size
Set the initial size of the heap to size, which is in bytes.
Append k or m to specify kilobytes or megabytes, respec-
tively. The default heap size is 4MB.
86
18 October 2001 14:52
Chapter 2 – Unix Commandsjava
-mx size
Set the maximum size of the heap to size, which is in bytes.
Append k or m to specify kilobytes or megabytes, respec-
tively. The default maximum size is 16MB. The value must
be greater than 1000 bytes and greater than or equal to the
initial heap size.
-noasyncgc
Disable asynchronous garbage collection.
-noclassgc
Disable garbage collection of Java classes.
-noverify
Disable verification.
-oss size
Set the maximum stack size of Java code in a Java thread.
Append k or m to specify kilobytes or megabytes, respec-
tively. The default maximum size is 400KB.
-prof [ :file ]
java_g only. Enable Java runtime profiling. Place the trace
in the named file, if supplied. Otherwise, use ./java.prof .
-ss size
Set the maximum stack size of C code in a Java thread.
Append k or m to specify kilobytes or megabytes, respec-
tively. The default maximum size is 128KB.
-t
java_g only. Trace the executed instructions.
-v , -verbose
Print a message to standard output each time a class file is
loaded.
-verbosegc
Print a message every time the garbage collector frees mem-
ory.
-verify
Run the byte-code verifier on all code.
-verifyremote
Run the verifier on all code loaded via a classloader. This is
the default when interpreting.
-version
Display version information for java .
Alphabetical Summary of Commands — java
18 October 2001 14:52
87java_g
/usr/java/bin/java_g [ options ] classname [ args ]
Solaris only. java_g is the nonoptimizing version of the Java inter-
pr eter. It is intended for use with a Java debugger, such as jdb .
Otherwise, it accepts the same options and works the same as
java . See the entry for java for more infor mation.
javac
javac [ options ] files
Solaris only. Compile Java source code into Java bytecode, for
execution with java . Java source files must have a .java suf fix
and must be named for the class whose code they contain. The
generated bytecode files have a .class suf fix. By default, class
files are created in the same directory as the corresponding
source files. Use the CLASSPATH variable to list directories and/or
ZIP files that javac will search to find your classes.
Options
-classpath path
Use the colon-separated list of directories in path instead of
CLASSPATH to find class files. It is usually a good idea to
have the current directory (“.”) on the search path.
-d dir
Specify where to create generated class files.
-depend
Recompile missing or out-of-date class files refer enced fr om
other class files, not just from source code.
-deprecation
Warn about every use or override of a deprecated member
or class, instead of warning at the end.
-encoding encoding
The source file is encoded using encoding. Without this
option, the system’s default converter is used.
-g
Generate debugging tables with line numbers. With -O , also
generate information about local variables.
-Joption
Pass option to java . option should not contain spaces; use
multiple -J options if necessary.
-nowarn
Disable all warnings.
88
18 October 2001 14:52
Chapter 2 – Unix Commands-O
Per form optimizations that may produce faster but larger
class files. It may also slow down compilation. This option
should be used with discretion.
javac
-verbose
Print messages as files are compiled and loaded.
javadoc
Solaris only. Process declaration and documentation comments in
Java source files and produce HTML pages describing the public
and protected classes, interfaces, constructors, methods, and
fields. javadoc also produces a class hierarchy in tree.html and
an index of members in Allnames.html .
Options
-author
Include @author tags.
-classpath path
Use path as the search path for class files, overriding
$CLASSPATH. path is a colon-separated list of directories. It
is better to use -sourcepath instead of -classpath .
-d dir
Cr eate the generated HTML files in dir.
-docencoding encoding
Use encoding for the generated HTML file.
-encoding encoding
The Java source file is encoded using encoding.
-J opt
Pass opt to the runtime system. See java for more infor ma-
tion.
-nodeprecated
Exclude paragraphs marked with @deprecated .
-noindex
Don’t generate the package index.
-notree
Don’t generate the class and interface hierarchy.
-package
Include only package, protected and public classes and
members.
→
Alphabetical Summary of Commands — javadoc
18 October 2001 14:52
89
/usr/java/bin/javadoc [ options ] files | classesjavadoc
←
-private
Include all classes and members.
-protected
Include only protected and public classes and members.
This is the default.
-public
Include only public classes and members.
-sourcepath path
Use path as the search path for class source files. path is a
colon-separated list of directories. If not specified, it defaults
to the current -classpath dir ectory. Running javadoc in the
dir ectory with the sources allows you to omit this option.
-verbose
Print additional messages about time spent parsing source
files.
-version
Include @version tags.
The -doctype option is no longer available. Only HTML docu-
mentation may be produced.
javah
/usr/java/bin/javah [ options ] classes | files
Solaris only. Generate C header and/or source files for imple-
menting native methods. The generated .h file defines a structure
whose members parallel those of the corresponding Java class.
The header filename is derived from the corresponding Java class.
If the class is inside a package, the package name is prepended
to the filename and the structure name, separated by an under-
scor e.
Note: the Java Native Interface (JNI) does not requir e header or
stub files. Use the -jni option to create function prototypes for
JNI native methods.
Options
-classpath path
Use path as the search path for class files, overriding
$CLASSPATH. path is a colon-separated list of directories.
-d dir
Place generated files in dir.
90
18 October 2001 14:52
Chapter 2 – Unix Commandsjavah
-help
Print a help message.
-jni
Pr oduce JNI native method function prototypes.
-o file
Concatenate all generated header or source files for all the
classes and write them to file.
-stubs
Generate C declarations, not headers.
-td dir
Use dir as the directory for temporary files, instead of /tmp .
-trace
Add tracing information to the generated stubs.
-v
Verbose.
-version
Print the version of javah .
/usr/java/bin/javakey [ options ]
javake y
Solaris only. Java security tool. Use javakey to generate digital sig-
natur es for archive files, and to build and manage a database of
entities, their keys and certificates, and indications of their
“trusted” (or nontrusted) status.
The leading – on options may be omitted. Only one option may
be specified per javakey invocation.
Options
In the option arguments below, an id_or_signer is either a secure
ID or a secure signer already in the database.
-c identity [ true | false ]
Cr eate a new database identity named identity. The optional
true or false is an indication as to whether the identity can
be trusted. The default is false .
-cs signer [ true | false ]
Cr eate a new signer in the database named signer. The
optional true or false is an indication of whether the signer
can be trusted. The default is false .
-dc file
Display the certificate in file.
→
Alphabetical Summary of Commands — javakey
18 October 2001 14:52
91javake y
←
-ec id_or_signer cnum cfile
Export certificate cnum fr om id or signer to cfile. The num-
ber must be one previously created by javakey .
-ek id_or_signer public [ private ]
Export the public key for id or signer to file public. Option-
ally, export the private key to file private. The keys must be
in X.509 format.
-g signer algorithm ksize [ public ] [ private ]
Shortcut for -gk to generate a key pair for signer.
-gc file
Generate a certificate according to the directives in file.
-gk signer algorithm ksize [ public ] [ private ]
Generate a key pair for signer using standard algorithm algo-
rithm, with a key-size of ksize bits. The public key is placed
in the file public, and the private key in file private. Export-
ing private keys should be done with caution.
-gs dfile jarfile
Sign the Java Archive file jar file according to directives in
dfile.
-ic id_or_signer csrcfile
Associate the public key certificate in csr cfile with the named
id or signer. This certificate must match a preexisting one, if
ther e is one. Otherwise, this certificate is assigned to the id
or signer.
-ii id_or_signer
Supply information about the id or signer. javakey reads
infor mation typed interactively. End the information with a
line containing a single dot.
-ik identity ksrcfile
Associate the public key in ksr cfile with identity. The key
must be in X.509 format.
-ikp signer public private
Import the key pair from files public and private and associ-
ate them with signer. The keys must be in X.509 format.
-l
List the usernames of all identities and signers in the
database.
-ld Like -l , but provide detailed information.
-li id_or_signer
Pr ovide detailed information just about the named id or
signer.
92
18 October 2001 14:52
Chapter 2 – Unix Commandsjavake y
-r id_or_signer
Remove the id or signer fr om the database.
-t id_or_signer [ true | false ]
Set or reset the trust level for id or signer.
Examples
Cr eate a new identity, arnold , who is to be trusted:
javakey -c arnold true
List detailed information about arnold :
javakey -li arnold
/usr/java/bin/javald [ options ] class
javald
Solaris only. Create a wrapper for Java applications. javald cr e-
ates a program that, when executed, runs the specified Java pro-
gram in the proper environment. This hides knowledge of the
pr oper CLASSPATH envir onment variable, and so on, from the
user who just wishes to run the application.
Options
-C path
Add path to the CLASSPATH that runs the application. This
option may be provided multiple times.
-H dir
Set the JAVA_HOME environment variable to dir.
-j list
Pass list on to java . Multiple options should be quoted.
-o wrapper
Place the generated wrapper in file wrapper.
-R path
Add path to the LD_LIBRARY_PATH envir onment variable
that is used when the application runs. This allows java to
find native methods.
/usr/java/bin/javap [ options ] classfiles
javap
Solaris only. Disassemble Java class files and print the results. By
default, javap prints the public fields and methods of the named
classes.
→
Alphabetical Summary of Commands — javap
18 October 2001 14:52
93javap
←
Options
-b Ignor ed. For backward compatibility with the JDK 1.1 javap .
-c Print out the disassembled byte-codes for each method in the
given classes.
-classpath path
Use path as the search path for class files, overriding
$CLASSPATH. path is a colon-separated list of directories.
-h
Generate code that can be used in a C header file.
-J option
Pass option dir ectly to java .
-l
Display line number and local variable information.
-package
Only disassemble package, protected and public classes and
members. This is the default.
-private
Disassemble all classes and members.
-protected
Only disassemble protected and public classes and members.
-public
Only disassemble public classes and members.
-s
Display the internal type signatures.
-verbose
For each method, print the stack size, number of arguments,
and number of local variables.
-verify
Run the Java verifier.
-version
Print the version of javap .
jdb
/usr/java/bin/jdb [ options ] [ class ]
Solaris only. jdb is the Java Debugger. It is a line-oriented debug-
ger, similar to traditional Unix debuggers, providing inspection
and debugging of local or remote Java interpreters.
jdb can be used in place of java , in which case the program to
be run is already started in the debugger. Or, it may be used to
attach to an already running java session. In the latter case, java
must have been started with the -debug option. This option gen-
erates a password you then supply on the jdb command line.
94
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
jdb
-host host
Attach to the running Java interpreter on host.
-password password
join [ options ] file1 file2
join
Join the common lines of sorted file1 and sorted file2. Read stan-
dard input if file1 is - . The output contains the common field and
the remainder of each line from file1 and file2. In the options
below, n can be 1 or 2, referring to file1 or file2.
Options
-a [ n ]
List unpairable lines in file n (or both if n is omitted). Solaris
does not allow omission of n.
-e s
Replace any empty output field with the string s.
-jn m
Join on the m th field of file n (or both files if n is omitted).
-o n.m
Each output line contains fields specified by file number n
and field number m. The common field is suppressed unless
requested.
-tc Use character c as field separator for input and output.
-v n
Print only the unpairable lines in file n. With both -v 1 and
-v 2 , all unpairable lines are printed. Solaris only.
-1 m
Join on field m of file 1. Fields start with 1. Solaris only.
-2 m
Join on field m of file 2. Fields start with 1. Solaris only.
Examples
Assuming the following input files:
$ cat score
olga
81
rene
82
zack
83
91
92
93
→
Alphabetical Summary of Commands — join
18 October 2001 14:52
95
Use passwor d to connect to the already running Java inter-
pr eter. This password is supplied by java -debug .join
←
$ cat grade
olga
B
rene
B
A
A
List scores followed by grades, including unmatched lines:
$ join -a1 score grade
olga 81 91 B A
rene 82 92 B A
zack 83 93
Pair each score with its grade:
$ join -o 1.1 1.2 2.2 1.3 2.3 score grade
olga 81 B 91 A
rene 82 B 92 A
jre
/usr/java/bin/jre [ options ] class [ arguments ]
Solaris only. Java Runtime Environment. This program actually
executes compiled Java files.
Options
-classpath path
Use path as the search path for class files, overriding
$CLASSPATH. path is a colon-separated list of directories.
-cp pathlist
Pr epend one or more paths to the value of $CLASSPATH.
Use a colon-separated list when supplying multiple paths.
Components may be either directories or full pathnames to
files to be executed.
-Dprop=val
Redefine the value of pr op to be val. This option may be
used any number of times.
-help
Print a usage message.
-ms size
Set the initial size of the heap to size, which is in bytes.
Append k or m to specify kilobytes or megabytes, respec-
tively.
-mx size
Set the maximum size of the heap to size, which is in bytes.
Append k or m to specify kilobytes or megabytes, respec-
tively.
96
18 October 2001 14:52
Chapter 2 – Unix Commandsjre
-noasyncgc
Disable asynchronous garbage collection.
-noclassgc
Disable garbage collection of Java classes.
-nojit
Don’t do JIT (“just in time”) compilation; use the default
interpr eter instead.
-noverify
Disable verification.
-oss size
Set the maximum stack size of Java code in a Java thread.
Append k or m to specify kilobytes or megabytes, respec-
tively. The default maximum size is 400KB.
-ss size
Set the maximum stack size of C code in a Java thread.
Append k or m to specify kilobytes or megabytes, respec-
tively. The default maximum size is 128KB.
-v , -verbose
Print a message to standard output each time a class file is
loaded.
-verbosegc
Print a message every time the garbage collector frees mem-
ory.
-verify
Run the byte-code verifier on all code. Note that this only
verifies byte-codes that are actually executed.
-verifyremote
Run the verifier on all code loaded via a classloader. This is
the default when interpreting.
jsh [ options ] [ arguments ]
jsh
Job control version of sh (the Bourne shell). This provides control
of background and foregr ound pr ocesses for the standard shell.
See Chapter 4.
keylogin [ -r ]
ke ylog in
Solaris only. Prompt user for a password, then use it to decrypt
the person’s secret key. This key is used by secure network ser-
vices (e.g., Secure NFS, NIS+). keylogin is needed only if the user
→
Alphabetical Summary of Commands — keylogin
18 October 2001 14:52
97ke ylog in ← isn’t prompted for a password when logging in. The -r option
updates /etc/.rootkey . Only a privileged user may use this
option. See also chke y and ke ylogout.
ke ylogout keylogout [ option ]
Solaris only. Revoke access to (delete) the secret key used by
secur e network services (e.g., Secure NFS, NIS+). See also chke y
and ke ylog in.
Option
-f
kill
Forget the root key. If specified on a server, NFS security is
br oken. Use with care.
kill [ options ] IDs
Terminate one or more process IDs. You must own the process or
be a privileged user. This command is similar to the kill com-
mand that is built in to the Bourne, Korn, and C shells. A minus
sign before an ID specifies a process group ID. (The built-in ver-
sion doesn’t allow process group IDs, but it does allow job IDs.)
Options
-l
List the signal names. (Used by itself.)
-s signal
Send signal signal to the given process or process group.
The signal number (from /usr/include/sys/signal.h ) or
name (from kill -l ). With a signal number of 9, the kill is
absolute. Solaris only.
-signal
Send signal signal to the given process or process group.
ksh
ksh [ options ] [ arguments ]
Kor n shell command interpreter. See Chapter 4 for more infor ma-
tion, including command-line options.
ld
/usr/ccs/bin/ld [ options ] objfiles
Combine several objfiles, in the specified order, into a single exe-
cutable object module ( a.out by default). ld is the loader and is
usually invoked automatically by compiler commands such as cc .
98
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
ld
Force default behavior for static linking (generate an object
file and list undefined refer ences). Do not use with -r .
-b Ignor e special processing for shared refer ence symbols
(dynamic linking only); output becomes more efficient but
less sharable.
-a
-B directive
Obey one of the following directives:
dynamic
eliminate
group
local
reduce
static
symbolic
When loading, use both dynamic (lib .so ) and
static (lib .a ) libraries to resolve unknown
symbols.
Remove symbols not assigned a version defi-
nition. Solaris only.
Tr eat a shared object and its dependencies as
a group. Implies -z defs . Solaris only.
Tr eat any global symbols that are not
assigned a version definition as local symbols.
Solaris only.
Per form the reduction of symbolic informa-
tion specified by version definitions. Solaris
only.
When loading, use only static (lib .a ) libraries
to resolve unknown symbols.
In dynamic linking, bind a symbol to its local
definition, not to its global definition.
-d [ c ]
Link dynamically (c is y ) or statically (c is n ); dynamic linking
is the default.
-Dtoken ,...
Print debugging information as specified by token ; use help
to get a list of possible values. Solaris only.
-e symbol
Set symbol as the address of the output file’s entry point.
-f obj
Use the symbol table of the shared object being built as an
auxiliary filter on shared object obj. Do not use with -F .
Solaris only.
-F obj
Use the symbol table of the shared object being built as a fil-
ter on shared object obj. Do not use with -f . Solaris only.
→
Alphabetical Summary of Commands — ld
18 October 2001 14:52
99ld
←
-G
In dynamic linking, create a shared object and allow unde-
fined symbols.
-h name
Use name as the shared object file to search for during
dynamic linking (default is Unix object file).
-i
Ignor e LD_LIBRARY_PATH. Useful for avoiding unwanted
ef fects on the runtime search of the executable being built.
Solaris only.
-I name
Use name as the pathname of the loader (interpreter) to
write into the program header. Default is none (static) or
/usr/lib/libc.so.1 (dynamic).
-lx Search a library named lib x .so or lib x .a (the placement of
this option on the line affects when the library is searched).
-L dir
Search directory dir befor e standard search directories (this
option must precede -l ).
-m
List a memory profile for input/output sections.
-M mapfile
Invoke ld dir ectives fr om mapfile ( -M messes up the output
and is discouraged).
-Nstring
Add a DT_NEEDED entry with the value string to the .dynamic
section of the object being built. Solaris only.
-o file
Send the output to file (default is a.out ).
-Qc List version information about ld in the output (c = y , the
default) or do not list (c = n ).
-r
Allow output to be subject to another ld . (Retain relocation
infor mation.)
-R path
Record the colon-separated list of directories in path in the
object file for use by the runtime loader. Multiple instances
may be supplied; the values are concatenated together.
100
18 October 2001 14:52
-s Remove (strip) symbol table and relocation entries.
-t Suppr ess war nings about multiply defined symbols of
unequal size.
Chapter 2 – Unix Commandsld
-u symbol
Enter symbol in symbol table; useful when loading from an
archive library. symbol must precede the library that defines
it (so -u must precede -l ).
-V
Print the version of ld .
-YP,dirlist
Specify a comma-separated list of directories to use in place
of the default search directories (see also -L ).
-z defs | nodefs | text
Specify nodefs to allow undefined symbols. The default,
defs , treats undefined symbols as a fatal error. Use text to
pr oduce an error when there are nonwritable relocations.
-z directive
Solaris only. Obey one of the following directives:
allextract
combreloc
defaultextract
ignore
initfirst
lazyload
loadfltr
muldefs
nodefs
nodelete
nodlopen
Extract all archive members.
Combine multiple relocation sections.
Retur n to the default archive extraction
rules.
Ignor e dynamic dependencies that are not
refer enced as part of the linking.
Shar ed objects only. This object’s initial-
ization runs before that of others added to
the process at the same time. Similarly,
its “finalization” runs after that of other
objects.
Mark dynamic dependencies for lazy
loading. Lazily loaded objects are loaded
when the first binding to the object is
made, not at process startup.
Mark the filter object for immediate pro-
cessing at runtime, instead of at the first
binding.
Allow multiple symbol definitions, using
the first one that occurs. Otherwise, mul-
tiple symbol definitions are a fatal error.
Allow undefined symbols. This is the
default for shared objects. The behavior
is undefined for executables.
Mark the object as not being deletable at
runtime.
Shar ed objects only. The object is not
available from dlopen (3x).
→
Alphabetical Summary of Commands — ld
18 October 2001 14:52
101nolazyload
ld
←
nopartial
noversion
now
origin
record
redlocsym
textoff
textwarn
weakextract
ldd
Don’t mark dynamic dependencies for
lazy loading. Lazily loaded objects are
loaded when the first binding to the
object is made, not at process startup.
Expand partially initialized symbols in
input relocatable objects into the gener-
ated output file.
Do not include any versioning sections.
Force nonlazy runtime binding for the
object.
The object requir es immediate $ORIGIN
pr ocessing at runtime.
Record dynamic dependencies that are
not refer enced as part of the linking. This
is the default.
Remove all local symbols except for the
SECT symbols from the SHT_SYMTAB symbol
table.
In dynamic mode, allow relocations
against all sections, including those that
ar e not writable. This is the default for
shar ed objects.
Dynamic mode only. Warn if ther e
remain any relocations against non-
writable, allocatable sections. This is the
default for executables.
Allow “weak” definitions to trigger archive
extraction.
ldd [ option ] file
List dynamic dependencies; that is, list shared objects that would
be loaded if file wer e executed. (If a valid file needs no shared
objects, ldd succeeds but produces no output.) In addition, ldd ’s
options can show unresolved symbol refer ences that result from
running file.
Options
Specify only one of these options:
102
18 October 2001 14:52
-d Check refer ences to data objects only.
-r Check refer ences to data objects and to functions.
Chapter 2 – Unix CommandsSolar is Options
ldd
The following additional options are specific to Solaris:
Force checking of nonsecure executables. This option is
danger ous if running as a privileged user.
-i Print the execution order of initialization sections.
-l Do immediate processing of any filters, to list all “filtees” and
their dependencies.
-s Display the search path for shared object dependencies.
-v Display all dependency relationships and version requir e-
ments.
/usr/ccs/bin/lex [ options ] [ files ]
-f
lex
Generate a lexical analysis program (named lex.yy.c ) based on
the regular expressions and C statements contained in one or
mor e input files. See also yacc and lex & yacc, which is listed in
the Bibliography.
Options
-c file’s program statements are in C (default).
-e Handle EUC (Extended Unix Code, i.e., 8-bit) characters.
Mutually exclusive with -w . This gives yytext[] type
unsigned char . Solaris only.
-n Suppr ess the output summary.
-Qc Print version information in lex.yy.c (if c = y ) or suppr ess
infor mation (if c = n , the default).
-t Write program to standard output, not lex.yy.c .
-v Print a summary of machine-generated statistics.
-V Print version information on standard error.
-w Handle EUC (8-bit or wider) characters. Mutually exclusive
with -e . This gives yytext[] type wchar_t . Solaris only.
line
line
Read the next line from standard input and write it to standard
output. Exit status is 1 upon EOF. Typically used in csh scripts to
read from the terminal.
→
Alphabetical Summary of Commands — line
18 October 2001 14:52
103line
←
Example
Print the first two lines of output from who :
who | ( line ; line )
lint
/usr/ccs/bin/lint [ options ] files
Detect bugs, portability problems, and other possible errors in the
specified C programs. By default, lint uses definitions in the C
library llib-lc.ln . If desir ed, output from .c files can be saved in
“object files” having a .ln suf fix. A second lint pass can be
invoked on .ln files and libraries for further checking. lint also
accepts the cc options -D , -I , and -U . It may accept additional cc
options that are system-specific. See also Checking C Programs
with lint, which is listed in the Bibliography. Note: this command
checks programs written in ANSI C; use /usr/ucb/lint if you
want to check programs written in pre-ANSI C. Note also that
options -a , -b , -h , and -x have exactly the opposite meaning in
the versions for BSD and System V.
Options
-a Ignor e long values assigned to variables that aren’t long .
-b Ignor e break statements that cannot be reached.
-c Don’t execute the second pass of lint ; save output from first
pass in .ln files. (Same as BSD -i option.)
-F Print files using full pathname, not just the filename.
-h Don’t test for bugs, bad style, or extraneous information.
-k
Reenable warnings that are nor mally suppr essed by directive
/* LINTED [message ] */ , and print the additional message (if
specified).
-Ldir
Search for lint libraries in directory dir befor e searching
standard directories.
-lx Use library llib-l x .ln in addition to llib-lc.ln.
-m Ignor e extern declarations that could be static .
-n Do not check for compatibility.
-o lib
Cr eate a lint library named llib-l. lib .ln fr om the output of
the first pass of lint .
104
18 October 2001 14:52
Chapter 2 – Unix Commands-p
Check for portability to variants of C.
lint
-Rfile
Place .ln output (from a .c file) in file, for use by cxref .
Pr oduce short (one-line) diagnostics.
-u Ignor e functions or external variables that are undefined or
unused.
-v Ignor e unused arguments within functions; same as specify-
ing the directive /* ARGSUSED */ .
-V Print product name and release on standard error.
-s
-Wfile
Same as -R , except file is prepar ed for cflow .
-x Ignor e unused variables referr ed to by extern declarations.
-y Same as using the directive /* LINTLIBRARY */ , which is the
same as supplying options -v and -x .
listusers [ options ]
listuser s
Solaris only. List all users, optionally just by group, or by specific
users.
Options
-g grouplist
List all users in the comma-separated list of groups gr ouplist.
-l users
List just the named users, sorted by login. A comma-sepa-
rated list may also be provided.
ln [ options ] file1 file2
ln [ options ] files directory
ln
Cr eate pseudonyms (links) for files, allowing them to be accessed
by differ ent names. In the first form, link file1 to file2, wher e file2
is usually a new filename. If file2 is an existing file, it is removed
first; if file2 is an existing directory, a link named file1 is created
in that directory. In the second form, create links in dir ectory,
each link having the same name as the file specified.
→
Alphabetical Summary of Commands — ln
18 October 2001 14:52
105Options
ln
←
locale
-f Force the link to occur (don’t prompt for overwrite permis-
sion).
-n Do not overwrite existing files.
-s Cr eate a symbolic link. This lets you link across filesystems
and also see the name of the link when you run ls -l .
(Otherwise, you have to use find -inum to find any other
names a file is linked to.)
locale [ options ] [ name ...]
Solaris only. Print locale-specific information. With no arguments,
locale summarizes the current locale. Depending on the argu-
ments, locale prints information about entire locale categories or
the value of specific items within a locale. A public locale is one
an application can access. See also localedef.
Options
-a
Print information about all available public locales. The
POSIX locale should always be available.
localedef
-c Pr ovide infor mation about the locale category name. Useful
with or without -k .
-k Print the names and values of the given locale keywords.
-m Print the names of the available charmaps.
localedef [ options ] localename
Solaris only. localedef reads a locale definition either on standard
input or from the file named with the -i option. The format is
documented in the locale (5) manpage. It generates a temporary C
source file that is compiled into a shared-object library. This
library file can then be used by programs that pay attention to the
settings of the locale-specific environment variables in order to
retur n the correct values for the given locale.
The generated file has the name localename .so. version. The
default 32-bit version should be moved to /usr/lib/locale/
localename / localename .so. version. The 64-bit environment on
SPARC systems should use /usr/lib/locale/ localename /
sparcv9/ localename .so. version.
106
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
-c
localedef
Cr eate the shared object file, even if there are war nings.
-C options
Pass options to the C compiler. This option is deprecated in
favor of -W cc .
-f mapfile
The file mapfile pr ovides a mapping of character symbols
and collating element symbols to actual character encodings.
This option must be used if the locale definition uses sym-
bolic names.
-i localefile
Read the locale definitions from localefile instead of from
standard input.
-L options
Pass options to the C compiler, after the name of the C
source file. This option is deprecated in favor of -W cc .
-m model
Specify -m ilp32 to generate 32-bit object files (this is the
default). Use -m lp64 to generate 64-bit object files (SPARC
only).
-W cc,args
Pass ar gs on to the C compiler. Each argument is separated
fr om the previous by a comma.
-x exfile
Read additional options from the extension file exfile.
Example
Generate a 64-bit shared object locale file for Klingonese; ignore
any warning messages:
localedef -c -m lp64 -i klingon.def klingon
logger [ options ] [ messages ]
logger
Solaris only. Log messages to the system log. Command-line mes-
sages are logged if provided. Otherwise, messages are read and
logged, line-by-line, from the file provided via -f . If no such file
is given, logger reads messages from standard input.
→
Alphabetical Summary of Commands — logger
18 October 2001 14:52
107logger
←
Options
-f file
Read and log messages from file.
Log the process ID of the logger pr ocess with each message.
-i
-p priority
Log each message with the given priority. Priorities have the
for m facility . level. The default is user.notice . See syslog (3)
for more infor mation.
-t tag
Add tag to each message line.
Example
Warn about upcoming trouble:
logger -p user.emerg ’Incoming Klingon battleship!’
log in
login [ options ]
Sign on and identify yourself to the system. At the beginning of
each terminal session, the system prompts you for your username
and, if relevant, a password. The options aren’t normally used.
The Korn shell and the C shell have their own, built-in versions
of login . See Chapter 4 and Chapter 5 for more infor mation.
Options
user
Sign on as user (instead of being prompted).
-dtty
Specify the pathname of the tty that serves as the login port.
-h host [ term ]
Used for remote logins via telnet to indicate the login is
fr om host host and that the user’s terminal type is ter m.
Solaris only.
-p
Pass the current environment to the new login session.
Solaris only.
-r host
Used for remote logins via rlogin to indicate the login is
fr om host host. Solaris only.
var=value
When specified after the username, assign a value to one or
mor e envir onment variables. PATH and SHELL can’t be
changed.
108
18 October 2001 14:52
Chapter 2 – Unix Commandslog in
value
Pass values into the environment. Each value that does not
contain an = is assigned to a variable of the form L n, wher e
n starts at 0 and increments. Solaris only.
Display your login name. SVR4 prints the value of the LOGNAME
envir onment variable located in /etc/profile . Solaris looks the
user up in /var/adm/utmp , which is where infor mation is kept
about logged-in users. See also whoami.
look [ options ] string [ file ]
look
Solaris only. Look through a sorted file and print all lines that
begin with string. Words may be up to 256 characters long. This
pr ogram is potentially faster than fgrep because it relies on the
file being already sorted, and can thus do a binary search through
the file, instead of reading it sequentially from beginning to end.
With no file, look searches /usr/share/lib/dict/words (the
spelling dictionary) with options -df .
Options
-d Use dictionary order. Only letters, digits, space, and tab are
used in comparisons.
-f Fold case; ignore case distinctions in comparisons.
-t char
Use char as the termination character, i.e., ignore all charac-
ters to the right of char.
lookbib
lookbib database
Part of the refer suite of programs. See Chapter 17.
lp [ options ] [ files ]
lp
Send files to the printer. With no arguments, prints standard input.
To print standard input along with other files, specify – as one of
the files.
→
Alphabetical Summary of Commands — lp
18 October 2001 14:52
109
logname
lognamelp
←
Options
-c
Copy files to print spooler; if changes are made to file while
it is still queued for printing, the printout is unaffected.
-d dest
Send output to destination printer named dest.
-d any
Used after -f or -S to print the request on any printer that
supports the given form or character set.
-f name
Print request on preprinted form name. name refer ences
printer attributes set by the administrative command lpforms .
-H action
Print according to the named action : hold (notify before
printing), resume (r esume a held request), immediate (print
next; privileged users only).
-i IDs
Override lp options used for request IDs curr ently in the
queue; specify new lp options after -i . For example, change
the number of copies sent.
-m
Send mail after files ar e printed.
-n number
Specify the number of copies to print.
-o options
Set one or more printer-specific options. Standard options
include:
cpi=n
Print n characters per inch. n can also be
pica , elite , or compressed .
lpi=n
length=n
nobanner
nofilebreak
width=n
stty=list
-p
Print n lines per inch.
Print pages n units long; e.g., 11i (inches), 66
(lines).
Omit banner page (separator) from request.
Suppr ess for mfeeds between files.
Print pages n units wide; e.g., 8.5i (inches),
72 (columns).
Specify a quoted list of stty options.
Enable notification of completion of the print job. Solaris
only.
-P list
Print only the page numbers specified in list.
110
18 October 2001 14:52
Chapter 2 – Unix Commandslp
-q n
Print request with priority level n (39 = lowest).
-r Don’t adapt request if content isn’t suitable; reject instead.
(Obscur e; used only with -T .)
-s Suppr ess messages.
-S name
Use the named print wheel or character set for printing.
-t title
Use title on the printout’s banner page.
-T content
Send request to a printer that supports content (default is
simple ; an administrator sets content via lpadmin -I ).
-w
Write a message on the user’s terminal after files ar e printed
(same as -m if user isn’t logged on).
-y modes
Print according to locally defined modes.
Examples
Send mail after printing five copies of report :
lp -n 5 -m report
For mat and print thesis ; print title too:
nroff -ms thesis | lp - title
/usr/ucb/lpq [ options ] [ job#s ] [ users ]
lpq
Show the printer queue. Standard SVR4 uses lpstat .
/usr/ucb/lpr [ options ] [ files ]
lpr
Send files to the printer. Standard SVR4 uses lp .
/usr/ucb/lprm [ options ] [ job#s ] [ users ]
lpr m
Remove requests from printer queue. Standard SVR4 uses cancel .
Alphabetical Summary of Commands — lpr m
18 October 2001 14:52
111lprof
lprof [ options ]
lprof -m files [ -T ] -d out
SVR4 only. Display a program’s profile data on a line-by-line
basis. Data includes a list of source files, each source-code line
(with line numbers), and the number of times each line was exe-
cuted. By default, lprof interpr ets the profile file pr og .cnt . This
file is generated by specifying cc -ql when compiling a program
or when creating a shared object named pr og (default is a.out ).
The PROFOPTS environment variable can control profiling at run-
time. See also prof and gprof.
Options
-c file
Read input profile file instead of pr og .cnt .
-d out
Stor e merged profile data in file out. Must be used with -m .
-I dir
Search for include files in dir as well as in the default place
( /usr/include ).
-m files
Merge several profile files and total the execution counts.
files ar e of the form f1 .cnt , f2 .cnt , f3 .cnt , etc., where each
file contains the profile data from a differ ent run of the same
pr ogram. Used with -d .
-o prog
Look in the profile file for a program named pr og instead of
the name used when the profile file was created. -o is
needed when files have been renamed or moved.
-p
Print the default listing; useful with -r and -s .
-r list
Used with -p to print only the source files given in list.
112
18 October 2001 14:52
-s For each function, print the percentage of code lines that are
executed.
-T Ignor e timestamp of executable files being profiled. Nor-
mally, times are checked to insure that the various profiles
wer e made from the same version of an executable.
-V Print the version of lprof on standard error.
-x Omit execution counts. For lines that executed, show only
the line numbers; for lines that didn’t execute, print the line
number, the symbol [U] , and the source line.
Chapter 2 – Unix Commandslpstat [ options ]
lpstat
Print the lp print queue status. With options that take a list argu-
ment, omitting the list produces all information for that option.
list can be separated by commas or, if enclosed in double quotes,
by spaces.
Options
-a [ list ]
Show whether the list of printer or class names is accepting
requests.
-c [ list ]
Show information about printer classes named in list.
-d Show the default printer destination.
-D Use after -p to show a brief printer description.
-f [ list ]
Verify that the list of forms is known to lp .
-l
Use after -f to describe available forms, after -p to show
printer configurations, or after -S to describe printers appro-
priate for the specified character set or print wheel.
-o [ list ]
Show the status of output requests. list contains printer
names, class names, or request IDs.
-p [ list ]
Show the status of printers named in list.
-r Show whether the print scheduler is on or off.
-R Show the job’s position in the print queue.
-s Summarize the print status (shows almost everything).
-S [ list ]
Verify that the list of character sets or print wheels is known
to lp .
-t
Show all status information (reports everything).
-u [ list ]
Show request status for users on list. list can be:
user
all
host!user
host!all
all!user
user on local machine
All users on all systems
user on machine host
All users on host
user on all systems
→
Alphabetical Summary of Commands — lpstat
18 October 2001 14:52
113all!all
lpstat
←
All users on all systems
-v [ list ]
Show device associated with each printer named in list.
ls
ls [ options ] [ names ]
If no names ar e given, list the files in the current directory. With
one or more names, list files contained in a directory name or
that match a file name. The options let you display a variety of
infor mation in differ ent for mats. The most useful options include
-F , -R , -a , -l , and -s . Some options don’t make sense together;
e.g., -u and -c .
Note: the Solaris /usr/bin/ls pays attention to the LC_COLLATE
envir onment variable. Its default value, en_US , (in the United
States) causes ls to sort in dictionary order (i.e., ignoring case).
Set LC_COLLATE to C to restor e the traditional Unix behavior of
sorting in ASCII order, or use /usr/ucb/ls .
Options
114
18 October 2001 14:52
-a List all files, including the normally hidden . files.
-A Like -a , but exclude . and .. (the current and parent direc-
tories). Solaris only.
-b Show nonprinting characters in octal.
-c List files by inode modification time.
-C List files in columns (the default format, when displaying to a
ter minal device).
-d List only the directory’s information, not its contents. (Most
useful with -l and -i .)
-f Interpr et each name as a directory (files are ignor ed).
-F Flag filenames by appending / to directories, > to doors
(Solaris only), * to executable files, | to fifos, @ to symbolic
links, and = to sockets.
-g Like -l , but omit owner name (show group).
-i List the inode for each file.
-l Long format listing (includes permissions, owner, size, modi-
fication time, etc.).
Chapter 2 – Unix CommandsList the file or directory refer enced by a symbolic link rather
than the link itself.
-m Merge the list into a comma-separated series of names.
-n Like -l , but use user ID and group ID numbers instead of
owner and group names.
-o Like -l , but omit group name (show owner).
-p Mark directories by appending / to them.
-q Show nonprinting characters as ? .
-r List files in reverse order (by name or by time).
-R Recursively list subdirectories as well as current directory.
-s Print sizes of the files in blocks.
-t List files according to modification time (newest first).
-u List files according to the file access time.
-x List files in rows going across the screen.
-1 Print one entry per line of output.
ls
-L
Examples
List all files in the current directory and their sizes; use multiple
columns and mark special files:
ls -asCF
List the status of directories /bin and /etc :
ls -ld /bin /etc
List C source files in the current directory, the oldest first:
ls -rt *.c
Count the files in the current directory:
ls | wc -l
/usr/ccs/bin/m4 [ options ] [ files ]
m4
Macr o pr ocessor for RATFOR, C, and other program files.
Options
-Bn Set push-back and argument collection buffers to n (default
is 4096).
→
Alphabetical Summary of Commands — m4
18 October 2001 14:52
115m4
←
-Dname [= value ]
Define name as value or, if value is not specified, define
name as null.
-e
Operate interactively, ignoring interrupts.
-Hn Set symbol table hash array size to n (default is 199).
-s
Enable line-sync output for the C prepr ocessor.
-Sn Set call stack size to n (default is 100 slots).
-Tn Set token buffer size to n (default is 512 bytes).
-Uname
Undefine name.
mail
mail [ options ] [ users ]
Read mail (if no users listed), or send mail to other users. Type ?
for a summary of commands. Esoteric debugging options exist
(not listed) for system administrators. See also mailx and vacation.
Options for Sending Mail
-m type
Print a “Message-type:” line at the heading of the letter, fol-
lowed by type of message.
-t Print a “To:” line at the heading of the letter, showing the
names of the recipients.
-w Force mail to be sent to remote users without waiting for
remote transfer program to complete.
Options for Reading Mail
-e
Test for the existence of mail without printing it. Exit status
is 0 if mail exists; otherwise 1.
-f file
Read mail from alternate mailbox file.
-F names
Forward all incoming mail to recipient names. SVR4 only.
(See vacation in Appendix B.)
116
18 October 2001 14:52
-h Display a window of messages rather than the latest mes-
sage.
-p Print all messages without pausing.
Chapter 2 – Unix Commands-P Print messages with all header lines displayed.
-q Terminate on an interrupt.
-r Print oldest messages first.
mailx
Read mail, or send mail to other users. For a summary of com-
mands, type ? in command mode (e.g., when reading mail) or  ̃?
in input mode (e.g., when sending mail). The start-up file .mailrc
in the user’s home directory is useful for setting display variables
and for defining alias lists.
On Solaris, /usr/ucb/mail and /usr/ucb/Mail ar e symbolic links
to mailx .
Options
-B
Do not buffer standard input or standard output. Solaris
only.
-b bcc
Send blind carbon copies to bcc. Quote the list if there are
multiple recipients. Solaris only.
-c cc
Send carbon copies to cc. Quote the list if there are multiple
recipients. Solaris only.
-d Set debugging.
-e Test for the existence of mail without printing it. Exit status
is 0 if mail exists; otherwise 1.
-f [ file ]
Read mail in alternate file (default is mbox ).
-F
Stor e message in a file named after the first recipient.
-h n
Stop trying to send after making n network connections, or
“hops” (useful for avoiding infinite loops).
-H Print mail header summary only.
-i Ignor e interrupts (useful on modems); same as ignore mailx
option.
-I Use with -f when displaying saved news articles; newsgroup
and article-ID headers are included.
→
Alphabetical Summary of Commands — mailx
18 October 2001 14:52
117
mailx [ options ] [ users ]
mailmailx
←
-n Do not read the system startup mailx.rc or Mail.rc file(s).
-N Don’t print mail header summary.
-r address
Specify a retur n addr ess for mail you send.
-s sub
Place string sub in the subject header field. sub must be
quoted if it contains whitespace.
-t
Use To: , Cc: , and Bcc: headers in the input to specify recipi-
ents instead of command-line arguments. Solaris only.
-T file
Record message IDs and article IDs (of news articles) in file.
-u user
Read user’s mail.
make
-U Convert uucp -type addresses to Internet format.
-v Invoke sendmail with the -v option. Solaris only.
-V Print version number of mailx and exit.
- ̃ Pr ocess tilde escapes, even if not reading from a terminal.
Solaris only.
/usr/ccs/bin/make [ options ] [ targets ]
Update one or more tar gets according to dependency instructions
in a description file in the current directory. By default, this file is
called makefile or Makefile . See Chapter 20, The make Utility, for
mor e infor mation on make . See also Managing Projects with make,
listed in the Bibliography.
Note: the Solaris make has many extensions over the standard
SVR4 make described here. See make (1) for more infor mation.
Options
-e
Override makefile assignments with environment variables.
-f makefile
Use makefile as the description file; a filename – denotes
standard input.
118
18 October 2001 14:52
-i Ignor e command error codes (same as .IGNORE ).
-k Abandon the current entry when it fails, but keep working
with unrelated entries.
Chapter 2 – Unix CommandsPrint commands but don’t execute (used for testing).
-p Print macro definitions and target descriptions.
-q Query; retur n 0 if file is up-to-date; nonzero otherwise.
-r Do not use “default” rules.
-s Do not display command lines (same as .SILENT ).
-t Touch the target files, causing them to be updated.
man [ options ] [[ section ] subjects ]
make
-n
man
Display information from the online refer ence manual. Each sub-
ject is usually the name of a command from Section 1 of the
online manual, unless you specify an optional section fr om 1 to 8.
If you don’t specify a subject, you must supply either a keyword
(for -k ) or a file (for -f ). No options except -M can be used with
-k or -f . The MANPATH envir onment variable defines the directo-
ries in which man searches for information (default is /usr/share/
man ). PAGER defines how output is sent to the screen (default is
more -s ). Note: in Solaris, section must be preceded by -s .
Options
- Pipe output through cat instead of more -s .
-a Show all pages matching subject. Solaris only.
-d Debug; evaluate the man command but don’t execute. Solaris
only.
-f files
Display a one-line summary of one or more refer ence files.
Same as whatis .
-F
Search MANPATH dir ectories, not windex database. Solaris
only.
-k keywords
Display any header line that contains one of the specified
keywor ds. Same as apropos .
-l
Like -a , but list only the pages. Solaris only.
-M path
Search for online descriptions in directory path instead of
default directory. -M overrides MANPATH.
→
Alphabetical Summary of Commands — man
18 October 2001 14:52
119man
←
-r
Refor mat but don’t display manpage. Same as man - -t .
Solaris only.
-s section
Specify the section of the manpage to search in. Requir ed
on Solaris for anything that isn’t a command.
-t
For mat the manpages with troff .
-T mac
Display information using macro package mac instead of
tmac.an (the man macr os).
Examples
Save documentation on the mv command (strip backspaces):
man mv | col -b > mv.txt
Display commands related to linking and compiling:
man -k link compile | more
Display a summary of all intro files:
man -f intro
Look up the intro page from Section 3M (the math library):
man 3m intro
man -s 3m intro
mcs
In SVR4
In Solaris
/usr/ccs/bin/mcs [ options ] files
Manipulate the comment section. mcs adds to, compresses,
deletes, or prints a section of one or more ELF object files. The
default section is .comment . If any input file is an archive, mcs acts
on each component file and removes the archive symbol table
(unless -p was the only option specified). Use ar s to regenerate
the symbol table. Use of mcs -d can significantly decrease the size
of large executables, often saving considerable disk space. At
least one option must be supplied.
Options
-a string
Append string to the comment section of files.
120
18 October 2001 14:52
-c Compr ess the comment section of files and remove duplicate
entries.
-d Delete the comment section (including header).
Chapter 2 – Unix Commandsmcs
-n name
Act on section name instead of .comment .
-p Print the comment section on standard output.
-V Print the version of mcs on standard error.
mcs -p kernel.o
Print the comment section of kernel.o
mesg [ options ]
mesg
Change the ability of other users to use talk , or to send write
messages to your terminal. With no options, display the permis-
sion status.
Options
-n Forbid write messages.
-y Allow write messages (the default).
Both options may be provided without the leading – , for compati-
bility with BSD.
mkdir [ options ] directories
mkdir
Cr eate one or more dir ectories. You must have write permission
in the parent directory in order to create a directory. See also
rmdir.
Options
-m mode
Set the access mode for new directories.
-p
Cr eate intervening parent directories if they don’t exist.
Examples
Cr eate a read/execute-only directory named personal :
mkdir -m 555 personal
The following sequence:
mkdir work; cd work
mkdir junk; cd junk
mkdir questions; cd ../..
could be accomplished by typing this:
mkdir -p work/junk/questions
Alphabetical Summary of Commands — mkdir
18 October 2001 14:52
121
Examplemkmsgs
mkmsgs [ options ] string_file msg_file
Convert string_file (a list of text strings) into msg_file (the file
whose format is readable by gettxt ). The created msg_file is also
used by the commands exstr and srchtxt .
Options
-i locale
Cr eate msg_file in directory: /usr/lib/locale/ locale /LC_MES-
SAGES . For example, if string_file is a collection of error mes-
sages in German, you might specify locale as german .
-o
more
Overwrite existing msg_file.
more [ options ] [ files ]
Display the named files on a terminal, one screenful at a time.
After each screen is displayed, press the Return key to display the
next line or press the spacebar to display the next screenful. Press
h for help with additional commands, q to quit, / to search, or :n
to go to the next file. more can also be invoked using the name
page .
Options
-c Page through the file by clearing the screen instead of
scr olling. This is often faster and is much easier to read.
-d Display the prompt Press space to continue, ’q’ to quit .
-f Count logical rather than screen lines. Useful when long lines
wrap past the width of the screen.
-l Ignor e for mfeed ( ˆL ) characters.
-r Force display of control characters, in the form ˆx .
-s Squeeze; display multiple blank lines as one.
-u Suppr ess underline characters and backspace ( ˆH ).
-w Wait for a user keystroke before exiting.
-n Use n lines for each “window” (default is a full screen).
+num
Begin displaying at line number num.
+/pattern
Begin displaying two lines before patter n.
122
18 October 2001 14:52
Chapter 2 – Unix CommandsExamples
more
Page through file in “clear” mode, and display prompts:
more -cd file
For mat doc to the screen, removing underlines:
nroff doc | more -u
View the manpage for the grep command; begin near the word
“BUGS” and compress extra whitespace:
man grep | more +/BUGS -s
msgfmt [ options ] pofiles
msgfmt
Solaris only. msgfmt translates “portable object files” (file .po ) into
loadable message files that can be used by a running application
via the gettext (3C) and dgettext (3C) library functions.
Portable object files are created using xgettext fr om the original
C source code files. A translator then edits the .po file, providing
translations of each string (or “message”) in the source program.
The format is described in the msgfmt (1) manpage.
Once compiled by msgfmt , the running program uses the transla-
tions for its output when the locale is set up appropriately.
Options
-o file
Place the output in file. This option ignores domain dir ectives
and duplicate msgid s.
-v
Be verbose. Duplicate message identifiers are listed, but mes-
sage strings are not redefined.
mv [ options ] sources target
mv
Basic command to move files and directories around on the sys-
tem or to rename them. mv works as the following table shows.
Sour ce Target Result
File
File name
Existing file Rename file as name.
Overwrite existing file
with source file.
→
Alphabetical Summary of Commands — mv
18 October 2001 14:52
123mv
←
Sour ce Target Result
Dir ectory name Dir ectory Existing directory One or more files Existing dir ectory Rename directory as
name.
Move directory to be a
subdir ectory of existing
dir ectory.
Move files to directory.
Options
native2ascii
-- Use this when one of the names begins with a – . For com-
patibility with old programs, a plain – also works.
-f Force the move, even if tar get file exists; suppress messages
about restricted access modes.
-i Inquir e; pr ompt for a y (yes) response before overwriting an
existing target.
/usr/java/bin/native2ascii [ options ] [ input [ output ]]
Solaris only. Convert files encoded in the native character encod-
ing to Latin-1 or Unicode encoded files. By default, native2ascii
reads standard input and writes standard output. Supply file-
names for input and output to read/write named files, instead.
A large number of encodings are supported; see the manpage for
the complete list.
Options
-encoding encoding
Use encoding for the translation. The default encoding is the
value of the system property file.encoding .
-reverse
Per form the reverse operation: translate from Latin-1 or Uni-
code to a native encoding.
nawk
nawk [ options ] [ ’program’ ] [ files ] [ variable=value ]
New version of awk , with additional capabilities. nawk is a pattern-
matching language useful for manipulating data. See Chapter 11
for more infor mation on nawk .
124
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
nawk
-f file
Read program instructions from file instead of supplying pr o-
gram instructions on command line. This option may be
specified multiple times; each file is concatenated with the
others to make up the program source code.
-F regexp
Separate fields using regular expression regexp.
-v variable=value
Assign value to variable befor e executing ’ pr ogram ’ .
variable=value
Assign value to variable. When specified intermixed with
files, the assignment occurs at that point in the processing.
neqn [ options ] [ files ]
neqn
Equation prepr ocessor for nroff . See Chapter 17.
nice [ options ] command [ arguments ]
nice
Execute a command and ar guments with lower priority (i.e., be
“nice” to other users). Also built-in to the C shell, with a differ ent
command syntax (see Chapter 5).
Options
-n
Run command with a niceness of n (1-19); default is 10.
Higher n means lower priority. A privileged user can raise
priority by specifying a negative n (e.g., −5). nice works dif-
fer ently in the C shell (see Chapter 5). + n raises priority, - n
lowers it, and 4 is the default.
-n n
Same as – n. Solaris only.
nl [ options ] [ file ]
nl
Number the lines of file in logical page segments. Numbering
resets to 1 at the start of each logical page. Pages consist of a
header, body, and footer; each section may be empty. It is the
body that gets numbered. The sections are delimited by special
standalone lines as indicated next; the delimiter lines are copied
to the output as empty lines.
→
Alphabetical Summary of Commands — nl
18 October 2001 14:52
125nl
←
Section Delimiters
\:\:\:
\:\:
\:
Start of header
Start of body
Start of footer
Options
-btype
Number lines according to type. Values are:
a
n
t
p"exp"
All lines.
No lines.
Text lines only (the default).
Lines matching the regular expression exp only.
-dxy
Use characters xy to delimit logical pages (default is \: ).
-ftype
Like -b , but number footer (default type is n ).
-htype
Like -b , but number header (default type is n ).
-in Incr ement each line number by n (default is 1).
-ln Count n consecutive blank lines as one line.
-nformat
Set line number for mat. Values are:
ln
rn
rz
-p
Left-justify, omit leading zeros.
Right-justify, omit leading zeros (default).
Right-justify.
Do not reset numbering at start of pages.
-sc Separate text from line number with character(s) c (default is
a tab).
-vn Number each page starting at n (default is 1).
-wn Use n columns to show line number (default is 6).
Examples
List the current directory, numbering files as 1), 2), etc.:
ls | nl -w3 -s’) ’
Number C source code and save it:
126
18 October 2001 14:52
Chapter 2 – Unix Commandsnl prog.c > print_prog
nl
Number only lines that begin with #include :
nl -bp"ˆ#include" prog.c
nm
Print the symbol table (name list) in alphabetical order for one or
mor e object files (usually ELF or COFF files), shared or static
libraries, or binary executable programs. Output includes each
symbol’s value, type, size, name, etc. A key letter categorizing the
symbol can also be displayed. You must supply at least one
object file.
Options
-A Write the full pathname or library name on each line. Solaris
only.
-C Print demangled C++ symbol names. Solaris only.
-D Display the SHT_DYNSYM symbol information. Solaris only.
-e Report only external and static symbols; obsolete.
-f Report all information; obsolete.
-g Write only external (global) symbol information.
only.
-h Suppr ess the header.
-l Use with -p ; indicate WEAK symbols by appending an aster-
isk ( * ) to key letters.
-n Sort the external symbols by name.
-o Report values in octal.
-p Pr ecede each symbol with its key letter (used for parsing).
-r Report the object file’s name on each line.
-R Print the archive name (if present), followed by the object
file and symbol name. -r overrides this option. Solaris only.
-s Print section name instead of section index. Solaris only.
Solaris
-t format
Write numeric values in the specified for mat : d for decimal,
o for octal, and x for hexadecimal. Solaris only.
→
Alphabetical Summary of Commands — nm
18 October 2001 14:52
127
/usr/ccs/bin/nm [ options ] objfilesnm
←
-T Truncate the symbol name in the display; obsolete.
-u Report only the undefined symbols.
-v Sort the external symbols by value.
-V Print nm ’s version number on standard error.
-x Report values in hexadecimal.
Ke y Letter s
A
B
C
D
F
N
S
T
U
nohup
Absolute symbol.
BSS (uninitialized data space).
Common symbol. SVR4 only.
Data object symbol.
File symbol.
Symbol with no type.
Section symbol.
Text symbol.
Undefined symbol.
nohup command [ arguments ] &
Continue to execute the named command and optional command
ar guments after you log out (make command immune to
hangups; i.e., no hangup). In the C shell, nohup is built in. In the
Bour ne shell, nohup allows output redir ection; output goes to
nohup.out by default. In the Korn shell, nohup is an alias that
allows the command it runs to also be aliased. (See Chapter 4
and Chapter 5.)
nrof f
nroff [ options ] [ files ]
For mat documents to line printer or to screen. See Chapter 12,
nr off and trof f.
od
od [ options ] [ file ] [[+] offset [ . | b ]]
Octal dump; produce a dump (normally octal) of the named file.
file is displayed from its beginning, unless you specify an of fset
(nor mally in octal bytes). In the following options, a “word” is a
16-bit unit.
128
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
od
-A base
Indicate how the offset should be written. Values for base
ar e d for decimal, o for octal, x for hexadecimal, or n for no
of fset. Solaris only.
Display bytes as octal.
-c Display bytes as ASCII.
-C Interpr et bytes as characters based on the setting of
LC_CTYPE. Solaris only.
-d Display words as unsigned decimal.
-D Display 32-bit words as unsigned decimal.
-f Display 32-bit words as floating point.
-F Display 64-bit words as extended precision.
-b
-j skip
Jump over skip bytes from the beginning of the input. skip
can have a leading 0 or 0x for it to be treated as an octal or
hexadecimal value. It can have a trailing b , k , or m to be
tr eated as a multiple of 512, 1024, or 1,048,576 bytes. Solaris
only.
-N count
Pr ocess up to count input bytes. Solaris only.
-o Display words as unsigned octal (the default).
-O Display 32-bit words as unsigned octal.
-s Display words as signed decimal.
-S Display 32-bit words as signed decimal.
-t type_string
Specify one or more output types. See the section “Type
Strings.” Solaris only.
-v Verbose; show all data. Without this, duplicate lines print as *.
-x Display words as hexadecimal.
-X Display 32-bit words as hexadecimal.
+ Requir ed befor e of fset if file isn’t specified.
Modifier s for offset
.
of fset value is decimal.
→
Alphabetical Summary of Commands — od
18 October 2001 14:52
129od
b
←
of fset value is 512-byte blocks.
Type Strings
Type strings can be followed by a decimal number indicating
how many bytes to process.
ASCII named characters (e.g., BEL for \007 )
Single- or multibyte characters
Signed decimal, unsigned octal, decimal, and hexadeci-
mal
Floating point
a
c
d , o , u , x
f
pa ge
page [ options ] [ files ]
Same as more .
passwd
passwd [ options ] [ user ]
Cr eate or change a password associated with a user name. Only
the owner or a privileged user may change a password. Owners
need not specify their user name.
Options
Nor mal users may change the so-called gecos infor mation (user’s
full name, office, etc.) and login shell when using NIS or NIS+;
otherwise only privileged users may change the following:
-D domain
Use the passwd.org_dir database in domain, instead of in the
local domain. Solaris only.
-e Change the login shell. Solaris only.
-g Change the gecos information. Solaris only.
-r db
Change the password in password database db, which is one
of files , nis , or nisplus . Only a privileged user may use
files . Solaris only.
-s
Display password information:
1.
2.
user name.
Password status ( NP for no password, PS for password,
LK for locked).
3.
130
18 October 2001 14:52
The last time the password was changed (in mm/dd/yy
for mat).
Chapter 2 – Unix Commands4. Number of days that must pass before user can rechange
the password.
5. Number of days before the password expires.
6. Number of days prior to expiration that user is warned
of impending expiration.
passwd
Options (privileged users only)
-a Use with -s to display password information for all users.
user should not be supplied.
-d Delete password; user is no longer prompted for one.
-f Force expiration of user’s password; user must change pass-
word at next login.
-h Change the home (login) directory. Solaris only.
-l Lock user’s password; mutually exclusive with -d .
-n
Set Item 4 of user’s password information. Usually used with
-x .
-w Set Item 6 for user.
-x Set Item 5 for user. Use –1 to disable password aging, 0 to
force expiration like -f .
paste [ options ] files
paste
Merge corresponding lines of one or more files into vertical
columns, separated by a tab. See also cut, join, and pr.
Options
-
Replace a filename with the standard input.
-d’char’
Separate columns with char instead of a tab. char can be
any regular character or the following escape sequences:
\n
\t
\
\0
Newline
Tab
Backslash
Empty string
Note: you can separate columns with differ ent characters by
supplying more than one char.
→
Alphabetical Summary of Commands — paste
18 October 2001 14:52
131paste
-s
←
Merge subsequent lines from one file.
Examples
Cr eate a thr ee-column file fr om files x, y, and z :
paste x y z > file
List users in two columns:
who | paste - -
Merge each pair of lines into one line:
paste -s -d"\t\n" list
patch
patch [ options ] [ sourcefile [ patchfile ]]
Solaris only. patch reads a “patch” containing the output of diff
in normal, ed -script, or context format, and applies the changes
contained therein to the original version of sour cefile. Multiple
files can be patched, but it must be possible to determine the
name of the original file from the contents of the patch. Distribut-
ing patches is an easy way to provide upgrades to source file dis-
tributions where the changes are small relative to the size of the
entir e distribution.
Note: this entry documents the Solaris version, which is a some-
what older version of Larry Wall’s original patch pr ogram. The
Fr ee Softwar e Foundation now maintains patch . Newer, mor e
capable versions are available from them and are recommended;
see http://www.gnu.or g.
Options
-b Make a backup of each file, in file .orig .
file .orig is overwritten.
An existing
-c The patchfile is a context diff (fr om diff -c or diff -C ).
-d dir
Change directory to dir befor e applying the patch.
-D identifier
Bracket changes with C prepr ocessor #ifdef .
#ifdef identifier
...
#endif
-e
132
18 October 2001 14:52
The patchfile is an ed script (from diff -e ).
Chapter 2 – Unix Commandspatch
-i file
Read the patch from file instead of from standard input.
Patch loosely. Any sequence of whitespace characters in the
patch may match any sequence of whitespace in sour cefile.
Other characters must match exactly.
-n The patchfile is a normal diff (fr om diff with no special
options).
-N Ignor e patches that have already been applied. Nor mally,
such patches are rejected.
-l
-o newfile
Instead of updating each source file in place, write the full
contents of the modified file(s) to newfile. If a file is updated
multiple times, newfile will contain a copy of each intermedi-
ate version.
-pN Remove N leading pathname components from the filename
used in the patch. The leading / of a full pathname counts
as one component. Without this option, only the final file-
name part of the filename is used.
-r rejfile
Use rejfile to contain patches that could not be applied,
instead of file .rej . Rejected patches are always in context
dif f for mat.
-R
Reverse the sense of the patch. In other words, assume that
the patch was created using diff new old, instead of diff old
new.
Example
Update a software distribution:
$ cd whizprog-1.1
$ patch -p1 < whizprog-1.1-1.2.diff
Lots of messages here as patch works
$ find . -name ’*.orig’ -print | xargs rm
$ cd ..
$ mv whizprog-1.1 whizprog-1.2
pathchk [ -p ] pathnames
pathchk
Solaris only. Check pathnames. This command verifies that the
file(s) named by pathnames do not violate any constraints of the
underlying filesystem (such as a name that might be too long),
and that the files could be accessed (e.g., if an intermediate direc-
→
Alphabetical Summary of Commands — pathchk
18 October 2001 14:52
133pathchk ← tory lacks search permission, it is a problem). The -p option pro-
vides additional portability checks for the pathnames.
pax pax [ options ] [ patterns ]
Solaris only. Portable Archive Exchange program. When members
of the POSIX 1003.2 working group could not standardize on
either tar or cpio , they invented this program. * (See also cpio
and tar.)
pax operates in four modes, depending on the combinations of -r
and -w :
List mode
No -r and no -w . List the contents of a pax archive. Option-
ally, restrict the output to filenames and/or directories that
match a given pattern.
Extract mode
-r only. Extract files from a pax archive. Intermediate direc-
tories are created as needed.
Ar chive mode
-w only. Archive files to a new or existing pax archive. The
archive is written to standard output; it may be redir ected to
an appropriate tape device if needed for backups.
Pass-thr ough mode
-r and -w . Copy a directory tree from one location to
another, analogous to cpio -p .
Options
Her e ar e the options available in the four modes:
None:
-r:
-w:
-rw:
-a
c d f
n
c d f i k
n o p
a b
d f i
o
d
i k l n
p
s
s
u
s t u
s t u
v
v
v x X
v
X
Append files to the archive. This may not work on some
tape devices.
-b size
Use size as the blocksize, in bytes, of blocks to be written to
the archive.
* This period in Unix history is known as the “tar wars.”
134
18 October 2001 14:52
Chapter 2 – Unix Commands-c Complement. Match all file or archive members that do not
match the patterns.
-d For files or archive members that are dir ectories, extract or
archive only the directory itself, not the tree it contains.
pax
-f archive
-i
Use ar chive instead of standard input or standard output.
Interactively rename files. For each file, pax writes a prompt
to /dev/tty and reads a one-line response from /dev/tty .
The responses are as follows:
Retur n
A period
new name
EOF
Skip the file.
Take the file as is.
Anything else is taken as the new name to
use for the file.
Exit immediately with a nonzero exit status.
-k Do not overwrite existing files.
-l Make hard links. When copying a directory tree ( -rw ), make
hard links between the source and destination hierarchies
wher ever possible.
-n Choose the first archive member that matches each pattern.
No more than one archive member will match for each pat-
ter n.
-o options
Reserved for format-specific options. (Appar ently unused in
Solaris.)
-p privs
Specify one or more privileges for the extracted file. privs
specify permissions or other characteristics to be preserved
or ignored.
a
e
m
o
p
-r
Do not preserve file access times.
Retain the user and group IDs, permissions (mode),
and access and modification time.
Do not preserve the file modification time.
Retain the user and group ID.
Keep the permissions (mode).
Read an archive and extract files.
-s replacement
Use replacement to modify file or archive member names.
This is a string of the form -s/old/new/ [ gp ]. This is similar to
the substitution commands in ed , ex , and sed . old is a regu-
lar expression, and new may contain & to mean the matched
→
Alphabetical Summary of Commands — pax
18 October 2001 14:52
135text and \ n for subpatterns. The trailing g indicates the sub-
stitution should be applied globally. A trailing p causes pax
to print the resulting new filename. Multiple -s options may
be supplied. The first one that works is applied. Any delim-
iter may be used, not just / , but in all cases it is wise to
quote the argument to prevent the shell from expanding
wildcard characters.
pax
←
-t Reset the access time of archived files to what they were
befor e being archived by pax .
-u Ignor e files older than preexisting files or archive members.
The behavior varies based on the current mode.
Extract mode
Extract the archive file if it is newer than an existing file
with the same name.
Ar chive mode
If an existing file with the same name as an archive
member is newer than the archive member, supersede
the archive member.
Pass-thr ough mode
Replace the file in the destination hierarchy with the file
in the source hierarchy (or a link to it) if the source hier-
archy’s file is newer.
-v In list mode, print a verbose table of contents. Otherwise,
print archive member names on standard error.
-w Write files to standard output in the given archive format.
-x format
Use the given for mat for the archive. The value of for mat is
either cpio or ustar . The details of both formats are pro-
vided in the IEEE 1003.1 (1990) POSIX standard. The two
for mats ar e mutually incompatible; attempting to append
using one format to an archive using the other is an error.
-X
When traversing directory trees, do not cross into a directory
on a differ ent device (the st_dev field in the stat structur e,
see stat (2); similar to the -mount option of find ).
Examples
Copy the current directory to tape:
pax -x ustar -w -f /dev/rmt/0m .
136
18 October 2001 14:52
Chapter 2 – Unix CommandsCopy a home directory to a differ ent dir ectory (pr esumably on a
bigger disk).
pax
# cd /home
# pax -r -w arnold /newhome
perl
perl is the interpreter for the Perl programming language (the
Swiss Army knife of Unix programming tools). The Perl program
is provided via one or more -e options. If no -e options are used,
the first file named on the command line is used for the program.
For more infor mation about Perl, see Lear ning Perl, Pr ogram-
ming Perl, and Advanced Perl Programming, all listed in the Bib-
liography.
Note: while not distributed with SVR4 or Solaris, perl is widely
used for the Web, CGI, and system-administration tasks, and
many other things. The starting point for All Things Perl is
http://www.perl.com.
Options
This option list is for perl Version 5.005 patchlevel 2. See
perlrun (1) for more details.
-a
Turn on autosplit mode when used with -n or -p . Splits to
@F .
-c Check syntax but does not execute.
-d Run the script under the debugger. Use -de 0 to start the
debugger without a script.
-d:module
Run the script under control of the module installed as
Devel: module.
-Dflags
Set debugging flags. flags may be a string of letters, or the
sum of their numerical equivalents. See “Debugging Flags.”
perl must be compiled with -DDEBUGGING for these flags to
take effect.
-e ’commandline’
May be used to enter a single line of script. Multiple -e com-
mands may be given to build up a multiline script.
-F regexp
Specify a regular expression to split on if -a is in effect.
→
Alphabetical Summary of Commands — perl
18 October 2001 14:52
137
perl [ options ] [ programfile ] [ files ]perl
←
-h
Print a summary of the options.
-i [ ext ]
Files processed by the <> construct are to be edited in place.
The old copy is renamed, and the processed copy is written
to the original filename. The optional ext indicates an exten-
sion to use for the renamed copy. Various rules apply to
how this is done; see perlrun (1).
-Idir
With -P , tells the C prepr ocessor wher e to look for include
files. The dir ectory is also prepended to @INC .
-l [ octnum ]
Enables automatic line-end processing, e.g., -l013 .
-m [ - ] module
Equivalent to use module(); . With a – after -m , it is equiva-
lent to no module(); .
-m [ – ] ’module=arg [, arg ] ’ , -M [ – ] ’module=arg [, arg ] ’ ,
Shorthand for -M’module qw(arg ...)’ . This avoids the need
for quoting inside the argument.
-M [ – ] ’module [...] ’
Equivalent to use module ... ; . With a – after -M , it is equivalent
to no module ... ; . The “...” repr esents additional code you
might wish to supply, for example:
-M’mymodule qw(whizfunc wimpfunc)’
-n Assume an input loop around your script. Input lines are
not printed. (Like sed -n or awk .)
-p Assume an input loop around your script. Input lines are
printed. (Like sed .)
-P
Run the C prepr ocessor on the script before compilation by
perl .
138
18 October 2001 14:52
-s Interpr et - xxx on the command line as a switch and set the
corr esponding variable $xxx in the script.
-S Use the PATH envir onment variable to search for the script.
-T Force taint checking.
-u Dump core after compiling the script. For use with the
undump (1) program (where available). Largely superseded
by the Perl-to-C compiler that comes with perl .
-U Allow perl to perfor m unsafe operations.
Chapter 2 – Unix Commands-v Print the version and patchlevel of the perl executable.
-V Print the configuration information and the value of @INC .
perl
-V:var
Print the value of configuration variable var to standard out-
put.
-w
Print warnings about possible spelling errors and other error-
pr one constructs in the script.
-x [ dir ]
Extract the Perl program from the input stream. If dir is
specified, perl switches to it before running the program.
-0val
(That’s the number zero.) Designate an initial value for the
record separator $/ . See also -l .
Debugg ing Flags
Value Letter
1
2
4
8
16
32
64
128
256
512
1024
2048
4096 p
s
l
t
o
c
P
m
f
r
x
u
L
8192
16384
32768
65536 H
X
D
S
Debugs
Tokenizing and parsing
Stack snapshots
Context (loop) stack processing
Trace execution
Method and overloading resolution
String/numeric conversions
Print prepr ocessor command for -P
Memory allocation
For mat pr ocessing
Regular expression parsing and execution
Syntax tree dump
Tainting checks
Memory leaks (needs -DLEAKTEST when
compiling perl )
Hash dump; usurps values()
Scratch-pad allocation
Cleaning up
Thr ead synchr onization
pic [ options ] [ files ]
pic
Pr eprocessor for nroff / troff line pictures. See Chapter 17.
Alphabetical Summary of Commands — pic
18 October 2001 14:52
139pr
pr [ options ] [ files ]
For mat one or more files according to options to standard output.
Each page includes a heading that consists of the page number,
filename, date, and time. When files are named directly, the date
and time are those of the file’s modification time. Otherwise, the
curr ent date and time are used.
Options
-a Multicolumn format; list items in rows going across.
-d Double-spaced format.
-e [ cn ]
Set input tabs to every nth position (default is 8), and use c
as field delimiter (default is a tab).
-f Separate pages using formfeed character ( ˆL ) instead of a
series of blank lines.
-F Fold input lines (avoids truncation by -a or -m ).
-h str
Replace default header with string str.
-icn
For output, replace whitespace with field delimiter c (default
is a tab) every n th position (default is 8).
-ln Set page length to n lines (default is 66).
-m
Merge files, printing one in each column (can’t be used with
- n and -a ). Text is chopped to fit. See also paste.
-n [ cn ]
Number lines with numbers n digits in length (default is 5),
followed by field separator c (default is a tab). See also nl.
-on Of fset each line n spaces (default is 0).
-p Pause before each page.
-r Suppr ess messages for files that can’t be found.
-sc Separate columns with c (default is a tab).
-t
Omit the page header and trailing blank lines.
-wn Set line width to n (default is 72).
+num
Begin printing at page num (default is 1).
140
18 October 2001 14:52
Chapter 2 – Unix CommandsPr oduce output having n columns (default is 1); tabs are
expanded as with -i .
-n
pr
Examples
Print a side-by-side list, omitting heading and extra lines:
pr -m -t list.1 list.2 list.3
Alphabetize a list of states; number the lines in five columns:
sort states_50 | pr -n -5
/usr/ucb/printenv [ variable ]
pr intenv
Print values of all environment variables or, optionally, only the
specified variable. The SVR4 alternative, env , doesn’t let you view
just one variable, but it lets you redefine them.
printf formats [ strings ]
pr intf
Print strings using the specified for mats. for mats can be ordinary
text characters, C-language escape characters, printf (3S) format
conversion specifiers, or, mor e commonly, a set of conversion
ar guments listed next.
Arguments
%b Pr ocess a string argument for backslash escapes (not in
printf (3S)). See the description of allowed escapes under
echo.
%s Print the next string.
%n$s
Print the nth string.
% [ - ] m [ .n ] s
Print the next string, using a field that is m characters wide.
Optionally limit the field to print only the first n characters of
string. Strings are right-adjusted unless the left-adjustment
flag – is specified.
Examples
$ printf
My files
$ printf
My files
’%s %s\n’ "My files are in" $HOME
are in /home/arnold
’%-25.15s %s\n’ "My files are in" $HOME
are in
/home/arnold
Alphabetical Summary of Commands — printf
18 October 2001 14:52
141prof
/usr/ccs/bin/prof [ options ] [ object_file ]
Display the profile data for an object file. The file’s symbol table
is compared with profile file mon.out (cr eated by programs com-
piled with cc -p ). Choose only one of the sort options -a , -c , -n ,
or -t . See also gprof and lprof.
Options
-a
-c
-C
-g
-h
-l
-mpf
-n
-o
-s
-t
-V
-x
-z
pr s
List output by symbol address.
List output by decreasing number of calls.
Demangle C++ symbol names. Solaris only.
Include nonglobal (static) function symbols (invalid
with -l ).
Suppr ess the report heading.
Exclude nonglobal function symbols (the default).
Invalid with -g .
Use pf as the input profile file instead of mon.out .
List by symbol name.
Show addresses in octal (invalid with -x ).
Print a summary on standard error.
List by decreasing total time percentage (the default).
Print version information on standard error.
Show addresses in hexadecimal (invalid with -o ).
Include zero usage calls.
/usr/ccs/bin/prs [ options ] files
An SCCS command. See Chapter 18.
pr t
/usr/ccs/bin/prt [ options ] files
Solaris only. An SCCS command. See Chapter 18.
ps
ps [ options ]
Report on active processes. In options, list arguments should
either be separated by commas or put in double quotes. In com-
paring the amount of output produced, note that -e > -d > -a and
-l > -f . In the BSD version, options work much differ ently; you
can also display data for a single process.
142
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
ps
List all processes except group leaders and processes not
associated with a terminal.
-A Same as -e . Solaris only.
-c List scheduler data set by priocntl (an administrative com-
mand).
-d List all processes except session leaders.
-e List all processes.
-f Pr oduce a full listing.
-a
-glist
List data only for specified list of group leader ID numbers
(i.e., processes with same ID and group ID).
-G list
Show information for processes whose real group ID is
found in list. Solaris only.
-j Print the process group ID and session ID.
-l Pr oduce a long listing.
-nfile
Use the alternate file for the list of function names in the run-
ning kernel (default is /unix ); obsolete as of SVR4.
-o format
Customize information according to for mat. Rar ely used.
Solaris only.
-plist
List data only for process IDs in list.
-slist
List data only for session leader IDs in list.
-tlist
List data only for terminals in list (e.g., tty1 ).
-ulist
List data only for usernames in list.
-U uidlist
Show information for processes whose real user ID is found
in list. Solaris only.
-y
With -l , omit the F and ADDR columns and use kilobytes
instead of pages for the RSS and SZ columns. Solaris only.
Alphabetical Summary of Commands — ps
18 October 2001 14:52
143pwd
pwd
Print the full pathname of the current directory. (Command name
stands for “print working directory.”) Note: the built-in versions,
pwd (Bour ne and Korn shells) and dirs (C shell), are faster, so
you might want to define the following C shell alias:
alias pwd dirs -l
rcp
rcp [ options ] sources target
Copy files between machines. Both sour ces and tar get ar e file-
name specifications of the form host : pathname, wher e host : can
be omitted for a file on the local machine. If no pathname is
included in tar get, source files are placed in your home directory.
If you have a differ ent user name on the remote host, specify the
for m user name @ hostname : file. See also ssh.
Options
-p Pr eserve in copies the modification times, access times, and
modes of the source files.
-r If tar get and sour ces ar e both directories, copy each subtree
rooted at sour ce. Bear in mind that both symbolic and hard
links are copied as real files; the linking structure of the orig-
inal tree is not pr eserved.
Examples
Copy the local files junk and test to your home directory on
machine hermes :
rcp junk test hermes:
Copy the local bin dir ectory and all subdirectories to the /usr/
tools dir ectory on machine diana :
rcp -r /bin diana:/usr/tools
Copy all files in your home directory on machine hera , and put
them in local directory /home/daniel with times and modes
unchanged:
rcp -p "hera:*" /home/daniel
Quote the first argument to prevent filename expansion from
occurring on the local machine.
144
18 October 2001 14:52
Chapter 2 – Unix Commands/usr/ccs/bin/regcmp [ - ] files
regcmp
Stands for “regular expression compile.” Compile the regular
expr essions in one or more files and place output in file .i (or in
file .c if - is specified). The output is C source code, while the
input entries in files ar e of the form:
C variable
"regular expression"
The purpose of this program is to precompile regular expressions
for use with the regex (3C) library routine, avoiding the overhead
of the regcmp (3C) function.
refer [ options ] files
refer
Bibliographic refer ences pr eprocessor for troff . See Chapter 17.
/usr/ucb/reset [ options ] [ type ]
reset
Clear terminal settings. reset disables CBREAK mode, RAW mode,
output delays, and parity checking. reset also restor es undefined
special characters and enables processing of newlines, tabs, and
echoing. This command is useful when a program aborts in a
way that leaves the terminal confused (e.g., keyboard input might
not echo on the screen). To enter reset at the keyboard, you may
need to use a linefeed ( ˆJ ) instead of a carriage retur n. reset uses
the same command-line arguments as tset .
rksh [ options ] [ arguments ]
rksh
Restricted version of ksh (the Korn shell), used in secure envir on-
ments. rksh pr events you from changing out of the directory or
fr om redir ecting output. See Chapter 4.
rlogin [ options ] host
rlog in
Connect terminal on current local host system (i.e., log in) to a
remote host system. The .rhosts file in your home directory (on
the remote host) lists the hostnames (and optionally, the user-
names on those hosts) you’re allowed to connect from without
giving a password. See also ssh.
Options
-8
Allow 8-bit data to pass instead of 7-bit data.
→
Alphabetical Summary of Commands — rlogin
18 October 2001 14:52
145rlog in
←
-e c
Use escape character c (default is  ̃ ). You can type  ̃. to dis-
connect from remote host, though you’ll exit more “cleanly”
by logging out.
-E
Do not have any escape character. Solaris only.
-l user
Log in to remote host as user, instead of using the name on
the local host.
-L
rm
Allow rlogin to run in LITOUT mode (8-bit data may pass in
output only).
rm [ options ] files
Delete one or more files. To remove a file, you must have write
per mission in the directory that contains the file, but you need
not have permission on the file itself. If you do not have write
per mission on the file, you are prompted ( y or n ) to override.
Options
rmdel
-f Force. Remove write-pr otected files without prompting.
-i Pr ompt for y (r emove the file) or n (do not remove the file).
Overrides -f .
-r If file is a directory, remove the entire dir ectory and all its
contents, including subdirectories. Be for ewarned: use of
this option can be dangerous.
-R Same as -r . Solaris only.
-- Mark the end of options ( rm still accepts - , the old form).
Use this when supplying a filename beginning with – .
/usr/ccs/bin/rmdel -rsid files
An SCCS command. See Chapter 18.
rmdir
rmdir [ options ] directories
Delete the named dir ectories (the directory itself, not the con-
tents). dir ectories ar e deleted from the parent directory and must
be empty (if not, rm -r can be used instead). See also mkdir.
146
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
rmdir
-p Remove dir ectories and any intervening parent directories
that become empty as a result; useful for removing subdirec-
tory trees.
-s Suppr ess standard error messages caused by -p .
rmic
Solaris only. Remote Method Invocation compiler for Java. rmic
takes the fully package-qualified class names and generates skele-
ton and stub class files to provide remote method invocation. The
class must have previously been successfully compiled with java .
For a method WhizImpl in class whiz , rmic cr eates two files, Whiz-
Impl_Skel.class and WhizImpl_Stub.class . The “skeleton” file
implements the server side of the RMI; the “stub” file implements
the client side.
Options
-classpath path
Use path as the search path for class files, overriding
$CLASSPATH. path is a colon-separated list of directories.
-d dir
Place the generated files in dir.
-depend
Recompile missing or out-of-date class files refer enced fr om
other class files, not just from source code.
-g
Generate debugging tables with line numbers. With -O , also
generate information about local variables.
-keepgenerated
Keep the generated .java source files for the skeletons and
the stubs.
-nowarn
Disable all warnings.
-O
Per form optimizations that may produce faster but larger
class files. It may also slow down compilation. This option
should be used with discretion.
-show
Use the GUI for the RMI compiler to enter class names.
→
Alphabetical Summary of Commands — rmic
18 October 2001 14:52
147
/usr/java/bin/rmic [ options ] classesrmic
-verbose
←
Print messages as files are compiled and loaded.
rmireg istry
/usr/java/bin/rmiregistry [ port ]
Solaris only. Create and start a remote object registry on the spec-
ified port. The default port is 1099. The registry provides naming
services for RMI (Remote Method Invocation) servers and clients.
roffbib
roffbib [ options ] [ files ]
Part of the refer suite of programs. See Chapter 17.
rsh
/usr/lib/rsh
Restricted version of sh (the Bourne shell) that is intended to be
used where security is important. rsh pr events you from changing
out of the directory or from redir ecting output. See Chapter 4.
rsh
rsh [ options ] host [ command ]
A BSD-derived command to invoke a remote shell. This com-
mand is often found in /usr/ucb and should not be confused with
rsh , the restricted shell. On Solaris, it is in /usr/bin . rsh connects
to host and executes command. If command is not specified, rsh
allows you to rlogin to host. If shell metacharacters need to be
interpr eted on the remote machine, enclose them in quotes. This
command is sometimes called remsh . See also ssh.
Options
-l user
Connect to host with a login name of user.
-n
sact
Divert input to /dev/null . Sometimes useful when piping rsh
to a command that reads standard input but that might termi-
nate before rsh .
/usr/ccs/bin/sact files
An SCCS command. See Chapter 18.
148
18 October 2001 14:52
Chapter 2 – Unix Commands/usr/ccs/bin/sccs
[ files ]
[ options ]
command
[ SCCS_options ]
sccs
A user-friendly interface to SCCS. See Chapter 18.
/usr/ccs/bin/sccsdiff -rsid1 -rsid2 [ options ] files
sccsdif f
script [ option ] [ file ]
scr ipt
Cr eate a record of your login session, storing in file everything
that displays on your screen. The default file is called typescript .
script records non-printing characters as control characters and
includes prompts. This command is useful for beginners or for
saving output from a time-consuming command.
Option
-a
Append the script record to file.
sdiff [ options ] file1 file2
sdif f
Pr oduce a side-by-side comparison of file1 with file2. Output is:
text text
Identical lines.
text <
Line that exists only in file1.
> text
Line that exists only in file2.
text | text
Lines that are dif ferent.
Options
-l
List only lines of file1 that are identical.
-o outfile
Send identical lines of file1 and file2 to outfile ; print line dif-
fer ences and edit outfile by entering, when prompted, the
following commands:
→
Alphabetical Summary of Commands — sdif f
18 October 2001 14:52
149
An SCCS command. See Chapter 18.e
e b
e l
e r
l
q
r
s
v
sdif f
←
-s
Edit an empty file.
Edit both left and right columns.
Edit left column.
Edit right column.
Append left column to outfile.
Exit the editor.
Append right column to outfile.
Silent mode; do not print identical lines.
Turn off “silent mode.”
Do not print identical lines.
-wn Set line length to n (default is 130).
Example
Show differ ences using 80 columns and ignore identical lines:
sdiff -s -w80 list.1 list.2
sed
sed [ options ] [ files ]
Str eam editor. Edit one or more files without user interaction. See
Chapter 10, The sed Editor, for more infor mation on sed . The -e
and -f options may be provided multiple times, and they may be
used with each other.
Options
-e ’instruction’
Apply the editing instruction to the files.
-f script
Apply the set of instructions from the editing script.
-n
ser ialver
Suppr ess default output.
/usr/java/bin/serialver [ -show | classname ]
Solaris only. Print the serialVersionUID for classname in a form
suitable for copying into an evolving class. The -show option
starts a simple GUI in which you enter the full classname.
sh
sh [ options ] [ arguments ]
The standard command interpreter (or Bourne shell) that exe-
cutes commands from a terminal or a file. See Chapter 4 for more
150
18 October 2001 14:52
Chapter 2 – Unix Commandsinfor mation on the Bourne shell, including command-line
options.
sh
/usr/ccs/bin/size [ options ] [ objfile ...]
size
Print the (decimal) number of bytes of each section of objfile. On
many systems, if objfile is not specified, a.out is used. Solaris
requir es the objfile name.
Options
-f Print sizes, names, and total size for allocatable sections.
-F Print sizes, permission flags, and total size for loadable seg-
ments.
-n Print sizes for nonallocatable sections or for nonloadable seg-
ments.
-o Print output in octal.
-V Report the size pr ogram version number.
-x Print output in hexadecimal.
sleep
sleep seconds
Wait a specified number of seconds befor e executing another
command. Often used in shell scripts. sleep is built in to ksh93 .
soelim [ files ]
soelim
A prepr ocessor that reads nroff / troff input files, resolving and
then eliminating .so requests. That is, input lines such as:
.so header
ar e replaced by the contents of the file header . Nor mally, .so
requests are resolved by nroff or troff . Use soelim whenever
you are prepr ocessing the input (e.g., passing it through tbl or
sed ), and the complete text is needed prior to formatting.
Example
Run a sed script on (all) input before for matting:
soelim file | sed -e ’s/--/\\(em/g’ | nroff -mm - | lp
Alphabetical Summary of Commands — soelim
18 October 2001 14:52
151sor t
sort [ options ] [ files ]
Sort the lines of the named files, typically in alphabetical order.
See also uniq, comm, and join.
Options
-b Ignor e leading spaces and tabs.
-c Check whether files ar e alr eady sorted, and if so, produce no
output.
-d Sort in dictionary order (ignore punctuation).
-f “Fold”; ignore uppercase/lowercase differ ences.
-i Ignor e nonprinting characters (those outside ASCII range
040-176).
-k fieldspec
Specify significance of input fields for sorting. See the fuller
description below. Solaris only.
-m Merge sorted input files.
-M Compar e first three characters as months.
-n Sort in arithmetic (numerical) order.
-o file
Put output in file.
-r
Reverse the order of the sort.
-tc Fields are separated with c (default is any whitespace).
-T dir
Use dir for temporary files. Solaris only.
-u
Identical lines in input file appear only one (unique) time in
output.
-y [ kmem ]
Adjust the amount of memory (in kilobytes) sort uses. If
kmem is not specified, allocate the maximum memory.
-zrecsz
Pr ovide the maximum number of bytes for any one line in
the file. This option prevents abnormal termination of sort in
certain cases. Solaris sort accepts but otherwise ignores this
option.
+n [ -m ]
Skip n fields before sorting, and sort up to field position m.
If m is missing, sort to end of line. Positions take the form
a.b, which means character b of field a. If .b is missing, sort
152
18 October 2001 14:52
Chapter 2 – Unix Commandsat the first character of the field. Counting starts at zero.
Solaris allows fields to have optional trailing modifiers, as in
the -k option.
sor t
Field Specifications for -k
A fieldspec has the form fieldstart [type ][ , fieldend [type ]].
fieldstart
A field number and optional starting character of the form
fnum [ . schar ]. fnum is the field number, starting from 1.
schar, if present, is the starting character within the field,
also counting from 1.
fieldend
A field number and optional ending character of the form
fnum [ . echar ]. fnum is the field number, starting from 1.
echar, if present, is the last significant character within the
field, also counting from 1.
type
A modifier, one of the letters b , d , f , i , M , n , or r . The effect
is the same as the corresponding option, except that the b
modifier only applies to the fields, not the whole line.
Examples
List files by decreasing number of lines:
wc -l * | sort -rn
Alphabetize a list of words, remove duplicates, and print the fre-
quency of each word:
sort -fd wordlist | uniq -c
Sort the password file numerically by the third field (user ID):
sort +2n -t: /etc/passwd
Find the top 20 disk hogs on a system:
cd /home; du -sk * | sort -nr | head -20
sortbib [ option ] files
sor tbib
Part of the refer suite of programs. See Chapter 17.
sotruss [ options ] program [ args ...]
sotr uss
Solaris only. Shared object library version of truss . sotruss exe-
cutes pr ogram, passing it ar gs, if any. It then traces calls into and/
or out of shared object libraries that are loaded dynamically.
→
Alphabetical Summary of Commands — sotruss
18 October 2001 14:52
153sotr uss
←
Options
-f
Follow children created by fork (2) and print output for each
child. Each output line contains the process’s process ID.
-F fromlist
Only trace calls from the libraries named in fr omlist, which is
a colon-separated list of libraries. The default is to trace only
calls from the main executable.
-o file
Send output to file. If used with -f , the process ID of the
running program is appended to the filename.
-T tolist
Only trace calls to routines in the libraries named in tolist,
which is a colon-separated list of libraries. The default is to
trace all calls.
spell
spell [ options ] [ files ]
Compar e the words of one or more named files with the system
dictionary and report all misspelled words. System files for spell
reside in /usr/lib/spell .
Options
-b Check for British spelling.
-i Ignor e files included with the nroff or troff .so request. No
ef fect if deroff is unavailable.
-l Follow all included files (files named in .so or .nx requests);
default is to ignore files that begin with /usr/lib .
-v Include words that are derived from dictionary list but are
not literal entries.
-x Show every possible word stem (on standard error).
+wordlist
Use the sorted wor dlist file as a local dictionary to add to the
system dictionary; words in wor dlist ar e not treated as mis-
spelled.
Example
Run the first pass of spell :
spell file1 file2 > jargon
154
18 October 2001 14:52
Chapter 2 – Unix CommandsAfter editing the jargon file, use it as a list of special terms. The
second pass of spell pr oduces genuine misspellings:
spell
spell +jargon file[12] > typos
split [ options ] [ infile ] [ outfile ]
split
Split infile into several files of equal length. infile remains
unchanged, and the results are written to outfile aa , outfile ab , etc.
(default is xaa , xab , etc.). If infile is – (or missing), standard input
is read. See also csplit.
Option
-n
Split infile into files, each n lines long (default is 1000).
Solar is Options
These options are unique to Solaris:
-a slen
Use slen characters for the filename suffix. Default is 2.
-b n [ m ]
Split into pieces of size n bytes. An optional multiplier m
may be supplied: k for kilobytes and m for megabytes. Mutu-
ally exclusive with -l .
-ln Same as - n. Mutually exclusive with -b .
Examples
Br eak bigfile into 1000-line segments:
split bigfile
Join four files, then split them into ten-line files named new.aa ,
new.ab , etc. Note that without the - , new. would be treated as a
nonexistent input file:
cat list[1-4] | split -10 - new.
srchtxt [ options ] [ regexp ]
srchtxt
A grep -like utility to search message files for text strings that
match regular expression regexp. srchtxt is one of the message
manipulation commands like gettxt and mkmsgs . If no regexp is
used, srchtxt displays all message strings from the specified files.
→
Alphabetical Summary of Commands — srchtxt
18 October 2001 14:52
155srchtxt
←
Options
-l locale
Search files that reside in the directory /usr/lib/locale/
locale /LC_MESSAGES , wher e locale is the language in which
the message strings have been written. The default locale is
set by environment variables LC_MESSAGES or LANG. If nei-
ther is set, srchtxt searches directory /usr/lib/locale/C/
LC_MESSAGES .
-m msgfiles
Search for strings in one or more comma-separated msgfiles.
Specifying a pathname for msgfiles overrides the -l option.
-s
ssh
Don’t print message numbers for strings.
ssh2 [ -l user ] host [ commands ]
ssh2 [ options ] [ user@ ] host
Secur e shell. This is a secure replacement for the rsh , rlogin , and
rcp pr ograms. ssh uses strong public-key encryption technologies
to provide end-to-end encryption of data. There may be licens-
ing/patent issues restricting the use of the software in some coun-
tries.
Note: ssh2 is not distributed with SVR4 or Solaris. Source code for
the noncommercial version for Unix can be downloaded from
ftp://ftp.cs.hut.fi/pub/ssh. Mor e infor mation can be found at
http://www.ssh.fi and http://www.ipsec.com.
str ings
strings [ options ] files
Search object or binary files for sequences of four or more print-
able characters that end with a newline or null. See also od.
Options
-a Search entire file, not just the initialized data portion of
object files. Can also specify this option as - .
-o Display the string’s offset position before the string.
-n n
Minimum string length is n (default is 4). Can also specify
this option as - n.
-t format
Specify how to print string offsets. for mat is one of d , o , or x
for decimal, octal, or hexadecimal, respectively. Solaris only.
156
18 October 2001 14:52
Chapter 2 – Unix Commands/usr/ccs/bin/strip [ options ] files
str ip
Remove information from ELF object files or archive files, ther eby
reducing file sizes and freeing disk space. The following items
can be removed:
Symbol table
2. Debugging infor mation
3. Line number information
4. Static symbol information
5. External symbol information
6. Block delimiters
7. Relocation bits
1.
ELF versions of strip pr ovide facilities for removing only the first
thr ee items.
Options
The following options refer to the previous list:
-b Strip only Items 1, 2, and 3. This is the default.
-l Strip only Item 3 (line number information).
-r Strip Items 1, 2, 3, and 6. (Solaris: same as the default
action: strip Items 1, 2, and 3.)
-V Print the version number of strip on standard error.
-x Strip only Items 2 and 3.
stty [ options ] [ modes ]
stty
Set terminal I/O options for the current device. Without options,
stty reports the terminal settings, where a ˆ indicates the Control
key, and ˆ‘ indicates a null value. Most modes can be switched
using an optional preceding – (shown in brackets). The corre-
sponding description is also shown in brackets. As a privileged
user, you can set or read settings from another device using the
syntax:
stty [options] [modes] < device
stty is one of the most complicated Unix commands. The com-
plexity stems from the need to deal with a large range of conflict-
ing, incompatible, and nonstandardized terminal devices—
everything from printing teletypes to CRTs to pseudo-ter minals
→
Alphabetical Summary of Commands — stty
18 October 2001 14:52
157stty
←
for windowing systems. Only a few of the options are really
needed for day-to-day use. stty sane is a particularly valuable
one to remember.
Options
-a Report all option settings.
-g Report current settings.
Control Modes
0 Hang up connection (set the baud rate to zero).
n Set terminal baud rate to n (e.g., 19200 ).
[ - ] clocal
[Enable] disable modem control.
[ - ] cread
[Disable] enable the receiver.
[ - ] crtscts
[Disable] enable output hardware flow control using RTS/
CTS.
[ - ] crtsxoff
[Disable] enable input hardware flow control using RTS.
csn Select character size in bits (5 ≤ n ≤ 8).
[ - ] cstopb
[One] two stop bits per character.
defeucw
Set the width in bytes per character and screen display
columns per character, for EUC (Extended Unix Code) char-
acters. Solaris only.
[ - ] hup
[Do not] hang up connection on last close.
[ - ] hupcl
Same as [ - ] hup .
ispeed n
Set terminal input baud rate to n.
[ - ] loblk
[Do not] block layer output. For use with shl ; obsolete.
ospeed n
Set terminal output baud rate to n.
158
18 October 2001 14:52
Chapter 2 – Unix Commands[ - ] parenb
[Disable] enable parity generation and detection.
stty
[ - ] parext
[Disable] enable extended parity generation and detection for
mark and space parity.
[ - ] parodd
Use [even] odd parity.
Input Modes
[ - ] brkint
[Do not] signal INTR on break.
[ - ] icrnl
[Do not] map carriage retur n ( ˆM ) to newline ( ˆJ ) on input.
[ - ] ignbrk
[Do not] ignore break on input.
[ - ] igncr
[Do not] ignore carriage retur n on input.
[ - ] ignpar
[Do not] ignore parity errors.
[ - ] imaxbel
[Do not] echo BEL when input line is too long.
[ - ] inlcr
[Do not] map newline to carriage retur n on input.
[ - ] inpck
[Disable] enable input parity checking.
[ - ] istrip
[Do not] strip input characters to 7 bits.
[ - ] iuclc
[Do not] map uppercase to lowercase on input.
[ - ] ixany
Allow [only XON] any character to restart output.
[ - ] ixoff
[Do not] send STAR T/STOP characters when the queue is
nearly empty/full.
[ - ] ixon
[Disable] enable STAR T/STOP output control.
[ - ] parmrk
[Do not] mark parity errors.
→
Alphabetical Summary of Commands — stty
18 October 2001 14:52
159stty
←
Output Modes
bsn Select style of delay for backspaces (n = 0 or 1).
crn Select style of delay for carriage retur ns (0 ≤ n ≤ 3).
ffn Select style of delay for formfeeds (n = 0 or 1).
nln Select style of delay for linefeeds (n = 0 or 1).
[ - ] ocrnl
[Do not] map carriage retur n to newline on output.
[ - ] ofdel
Set fill character to [NULL] DEL.
[ - ] ofill
Delay output with [timing] fill characters.
[ - ] olcuc
[Do not] map lowercase to uppercase on output.
[ - ] onlcr
[Do not] map newline to carriage retur n-newline on output.
[ - ] onlret
[Do not] perfor m carriage retur n after newline.
[ - ] onocr
[Do not] output carriage retur ns at column zero.
[ - ] opost
[Do not] postprocess output; ignore all other output modes.
tabn
Select style of delay for horizontal tabs (0 ≤ n ≤ 3).
vtn Select style of delay for vertical tabs (n = 0 or 1).
Local Modes
[ - ] echo
[Do not] echo every character typed.
[ - ] echoctl
[Do not] echo control characters as ˆ char, DEL as ˆ? .
[ - ] echoe
[Do not] echo ERASE character as BS-space-BS string.
[ - ] echok
[Do not] echo newline after KILL character.
[ - ] echoke
[Do not] BS-SP-BS erase entire line on line kill.
160
18 October 2001 14:52
Chapter 2 – Unix Commands[ - ] echonl
[Do not] echo newline ( ˆJ ).
stty
[ - ] echoprt
[Do not] echo erase character as character is “erased.”
[ - ] flusho
Output is [not] being flushed.
[ - ] icanon
[Disable] enable canonical input (ERASE and KILL process-
ing).
[ - ] iexten
[Disable] enable extended functions for input data.
[ - ] isig
[Disable] enable checking of characters against INTR, QUIT,
and SWITCH.
[ - ] lfkc
Same as [ - ] echok . Obsolete.
[ - ] noflsh
[Enable] disable flush after INTR, QUIT, or SWITCH.
[ - ] pendin
[Do not] retype pending input at next read or input character.
[ - ] stappl
[Line] application mode on a synchronous line.
[ - ] stflush
[Disable] enable flush on synchronous line.
[ - ] stwrap
[Enable] disable truncation on synchronous line.
[ - ] tostop
[Do not] send SIGTTOU when background processes write to
the terminal.
[ - ] xcase
[Do not] change case on local output.
Control Assignments
ctrl-char c
Set control character to c. ctrl-char is: ctab , discard , dsusp ,
eof , eol , eol2 , erase , intr , kill , lnext , quit , reprint , start ,
stop , susp , swtch , werase .
→
Alphabetical Summary of Commands — stty
18 October 2001 14:52
161stty
←
min n
With -icanon , n is the minimum number of characters that
will satisfy the read system call until the timeout set with
time expir es.
time n
With -icanon , n is the number of tenths of seconds to wait
befor e a read system call times out. If the minimum number
of characters set with min has been read, the read can retur n
befor e the timeout expires.
line i
Set line discipline to i (1 ≤ i ≤ 126).
Combination Modes
async
Set normal asynchronous communications.
cooked
Same as -raw .
[ - ] evenp
Same as [ - ] parenb and cs7 [ 8 ].
ek
Reset ERASE and KILL characters to # and @ .
[ - ] lcase
[Un] set xcase , iuclc , and olcuc .
[ - ] LCASE
Same as [ - ] lcase .
[ - ] markp
[Disable] enable parenb , parodd , and parext , and set cs7 [ 8 ].
[ - ] nl
[Un] set icrnl and onlcr . -nl also unsets inlcr , igncr , ocrnl ,
and onlret .
[ - ] oddp
Same as [ - ] parenb , [ - ] parodd , and cs7 [ 8 ].
[ - ] parity
Same as [ - ] parenb and cs7 [ 8 ].
[ - ] raw
[Disable] enable raw input and output (no ERASE, KILL,
INTR, QUIT, EOT, SWITCH, or output postprocessing).
sane
Reset all modes to reasonable values.
162
18 October 2001 14:52
Chapter 2 – Unix Commands[ - ] spacep
[Disable] enable parenb and parext , and set cs7 [ 8 ].
stty
[ - ] tabs
[Expand to spaces] preserve output tabs.
term
Set all modes suitable for terminal type ter m ( tty33 , tty37 ,
vt05 , tn300 , ti700 , or tek ). (These pr edefined names are all
so obsolete as to be useless.)
Hardware Flow Control Modes
[ - ] cdxon
[Disable] enable CD on output.
[ - ] ctsxon
[Disable] enable CTS on output.
[ - ] dtrxoff
[Disable] enable DTR on input.
[ - ] isxoff
[Disable] enable isochronous hardware flow control on input.
[ - ] rtsxoff
[Disable] enable RTS on input.
Clock Modes
These options may not be supported on all hardware:
[ x | r ] cibrg
Get the transmit|receive clock from internal baud rate gener-
ator.
[ x | r ] ctset
Get the transmit|receive clock from transmitter timing-lead,
CCITT V.24 circuit 114, EIA-232-D pin 15.
[ x | r ] crset
Get the transmit|receive clock from receiver timing-lead,
CCITT V.24 circuit 115, EIA-232-D pin 17.
For modes beginning with t , pin is transmitter timing-lead, V.24
circuit 113, EIA-232-D pin 24. For modes beginning with r , pin is
receiver timing-lead, V.24 circuit 128, no EIA-232-D pin.
[ t | r ] setcoff
No transmitter|receiver timing clock.
[ t | r ] setcrbrg
Send receive baud rate generator to pin.
→
Alphabetical Summary of Commands — stty
18 October 2001 14:52
163stty
←
[ t | r ] setctbrg
Send transmit baud rate generator to pin.
[ t | r ] setctset
Send transmitter timing to pin.
[ t | r ] setcrset
Send receiver timing to pin.
Window size
columns n
Set size to n columns. Can also be given as cols .
rows n
Set size to n rows.
xpixels n
Set size to n pixels across.
ypixels n
Set size to n pixels up and down.
su
su [ option ] [ user ] [ shell_args ]
Cr eate a shell with the effective user ID of another user (that is,
login as user). If no user is specified, create a shell for a privi-
leged user (that is, become a superuser). Enter EOF to terminate.
You can run the shell with particular options by passing them as
shell_ar gs (e.g., if the shell runs sh , you can specify -c command to
execute command via sh , or -r to create a restricted shell).
su will inherit your environment settings. Administrators wishing
to switch to a user’s setup (perhaps to help them solve a prob-
lem) may wish to consider using this sequence:
me$ su
Password:
# su - user
user$
Switch to root
Enter root password
Switch to other user
Option
-
tail
Go through the entire login sequence (i.e., change to user’s
envir onment).
tail [ options ] [ file ]
Print the last ten lines of the named file. Use only one of -f or -r .
164
18 October 2001 14:52
Chapter 2 – Unix CommandsOptions
tail
-f Don’t quit at the end of file; “follow” file as it grows. End
with an INTR (usually ˆC ).
-r Copy lines in reverse order.
-n [ k ]
Begin printing at n th item from end of file. k specifies the
item to count: l (lines, the default), b (blocks), or c (charac-
ters).
Same as previous, but use the default count of 10.
-k
+n [ k ]
Like - n, but start at n th item from beginning of file.
+k
Like - k, but count from beginning of file.
Examples
Show the last 20 lines containing instances of .Ah :
grep ’\.Ah’ file | tail -20
Continually track the latest uucp activity:
tail -f /var/spool/uucp/LOGFILE
Show the last 10 characters of variable name :
echo "$name" | tail -c
Reverse all lines in list :
tail -r list
talk user [ @hostname ] [ tty ]
talk
Exchange typed communication with another user who is on the
local machine or on machine hostname. talk might be useful
when you’re logged in via modem and need something quickly,
making it inconvenient to telephone or send email. talk splits
your screen into two windows. When connection is established,
you type in the top half while user’s typing appears in the bottom
half. Type ˆL to redraw the screen and ˆC (or interrupt) to exit. If
user is logged in more than once, use tty to specify the terminal
line. The user needs to have used mesg y .
Notes
•
Ther e ar e dif ferent versions of talk that use differ ent pr oto-
cols; interoperability across differ ent Unix systems is very
limited.
→
Alphabetical Summary of Commands — talk
18 October 2001 14:52
165talk
←
tar
•
talk is also not very useful if the remote user you are “call-
ing” is using a windowing environment, since there is no
way for you to know which tty to use to get their attention.
The connection request could easily show up in an iconified
window! Even if you know the remote tty, the called party
must have done a mesg y to accept the request.
tar [ options ] [ files ]
Copy files to or restor e files fr om tape (tape archive). If any files
ar e dir ectories, tar acts on the entire subtr ee. (See also cpio and
pax.)
Options are supplied as one group, with any arguments placed
afterward in corresponding order. Originally, tar did not even
accept a leading – on its options. Although the Solaris version
allows one, it does not requir e it. On many other Unix systems,
you may use conventional option notation, with each option pre-
ceded by a dash and separated from the other options with
whitespace. Some systems actually requir e the use of separate
options. Check your local documentation for the final word.
Notes
For the following reasons, tar is best used as a way to exchange
file or source code archives over a network. A system administra-
tor perfor ming system backups is advised to use the vendor-sup-
plied backup program (typically called dump or backup ; see your
local documentation) for backups instead of tar . (Many of these
same points apply to cpio and to pax as well.)
166
18 October 2001 14:52
• Most Unix versions of tar pr eserve the leading / fr om an
absolute filename in the archive. This makes it difficult or
impossible to extract the files on a differ ent system.
• The tar archive format was designed when Unix file and
dir ectory names were short (14 characters maximum). Mod-
er n Unix systems allow individual filenames to be up to 255
characters in length, but the tar archive header has a limit of
100 characters for the entire pathname. This makes it diffi-
cult or impossible in practice to archive a typical Unix filesys-
tem.
• In general, Unix versions of tar cannot recover from data
err ors, which are particularly common with tapes. An early
tape error can render an entire tar tape useless.
• While tar does checksum the header information describing
each archived file, it does not checksum the actual data
Chapter 2 – Unix Commandsblocks. Thus, if a data block becomes corrupted on a tape,
tar
tar will never notice.
The GNU version of tar has extensions to get around many of
these problems, at the cost of portability of the archive format to
non-GNU versions. Source code can be obtained from the Free
Softwar e Foundation (http://www.gnu.or g).
Control Options (Solaris)
-C dir files
Change directory to dir befor e adding files to the archive.
Use relative pathnames. This option makes it possible to
archive files that don’t share a common ancestor directory.
-I file
Read a list of filenames to be archived, one filename per line,
fr om file . Useful when there are too many files to name on
the command line.
-X
Exclude files. The corresponding file argument is read for a
list of relative pathnames, one per line, of files that should
not be archived. This option may be provided multiple
times with multiple files. Filenames that appear here are
excluded even if the same name was provided in a file used
with -I .
Function Options (choose one)
c Cr eate a new archive.
r Append files to archive.
t Table of contents. Print the names of files if they are stor ed
on the archive (if files not specified, print names of all files).
u Update. Add files if not in archive or if modified.
x Extract files fr om archive (if files not specified, extract all
files).
Options
b n Use blocking factor n (default is 1; maximum is 20). Dif fer-
ent Unix systems often allow larger blocking factors.
B Continue reading until logical blocks are full. For use across
Ether net connections with rsh . On by default when reading
standard input. Solaris only, but also common on many
other Unix systems.
e Exit immediately upon unexpected errors. Solaris only.
→
Alphabetical Summary of Commands — tar
18 October 2001 14:52
167tar
←
E
Use an extended header that allows longer filenames, larger
files, and other extensions. Not portable. Solaris only.
f arch
Stor e files in or extract files from archive ar ch ; ar ch is usu-
ally a device name (default varies from system to system). If
ar ch is - , standard input or output is used as appropriate
(e.g., when piping a tar archive to a remote host).
F , FF
With F , do not archive SCCS and RCS dir ectories. With FF ,
also exclude files named a.out , core , errs , and all .o files.
Solaris only.
i
Ignor e dir ectory checksum errors. Solaris only.
k size
Specify the archive size in kilobytes. Archives that are larger
than size ar e split across volumes. Useful for fixed-size
media, such as floppy disks. Solaris only.
l Print error messages about links that can’t be found.
L Follow symbolic links. SVR4 only.
m Do not restor e file modification times; update them to the
time of extraction.
n Archive is not a tape device. This allows tar to seek, instead
of doing sequential reads, which is faster. Solaris only.
o Change ownership of extracted files to that of user running
pr ogram. This is the default for nonprivileged users.
p Pr eserve per missions of extracted files. Solaris ACLs are
restor ed if recorded in the archive and are added to the
archive when used with c .
P Do not add a trailing / to directory names in the archive.
Solaris only.
v Print function letter ( x for extraction or a for archive) and
name of files. With t , print a listing similar to that of ls -l .
w Wait for user confirmation ( y ).
n [ c ] Select tape drive n and use speed c. n is 0–7 (default is 0); c
is l (low), h (high), or m (medium, the default). Used to
modify ar ch. (These are highly system-specific and non-
portable: it is much better to always just specify the ar ch
explicitly.)
168
18 October 2001 14:52
Chapter 2 – Unix CommandsExamples
tar
Cr eate an archive of /bin and /usr/bin ( c ), show the command
working ( v ), and write on the tape in /dev/rmt/0 :
tar cvf /dev/rmt/0 /bin /usr/bin
List the archive’s contents in a format like ls -l :
tar tvf /dev/rmt/0
Extract the /bin dir ectory:
tar xvf /dev/rmt/0 /bin
Cr eate an archive of the current directory, and store it in a file
/tmp/backup.tar on the system. (Backing up a directory into a file
in that directory almost never works.)
tar cvf /tmp/backup.tar .
Similar, but compress the archive file:
tar cvf - . | compress > /tmp/backup.tar.Z
(The - tells tar to store the directory on standard output, which is
then redir ected thr ough the pipe.)
Copy a directory tree from one location to another:
# cd olddir; tar cf - . | (cd newdir; tar xvpf -)
tbl [ options ] [ files ]
tbl
Pr eprocessor for nroff / troff tables. See Chapter 17.
tee [ options ] [ files ]
tee
Duplicate the standard input; send one copy to standard output
and another copy to files.
Options
-a Append output to files.
-i Ignor e all interrupts.
Examples
Display a who listing on the screen and store it in two files:
who | tee userlist ttylist
→
Alphabetical Summary of Commands — tee
18 October 2001 14:52
169Display misspelled words and add them to existing typos :
tee
←
spell ch02 | tee -a typos
telnet
telnet [ options ] [ host [ port ]]
Communicate with another host using the Telnet protocol. host
may be either a name or a numeric Internet address (dot format).
telnet has a command mode (indicated by the telnet> pr ompt)
and an input mode (usually a login session on the host system). If
no host is given, telnet defaults to command mode. You can also
enter command mode from input mode by typing the escape
character ˆ] . In command mode, type ? or help to list the avail-
able commands.
Solar is Options
Solaris telnet pr ovides these options:
-8 Use an 8-bit data path. This negotiates the BINARY option for
input and output.
-c Don’t read $HOME/.telnetrc at startup.
-d Set the debug option to true .
-e c
Use c as the escape character. The default is ˆ] . A null
value disables the escape character mechanism.
-E
Don’t have an escape character.
-l user
Use the ENVIRON option to pass the value of the USER envi-
ronment variable.
-L
Use an 8-bit data path on output. This negotiates the BINARY
option only for output.
-n file
Record trace information in file.
-r
170
18 October 2001 14:52
Pr ovide an rlogin -style interface, in which the escape char-
acter is  ̃ and is only recognized after a carriage retur n. The
regular telnet escape character must still be used before a
telnet command. “  ̃. Retur n” and “  ̃ ˆZ ” ter minates or stops
a session, respectively. This featur e may change in future
versions of Solaris.
Chapter 2 – Unix Commandstest
test expression
or
[ expression ]
Evaluate an expr ession and, if its value is true , retur n a zer o exit
status; otherwise, retur n a nonzer o exit status. In shell scripts, you
can use the alternate form [ expr ession ] . The brackets are
typed literally and must be separated from expr ession. Generally,
this command is used with conditional constructs in shell pro-
grams. See Chapter 4 for more infor mation on test .
time [ option ] command [ arguments ]
time
Execute a command with optional ar guments and print the total
elapsed time, execution time, process execution time, and system
time of the process (all in seconds). Times are printed on stan-
dard error.
Option
This option is available only on Solaris:
-p
Print the real, user, and system times with a single space sep-
arating the title and the value, instead of a tab.
timex [ options ] command [ arguments ]
timex
Execute a command with optional ar guments and print informa-
tion specified by the time command. Report process data with
various options.
Options
-o
Show total number of blocks and characters used.
-p suboptions
Show process accounting data with possible suboptions.
-s
Show total system activity.
Suboptions for –p
-f Include fork/exec flag and system exit status.
-h Show “hog” factor (fraction of CPU time used) instead of
mean memory size.
-k Show total kcore-minutes instead of memory size.
→
Alphabetical Summary of Commands — timex
18 October 2001 14:52
171timex
←
touch
-m Show mean core size (this is the default behavior).
-r Show CPU use percentage (user time / (system time + user
time)).
-t Show user and system CPU times.
touch [ options ] [ date ] files
For one or more files, update the access time and modification
timestamp to the current time and date, or update to the optional
date. date is a date and time in the format mmddhhmm [yy ].
touch is useful in forcing other commands to handle files a certain
way; e.g., the operation of make , and sometimes find , relies on a
file’s access and modification times.
Options
-a Update only the access time.
-c Do not create nonexistent files.
-m Update only the modification time.
-r file
Use the access and/or modification times of file instead of
the current time. Solaris only.
-t time
Use the time as provided by time, which has the form
[[cc ]yy ]mmddhhmm [ . ss ]. Solaris only.
tput
tput [ options ] capname [ arguments ]
Print the value of the terminal capability capname (and its associ-
ated numeric or string ar guments) from the terminfo database.
capname is a terminfo capability such as clear or col . (See ter m-
cap & terminfo, which is listed in the Bibliography.) The last five
options are mutually exclusive and are not used when specifying
a capname.
Exit statuses are:
172
18 October 2001 14:52
0 When a Boolean capname is set to true or when a string
capname is defined
1 When a Boolean is false or when a string is undefined
Chapter 2 – Unix Commands2 For usage errors
3 For unknown terminal type
4 For unknown capname
tput
Options
-Ttype
Print the capabilities of terminal type (default is the terminal
in use).
Read capname fr om standard input (this allows tput to eval-
uate more than one capname).
-S
clear
Print the clear-scr een sequence. Solaris only.
init
Print initialization strings and expand tabs.
reset
Print reset strings if present; act like init if not.
longname
Print the terminal’s long name.
Examples
Show the number of columns for the xterm ter minal type:
tput -Txterm cols
Define shell variable restart to reset terminal characteristics:
restart=‘tput reset‘
tr [ options ] [ string1 [ string2 ]]
tr
Copy standard input to standard output, perfor ming substitution
of characters from string1 to string2 or deletion of characters in
string1. System V requir es that string1 and string2 be enclosed in
squar e brackets. BSD versions do not have this requir ement.
Options
-c Complement characters in string1 with characters in the cur-
rent character set. The complement is the set of all charac-
ters not in string1.
-d Delete characters in string1 fr om output.
→
Alphabetical Summary of Commands — tr
18 October 2001 14:52
173tr
←
-s
Squeeze out repeated output characters in string2.
Examples
Change uppercase to lowercase in a file:
tr ’[A-Z]’ ’[a-z]’ < file
Solaris allows the use of character classes:
tr ’[:upper:]’ ’[:lower:]’ < file
Turn spaces into newlines (ASCII code 012):
tr ’ ’ ’\012’ < file
Strip blank lines from file and save in new.file (or use \011 to
change successive tabs into one tab):
tr -s "" "\012" < file > new.file
Delete colons from file ; save result in new.file :
tr -d : < file > new.file
Make long search path more readable:
echo $PATH | tr ’:’ ’\n’
trof f
troff [ options ] [ files ]
Document formatter for laser printer or typesetter. See Chapter
12.
tr ue
true
A do-nothing command that retur ns a successful (zero) exit sta-
tus. Normally used in Bourne shell scripts. See also false.
tr uss
truss [ options ] arguments
Trace system calls, signals, and machine faults while executing
ar guments. ar guments is either a Unix command to run or, if -p
is specified, a list of process IDs repr esenting the already running
pr ocesses to trace. The options -m , -r , -s , -t , -v , -w , and -x
accept a comma-separated list of arguments. A ! reverses the
sense of the list, telling truss to ignore those elements of the list
during the trace. (In the C shell, use a backslash before ! .) The
keyword all can include/exclude all possible elements for the
list. The optional ! and corresponding description are shown in
brackets.
174
18 October 2001 14:52
Chapter 2 – Unix CommandsThe Solaris truss also provides tracing of user-level function calls
in dynamically loaded shared libraries.
tr uss
This command is particularly useful for finding missing files when
a third-party application fails. By watching the access and open
system calls, you can find where, and which, files the application
pr ogram expected to find, but did not.
Many systems have similar programs named trace or strace .
These programs are worth learning how to use.
Options
-a Display parameters passed by each exec (2) call.
-c Count the traced items and print a summary rather than list-
ing them as they happen.
-d Print a timestamp in the output, of the form seconds . frac-
tion, indicating the time relative to the start of the trace.
Times are when the system call completes, not starts. Solaris
only.
-D Print a delta timestamp in the output, of the form sec-
onds . fraction, indicating the time between events (i.e., the
time not inside system calls). Solaris only.
-e Display values of environment variables passed by each
exec (2) call.
-f Follow child processes. Useful for tracing shell scripts.
-i List sleeping system calls only once, upon completion.
-m [ ! ] faults
Trace [exclude from trace] the list of machine faults. faults
ar e names or numbers, as listed in <sys/fault.h> (default is
-mall -m!fltpage ).
-M [ ! ] faults
When the traced process receives one of the named faults,
truss leaves the process in a stopped state and detaches
fr om it (default is -M!all ). The pr ocess can subsequently be
attached to with a debugger, or with another invocation of
truss using differ ent options. Solaris only.
-l
Show the lightweight process ID for a multithreaded process.
Solaris only.
-o outfile
Send trace output to outfile, not standard error.
→
Alphabetical Summary of Commands — truss
18 October 2001 14:52
175tr uss
←
-p
Trace one or more running processes instead of a command.
-r [ ! ] file_descriptors
Display [don’t display] the full I/O buffer of read system calls
for file_descriptors (default is -r!all ).
-s [ ! ] signals
Trace [exclude from trace] the list of signals. signals ar e
names or numbers, as listed in <sys/signal.h> (default is
-sall ).
-S [ ! ] signals
When the traced process receives one of the named signals,
truss leaves the process in a stopped state and detaches
fr om it (see -M ) (default is -S!all ). Solaris only.
-t [ ! ] system_calls
Trace [exclude from trace] the list of system_calls. sys-
tem_calls ar e names or numbers, as listed in Section 2, “Sys-
tem Calls,” of the UNIX Programmer’s Reference Manual (see
Bibliography); default is -tall .
-T [ ! ] system_calls
When the traced process executes one of the named system
calls, truss leaves the process in a stopped state and
detaches from it (see -M ) (default is -T!all ). Solaris only.
-u [ ! ] lib ,... : [ : ][ ! ] func ,...
Trace user-level function calls, not just system calls. lib is a
comma-separated list of dynamic library names, without the
.so. n suf fix. func is a comma-separated list of names. Shell
wildcard syntax may be used to specify many names. (Such
use should be quoted to protect it from expansion by the
shell.) The leading ! indicates libraries and/or functions to
exclude. With : , only calls into the library from outside it
ar e traced; with :: , all calls are traced. Solaris only.
-U [ ! ] lib ,... : [ : ][ ! ] func ,...
When the traced process executes one of the named user-
level functions, truss leaves the process in a stopped state
and detaches from it (see -M ). Solaris only.
-v [ ! ] system_calls
Verbose mode. Same as -t , but also list the contents of any
structur es passed to system_calls (default is -v!all ).
-w [ ! ] file_descriptors
Display [don’t display] the full I/O buffer of write system
calls for file_descriptors (default is -w!all ).
176
18 October 2001 14:52
Chapter 2 – Unix Commands-x [ ! ] system_calls
Same as -t , but display the system call arguments as raw
code (hexadecimal) (default is -x!all ).
tr uss
Examples
Trace system calls access , open , and close for the lp command:
truss -t access,open,close lp files > truss.out
Trace the make command, including its child processes, and store
the output in make.trace :
truss -f -o make.trace make target
/usr/ucb/tset [ options ] [ type ]
tset
Set terminal modes. Without arguments, the terminal is reinitial-
ized according to the TERM environment variable. tset is typi-
cally used in startup scripts ( .profile or .login ). type is the
ter minal type; if preceded by a ? , tset pr ompts the user to enter
a dif ferent type, if needed. Press the Return key to use the default
value, type. See also reset.
Options
-
Print terminal name on standard output; useful for passing
this value to TERM.
-ec Set erase character to c; default is ˆH (backspace).
-ic Set interrupt character to c (default is ˆC ).
-I
Do not output terminal initialization setting.
-k c
Set line-kill character to c (default is ˆU ).
-m [ port [ baudrate ] :type ]
Declar e ter minal specifications. port is the port type (usually
dialup or plugboard ). tty is the terminal type; it can be pre-
ceded by ? as above. baudrate checks the port speed and
can be preceded by any of these characters:
>
<
@
!
?
Port must be greater than baudrate.
Port must be less than baudrate.
Port must transmit at baudrate.
Negate a subsequent > , < , or @ character.
Pr ompt for the terminal type. With no response, use
the given type.
→
Alphabetical Summary of Commands — tset
18 October 2001 14:52
177tset
←
-n Initialize “new” tty driver modes. Useless because of redun-
dancy with the default stty settings in SVR4 that incorporate
the functionality of the BSD “new” tty driver.
-Q Do not print “Erase set to” and “Kill set to” messages.
-r Report the terminal type.
-s Retur n the values of TERM assignments to shell environment.
This is a commonly done via eval \‘tset -s\‘ (in the C
shell, you would surround this with the commands set
noglob and unset noglob ).
Examples
Set TERM to wy50 :
eval ‘tset -s wy50‘
Pr ompt user for terminal type (default is vt100 ):
eval ‘tset -Qs -m ’?vt100’‘
Similar to above, but the baudrate must exceed 1200:
eval ‘tset -Qs -m ’>1200:?xterm’‘
Set terminal via modem. If not on a dial-in line, the ?$TERM causes
tset to prompt with the value of $TERM as the default terminal
type:
eval ‘tset -s -m dialup:’?vt100’ "?$TERM"‘
tty
tty [ options ]
Print the device name of your terminal. This is useful for shell
scripts and often for commands that need device information.
Options
type
-l Print the synchronous line number, if on an active syn-
chr onous line.
-s Retur n only the codes: 0 (a terminal), 1 (not a terminal), 2
(invalid options used).
type program ...
Print a description of pr ogram, i.e., whether it is a shell built in, a
function, or an external command. type is built-in to the Bourne
and Korn shells. See Chapter 4 and also see which.
178
18 October 2001 14:52
Chapter 2 – Unix CommandsExample
type
Describe cd and ls :
$ type cd ls
cd is a shell builtin
ls is /usr/bin/ls
umask
Print the current value of the file creation mode mask, or set it to
value, a thr ee-digit octal code specifying the read-write-execute
per missions to be turned off. This is the opposite of chmod . Nor-
mally used in .login or .profile . umask is a built-in command in
the Bourne, Korn, and C shells (see Chapter 4 and Chapter 5).
umask
Number File
Permission Dir ectory
Permission
0
1
2
3
4
5
6
7 rw-
rw-
r--
r--
-w-
-w-
---
--- rwx
rw-
r-x
r--
-wx
-w-
--x
---
Examples
Turn off write permission for others:
umask 002
Pr oduces file permission -rw-rw-r- -
Turn off all permissions for group and others:
umask 077
Pr oduces file permission -rw- - - - - - -
Note that you can omit leading zeroes.
uname [ options ]
uname
Print the current Unix system name.
Options
-a Report the information supplied by all the other options.
-i The hardware platfor m name. (For example, i86pc ; compar e
to i386 fr om -p .) Solaris only.
→
Alphabetical Summary of Commands — uname
18 October 2001 14:52
179
umask [ value ]uname
←
-m The hardware name.
-n The node name.
-p The host’s processor type.
-r The operating system release.
-s The system name. This is the default action when no
options are provided.
-v The operating system version.
-S name
Change the nodename to name.
Solaris only.
-X
uncompress
Privileged users only.
Print expanded information as expected by SCO Unix sys-
tems. Solaris only.
uncompress [ option ] [ files ]
Restor e the original file compressed by compress . The .Z exten-
sion is implied, so it can be omitted when specifying files.
The -f and -v options from compress ar e also allowed. See com-
press for more infor mation.
Option
-c
unexpand
Same as zcat (write to standard output without changing
files).
unexpand [ options ] [ files ]
Convert spaces back into an appropriate number of tab charac-
ters. unexpand reads the named files, or standard input if no files
ar e pr ovided. See also expand.
Options
-a
Replace spaces with tabs everywhere possible, not just lead-
ing spaces and tabs.
-t tablist
Interpr et tabs according to tablist, a space- or comma-sepa-
rated list of numbers in ascending order that describe the
“tabstops” for the input data.
180
18 October 2001 14:52
Chapter 2 – Unix Commands/usr/ccs/bin/unget [ options ] files
unget
An SCCS command. See Chapter 18.
uniq [ options ] [ file1 [ file2 ]]
uniq
Remove duplicate adjacent lines from sorted file1, sending one
copy of each line to file2 (or to standard output). Often used as a
filter. Specify only one of -c , -d , or -u . See also comm and sor t.
Options
-c Print each line once, counting instances of each.
-d Print duplicate lines once, but no unique lines.
-f n
Ignor e first n fields of a line. Fields are separated by spaces
or by tabs. Solaris only.
-s n
Ignor e first n characters of a field. Solaris only.
-u Print only unique lines (no copy of duplicate entries is kept).
-n Ignor e first n fields of a line. Fields are separated by spaces
or by tabs.
+ n Ignor e first n characters of a field.
Examples
Send one copy of each line from list to output file list.new
( list must be sorted):
uniq list list.new
Show which names appear more than once:
sort names | uniq -d
Show which lines appear exactly three times:
sort names | uniq -c | awk ’$1 == 3’
units
units
Interactively supply a formula to convert a number from one unit
to another. /usr/lib/units (Solaris: /usr/share/lib/unittab )
gives a complete list of the units. Use EOF to exit.
Alphabetical Summary of Commands — units
18 October 2001 14:52
181unix2dos
unix2dos [ options ] unixfile dosfile
Solaris only. Convert files using the ISO standard characters to
their DOS counterparts. If unixfile and dosfile ar e the same, the
file is overwritten after the conversion is done. See also dos2unix.
Options
-ascii
Add extra carriage retur ns for use under DOS.
-iso
Same as the default action.
-7
unzip
Convert 8-bit Solaris characters to 7-bit DOS characters.
unzip [ options [ modifiers ]] zipfile
options ]
unzip -Z [ zipinfo options ] zipfile ...
...
[ extraction
Solaris only. (Many other modern Unix systems also have it.)
unzip prints information about or extracts files from ZIP format
archives. The zipfile is a ZIP archive whose filename ends in .zip .
The .zip can be omitted from the command line; unzip supplies
it. zipfile may also be a shell-style wildcard pattern (which should
be quoted); all matching files in the ZIP archive will be acted
upon. The behavior of options is affected by the various modi-
fiers.
In the second form, the options ar e taken to be zipinfo options,
and unzip per forms like that command. See zipinfo for more
infor mation.
Options may also be included in the UNZIP environment vari-
able, to set a default behavior. Options on the command line can
override settings in $UNZIP by preceding them with an extra
minus. See the Examples.
When extracting files, if a file exists already, unzip pr ompts for an
action. You may to choose to overwrite or skip the existing file,
overwrite or skip all files, or rename the current file.
Notes
•
unzip and its companion program zip (which is not included
with Solaris) are part of the InfoZIP project. InfoZIP is an
open collaborative compressed archive format, and imple-
mentations exist for Unix, Amiga, Atari, DEC VAX and Alpha
VMS and OpenVMS, MS-DOS, Macintosh, Minix, OS/2, Win-
dows NT, and many others. It is the only similar format one
can expect to port to all of these systems without difficulty.
182
18 October 2001 14:52
Chapter 2 – Unix CommandsThe web home page is http://www.cdr om.com/pub/infozip.
Unlike most Unix tar implementations, zip removes leading
slashes when it creates a ZIP archive, so there is never any
pr oblem unbundling it at another site.
• The Java Archive format ( .jar ) is based on ZIP; zip and
unzip can process .jar files with no trouble.
•
unzip
Extraction Options
-d dir
Extract files in dir instead of in the current directory. This
option need not appear at the end of the command line.
-x files
Exclude. Do not extract archive members that match files.
Options
-A Print help for the shared library programming interface (API).
-c Print files to standard output (the CRT). Similar to -p , but a
header line is printed for each file, it allows -a , and automat-
ically does ASCII to EBCDIC conversion. Not in the unzip
usage message.
-f Fr eshen existing files. Only files in the archive that are
newer than existing disk files are extracted. unzip queries
befor e overwriting, unless -o is used.
-l List archived files, in short format (name, full size, modifica-
tion time, and totals).
-p Extract files to standard output (for piping). Only the file
data is printed. No conversions are done.
-t Test the archived files. Each file is extracted in memory, and
the extracted file’s CRC is compared to the stored CRC.
-T Set the timestamp on the archive itself to be that of the
newest file in the archive.
-u Same as -f , but also extract any files that don’t exist on disk
yet.
-v Be verbose or print diagnostic information. -v is both an
option and a modifier, depending upon the other options.
By itself, it prints the unzip ftp site information, information
about how it was compiled, and what environment variable
settings are in effect. With a zipfile, it adds compression
infor mation to that provided by -l .
→
Alphabetical Summary of Commands — unzip
18 October 2001 14:52
183unzip
←
-z Only print the archive comment.
-Z Run as zipinfo . Remaining options are zipinfo options. See
zipinfo for more infor mation.
Modifier s
-a [ a ]
Convert text files. Nor mally, files are extracted as binary
files. This option causes text files to be converted to the
native format (e.g., adding or removing CR characters in
fr ont of LF characters). EBCDIC-to-ASCII conversion is also
done as needed. Use -aa to force all files to be extracted as
text.
-b Tr eat all files as binary.
-B Save a backup copy of each overwritten file in file  ̃ . Only
available if compiled with UNIXBACKUP defined.
-C Ignor e case when matching filenames. Useful on non-Unix
systems where filesystems are not case-sensitive.
-j “Junk” paths. Extract all files in the current extraction direc-
tory, instead of repr oducing the directory tree structure
stor ed in the archive.
-L Convert filenames to lowercase from archives created on
uppercase-only systems. By default, filenames are extracted
exactly as stored in the archive.
-M
Pipe output through the internal pager, which is similar to
Press the Return key or spacebar at the --More- -
pr ompt to see the next screenful.
more .
-n Never overwrite existing files. If a file already exists, don’t
extract it, just continue on without prompting. Normally,
unzip pr ompts for an action.
-o Overwrite existing files without prompting.
together with -f . Use with care.
Often used
Examples
List the contents of a ZIP archive:
unzip -lv whizprog.zip
Extract C source files in the main directory, but not in subdirecto-
ries:
unzip whizprog.zip ’*.[ch]’ -x ’*/*’
184
18 October 2001 14:52
Chapter 2 – Unix Commandsuptime
uptime
Print the current time, amount of time the system has been up,
number of users logged in, and the system-load averages. This
output is also produced by the first line of the w command.
user s
Display the currently logged-in users as a space-separated list.
Same as who -q . Infor mation is read from a system file (default is
/var/adm/utmp ).
uudecode [ -p ] [ file ]
uudecode
Read a uuencoded file and recr eate the original file with the same
mode and name (see uuencode).
Solaris provides the -p option, which decodes the file to standard
output. This allows you to use uudecode in a pipeline.
uuencode [ file ] name | mail remoteuser
uuencode
Convert a binary file to a form which can be sent to remoteuser
via mail . The encoding uses only printing ASCII characters and
includes the mode and name of the file. When file is reconverted
via uudecode on the remote system, output is sent to name.
(Ther efor e, when saving the encoded mail message to a file on
the remote system, don’t store it in a file called name, or you’ll
overwrite it!) Note that uuencode can take standard input, so a sin-
gle argument is the name given to the file when it is decoded.
The Solaris version does local character set translation of the
encoded characters.
Note: the uuencode for mat does not provide any kind of check-
summing or other data integrity checking. It is advisable to first
package files into an archive that does provide checksumming of
the data (such as a .zip file), and then uuencode the archive for
sending in electronic mail.
vacation
vacation [ options ] [ user ]
vacation
Automatically retur n a mail message to the sender announcing
that you are on vacation. Solaris version, for use with sendmail .
(The SVR4 version is described in Appendix B.)
→
Alphabetical Summary of Commands — vacation
18 October 2001 14:52
185
/usr/ucb/users [ file ]vacation
←
Use vacation with no options to initialize the vacation mecha-
nism. The process perfor ms several steps.
1.
Create a .forward file in your home directory. The .forward
file contains:
\user, "|/usr/bin/vacation user"
user is your login name. The action of this file is to actually
deliver the mail to user (i.e., you), and to run the incoming
mail through vacation .
2. Create the .vacation.pag and .vacation.dir files. These files
keep track of who has sent you messages, so that they only
receive one “I’m on vacation” message from you per week.
3. Start an editor to edit the contents of .vacation.msg . The
contents of this file are mailed back to whoever sends you
mail. Within its body, $SUBJECT is replaced with the contents
of the incoming message’s Subject: line.
Remove or rename the .forward file to disable vacation process-
ing.
Options
The -a , -j , and -t options are used within a .forward file; see the
Example.
-a alias
Mail addressed to alias is actually mail for the user and
should produce an automatic reply.
-I Reinitialize the .vacation.pag and .vacation.dir files. Use
this right before leaving for your next vacation.
-j Do not verify that user appears in the To: or Cc: headers.
-t interval
By default, no more than one message per week is sent to
any sender. This option changes that interval. interval is a
number with a trailing s , m , h , d , or w indicating seconds, min-
utes, hours, days, or weeks, respectively.
Example
Send no more than one reply every three weeks to any given
sender:
$ cd
$ vacation -I
$ cat .forward
\jp, "|/usr/bin/vacation -t3w jp"
$ cat .vacation.msg
From: jp@wizard-corp.com (J. Programmer, via the vacation program)
Subject: I’m out of the office ...
186
18 October 2001 14:52
Chapter 2 – Unix CommandsHi. I’m off on a well-deserved vacation after finishing
up whizprog 1.0. I will read and reply to your mail
regarding "$SUBJECT" when I return.
vacation
Have a nice day.
val
An SCCS command. See Chapter 18.
vedit [ options ] [ files ]
vedit
Same as running vi , but with the showmode and novice flags set,
the report flag set to 1, and magic tur ned of f (metacharacters
have no special meaning). Intended for beginners.
vgrind [ options ] files
vgrind
Solaris only (from the BSD command). Produce nicely formatted
source code listings for use with troff . vgrind for mats pr ogram
source code so that it looks good when typeset with troff . Com-
ments are in italic, keywords in bold, and each function’s name is
printed in the margin of the page where it is defined. Definitions
for each language are kept in /usr/lib/vgrindefs . vgrind can for-
mat a number of languages; see -l below.
vgrind has two modes of operation:
Filter mode
Similar to eqn , pic , and tbl . Lines are passed through
unchanged, except for those bracketed by .vS and .vE . In
this mode, vgrind can be used in a pipeline with other pre-
pr ocessors.
Regular mode
vgrind pr ocesses all files named on the command line and
then invokes troff to print them. Use – as a filename to
mean the standard input. Otherwise, vgrind will not read
standard input.
Options
Spacing between option characters and option arguments is spe-
cific. Use the options exactly as shown here:
-2
Pr oduce two-column output. Implies -s8 and the -L (land-
scape) option for $TROFF. (This option was specific to troff
at UCB.)
→
Alphabetical Summary of Commands — vgrind
18 October 2001 14:52
187
/usr/ccs/bin/val [ options ] file ...vgrind
←
-d definitions
Use definitions as the file with language definitions, instead
of the default file.
-f
Run in filter mode.
-h header
Place header in the top center of every output page.
-llang
Supported languages are:
Bour ne shell
C
C++
C shell
emacs MLisp
FOR TRAN
Icon
ISP
LDL
Model
Modula-2
Pascal
RATFOR
Russel
YACC
-lsh
-lc
-lc++
-lcsh
-lml
-lf
-lI
-li
-lLDL
-lm
-lm2
-lp
-lr
-lrussell
-lyacc
The default is -lc (for C).
-n
Do not use bold for keywords.
-ssize
Use point size size (same as troff ’s .ps request).
-w Use a tab stop of four columns, instead of the default eight.
-x Print the index. If a file named index exists in the current
dir ectory, vgrind writes the index into it. This file can then
be formatted and printed separately using vgrind -x index .
Typesetter Options
The following options are passed to the program named by
$TROFF, or to troff if that environment variable is not set:
-olist
Output only the pages in list; same as -o in troff .
-Pprinter
Send the output to printer.
188
18 October 2001 14:52
Chapter 2 – Unix Commands-t
Same as -t for troff ; send formatted text to standard output.
vgrind
-Tdevice
For mat output for device.
-W
vi [ options ] [ files ]
vi
A scr een-oriented text editor based on ex . See Chapter 8 and
Chapter 9 for more infor mation on vi and ex . Options -c , -C , -L ,
-r , -R , and -t ar e the same as in ex .
Options
-c command
Enter vi and execute the given vi command.
-l Run in LISP mode for editing LISP programs.
-L List filenames that were saved due to an editor or system
crash.
-r file
Recover and edit file after an editor or system crash.
-R Read-only mode. Files can’t be changed.
-S Use with -t to indicate that the tag file may not be sorted
and to use a linear search. Solaris only.
-t tag
Edit the file containing tag, and position the editor at its defi-
nition (see cta gs for more infor mation).
-wn Set default window size to n ; useful when editing via a slow
dial-up line.
-x Supply a key to encrypt or decrypt file using crypt . (Note
that the supplied key is visible to other users via the ps com-
mand.)
-C Same as -x , but assume file began in encrypted form.
+ Start vi on last line of file.
+n Start vi on line n of file.
→
Alphabetical Summary of Commands — vi
18 October 2001 14:52
189
Use the wide Versatec printer instead of the narrow Varian.
(These refer to printers that existed at one time at the Univer-
sity of California at Berkeley. This option likely has no real
ef fect under Solaris.)vi
+/pat
←
Start vi on line containing pattern pat. This option fails if
nowrapscan is set in your .exrc file.
view
view [ options ] [ files ]
Same as vi -R .
volcheck
volcheck [ options ] [ pathnames ]
Solaris only. Check one or more devices named by pathnames to
see if removable media has been inserted. The default is to check
every device being managed by volume management. Most often
used with floppies; volume management usually notices when
CD-ROMs have been inserted.
Note: use of the -i and -t options, particularly with short inter-
vals, is not recommended for floppy-disk drives.
Options
-i nsec
Check the device(s) every nsec seconds. The default is every
two seconds.
-t nsecs
Keep checking over the next nsecs seconds. Maximum nsecs
is 28,800 (eight hours).
-v
w
Be verbose.
w [ options ] [ user ]
Print summaries of system usage, currently logged-in users, and
what they are doing. w is essentially a combination of uptime , who ,
and ps -a . Display output for one user by specifying user.
Options
190
18 October 2001 14:52
-h Suppr ess headings and uptime infor mation.
-l Display in long format (the default).
-s Display in short format.
Chapter 2 – Unix Commands-u Print just the heading line. Equivalent to uptime . Solaris
only.
-w Same as -l . Solaris only.
wait
Wait for all background processes to complete and report their
ter mination status. Used in shell scripts. If n is specified, wait
only for the process with process ID n. wait is a built-in com-
mand in the Bourne, Korn, and C shells. See Chapter 4 and Chap-
ter 5 for more infor mation.
wc [ options ] [ files ]
wc
Word count. Print a character, word, and line count for files. If
multiple files, print totals as well. If no files ar e given, read stan-
dard input. See other examples under ls and sor t.
Options
-c Print byte count only.
-C Print character count only. This will be differ ent than -c in a
multibyte character environment. Solaris only.
-l Print line count only.
-m Same as -C . Solaris only.
-w Print word count only.
Examples
Count the number of users logged in:
who | wc -l
Count the words in three essay files:
wc -w essay.[123]
Count lines in file named by $file (don’t display filename):
wc -l < $file
Alphabetical Summary of Commands — wc
18 October 2001 14:52
191
wait [ n ]
wwhat
/usr/ccs/bin/what [ option ] files
An SCCS command. See Chapter 18.
whatis
whatis commands
Look up one or more commands in the online manpages, and
display a brief description. Same as man -f . The MANPATH envi-
ronment variable can affect the results obtained with this com-
mand. See also apropos.
which
which [ commands ]
List which files are executed if the named commands ar e run as a
command. which reads the user’s .cshrc file (using the source
built-in command), checking aliases and searching the path vari-
able. Users of the Bourne or Korn shells can use the built-in type
command as an alternative. (See type, Chapter 4 and Chapter 5.)
Example
$ which file ls
/usr/bin/file
ls:
aliased to ls -sFC
who
who [ options ] [ file ]
Display information about the current status of the system. With
no options, list the names of users currently logged in to the sys-
tem. An optional system file (default is /var/adm/utmp ) can be
supplied to give additional information. who is usually invoked
without options, but useful options include am i and -u . For more
examples, see cut, line, paste, tee, and wc.
Options
192
18 October 2001 14:52
-a Use the -b , -d , -l , -p , -r , -t , -T , and -u options.
-b Report information about the last reboot.
-d Report expired processes.
-H Print headings.
-l Report inactive terminal lines.
-m Report only about the current terminal. Solaris only.
Chapter 2 – Unix Commandswho
-n x
Display x users per line (works only with -q ).
Report previously spawned processes.
-q “Quick.” Display only the usernames.
-r Report the run level.
-s List the name, line, and time fields (the default behavior).
-t Report the last change of the system clock (via date ).
-T Report whether terminals are writable ( + ), not writable ( - ), or
unknown ( ? ).
-u Report terminal usage (idle time). A dot (.) means less than
one minute idle; old means more than 24 hours idle.
-p
am i
Print the username of the invoking user. (Similar to results
fr om id .)
Example
This sample output was produced at 8 a.m. on April 17:
$ who -uH
NAME
LINE
TIME
IDLE
PID COMMENTS
martha ttyp3 Apr 16 08:14 16:25 2240
george ttyp0 Apr 17 07:33
. 15182
Since martha has been idle since yesterday afternoon (16 hours),
it appears that Martha isn’t at work yet. She simply left herself
logged in. George’s terminal is currently in use. (He likes to beat
the traffic.)
whoami
/usr/ucb/whoami
Print the username based on effective user ID. This is usually the
same as the standard SVR4 command logname . However, when
you’r e running an su session as another user, whoami displays this
user’s name, but logname still displays your name.
xargs [ options ] [ command ]
xar gs
Execute command (with any initial arguments), but read remain-
ing arguments from standard input instead of specifying them
dir ectly. xargs passes these arguments in several bundles to com-
mand, allowing command to process more arguments than it
could normally handle at once. The arguments are typically a
long list of filenames (generated by ls or find , for example) that
get passed to xargs via a pipe.
→
Alphabetical Summary of Commands — xar gs
18 October 2001 14:52
193xar gs
←
Without a command, xargs behaves similarly to echo , simply
bundling the input lines into output lines and printing them to
standard output.
Options
-e [ string ]
Stop passing arguments when argument string is encoun-
ter ed (default is underscore). An omitted string disables the
logical EOF capability.
-E string
Use string instead of underscore as the default logical EOF
string. Solaris only.
-i [ string ]
Pass arguments to command, replacing instances of {} on
the command line with the current line of input. With
Solaris, the optional string can be used instead of {} .
-I string
Same as -i , but string is used instead of {} .
-l [ n ]
Execute command for n lines of arguments. With Solaris,
default n is 1 when -l is supplied.
-L n
Same as -l n. Solaris only.
-nn Execute command with up to n arguments.
-p
Pr ompt for a y to confirm each execution of command.
Implies -t .
-sn Each argument list can contain up to n characters. (Older
systems limited n to 470. The default is system-dependent.)
-t Echo each command befor e executing.
-x Exit if argument list exceeds n characters (from -s ); -x takes
ef fect automatically with -i and -l .
Examples
grep for patter n in all files on the system:
find / -print | xargs grep pattern > out &
Run diff on file pairs (e.g., f1.a and f1.b , f2.a and f2.b ...):
echo $* | xargs -n2 diff
The previous line could be invoked as a shell script, specifying
filenames as arguments.
194
18 October 2001 14:52
Chapter 2 – Unix CommandsDisplay file, one word per line (similar to deroff -w ):
xar gs
cat file | xargs -n1
Move files in olddir to newdir , showing each command:
ls olddir | xargs -i -t mv olddir/{} newdir/{}
xgettext
Solaris only. Extract messages (specially marked strings) from C
and C++ source files. Place them in a “portable object” file
(file .po ) for translation and compilation by msgfmt . By default,
xgettext only extracts strings inside calls to the gettext (3C) and
dgettext (3C) functions. Source files are named on the command
line. A filename of – indicates the standard input.
Options
-a
Extract all strings, not just those in calls to gettext or dget-
text .
-c tag
Copy source file comments marked with tag into the .po file
as # -delimited comments.
-d domain
Use domain .po as the output file instead of messages.po .
-h
-j
Print a help message on the standard output.
Join (merge) extracted messages with those in the current
Domain dir ectives in the existing .po file are
ignor ed.
.po file.
-m prefix
Fill each msgstr with pr efix. Intended for debugging.
-M suffix
Fill each msgstr with suf fix. Intended for debugging.
-n
Add comments to the .po file indicating the source filename
and line number where each string is used.
-p path
Place output files in the directory path.
-s
Sort the output by msgid (original string), with all duplicates
removed.
→
Alphabetical Summary of Commands — xgettext
18 October 2001 14:52
195
xgettext [ options ] files
xgettext -hxgettext
←
yacc
-x exfile
exfile is a .po file with msgid s that are not to be extracted
(i.e., excluded).
/usr/ccs/bin/yacc [ options ] file
Given a file containing a context-free LALR(1) grammar, convert it
to tables for subsequent parsing and send output to y.tab.c . This
command name stands for yet another compiler-compiler. See
also lex and lex & yacc, which is listed in the Bibliography.
Options
-b prefix
Use pr efix instead of y for the generated filenames. Solaris
only.
-d Generate y.tab.h , producing #define statements that relate
yacc ’s token codes to the token names declared by the user.
-l Exclude #line constructs from code produced in y.tab.c .
(Use after debugging is complete.)
-p prefix
Use pr efix instead of yy for all external names in the gener-
ated parser. Solaris only.
-P parser
Use parser instead of /usr/ccs/bin/yaccpar . Solaris only.
-Qc Place version information about yacc in y.tab.c (if c = y ) or
suppr ess infor mation (if c = n , the default).
zcat
-t Compile runtime debugging code by default.
-v Generate y.output , a file containing diagnostics and notes
about the parsing tables.
-V Print the version of yacc on standard error.
zcat [ files ]
Uncompr ess one or more .Z files to the standard output, leaving
files unchanged. See compress.
zip
zip [ options ] zipfile [ files ]
Archive files in InfoZIP format. These files can be retrieved using
unzip . The files are compr essed as they are added to the archive.
Compr ession ratios of 2:1 to 3:1 are common for text files. zip
196
18 October 2001 14:52
Chapter 2 – Unix Commandsmay also replace files in an existing archive. With no arguments,
display the help information. See also zipinfo and unzip.
zip
Default options may be placed in the ZIPOPT environment vari-
able, with the exceptions of -i and -x . Multiple options may be
included in ZIPOPT.
While zip is not distributed with SVR4 or Solaris, source code is
readily available from http://www.cdr om.com/pub/infozip.
Ther e ar e a number of important notes in the unzip entry. Go
ther e for more infor mation.
Options
-b path
Use path as the location to store the temporary ZIP archive
while updating an existing one. When done, copy the tem-
porary archive over the new one. Useful primarily when
ther e is not enough disk space on the filesystem containing
the original archive.
-c Add one-line comments for each file. zip first perfor ms any
file operations and then prompts you for a comment describ-
ing each file.
-d Delete entries from a ZIP archive. Filenames to be deleted
must be entered in uppercase if the archive was created by
PKZIP on an MS-DOS system.
-D Don’t create entries in the archive for directories. Usually
entries are created, so that attributes for directories may be
restor ed upon extraction.
-e Encrypt the archive. zip pr ompts on the terminal for a pass-
word and prompts twice, to avoid typing errors. If standard
err or is not a terminal, zip exits with an error.
-f Fr eshen (r eplace) an existing entry in the ZIP archive if the
file has a more recent modification time than the one in the
archive. This doesn’t add files that are not already in the
archive: use -u for that. Run this command from the same
dir ectory wher e the ZIP archive was created, since the
archive stores relative path names.
-F , -FF
Fix the ZIP archive. This option should be used with care;
make a backup copy of the archive first. The -FF version
does not trust the compressed sizes in the archive, and
instead scans it for special “signatures” that identify the
boundaries of differ ent archive members. See the manpage
for more infor mation.
→
Alphabetical Summary of Commands — zip
18 October 2001 14:52
197zip
←
-g Gr ow the archive (append files to it).
-h Display the zip help information.
-i files
Include only the specified files, typically specified as a
quoted shell wildcard-style pattern.
-j “Junk” the path; i.e., store just the name of the saved file, not
any directory names. The default is to store complete paths,
although paths are always relative.
-J Strip any prepended data (e.g., an SFX stub, for self-extract-
ing executables) from the archive.
-k Cr eate an archive that (attempts to) conform to the conven-
tions used under MS-DOS. This makes it easier for PKUNZIP
to extract the archive.
-l For text files only, translate the Unix newline into a CR-LF
pair. Primarily for archives extracted under MS-DOS.
-ll For text files only, translate the MS-DOS CR-LF into a Unix
newline.
-L Display the zip license.
-m “Move” the files into the ZIP archive. This actually deletes
the original files and/or directories after the archive has been
cr eated successfully. This is somewhat dangerous; use -T in
conjunction with this option.
-n suffixlist
Do not compress files with suffixes in suf fixlist. Useful for
sound or image files that often have their own, specialized
compr ession method.
-o Set the modified time of the ZIP archive to be that of the
youngest file (most recently modified) in the archive.
-q Quiet mode. Don’t print informational messages and com-
ment prompts. Most useful in shell scripts.
-r Recursively archive all files and subdirectories of the named
files. The -i option is also useful in combination with this
one.
-t mmddyy
Ignor e files modified prior to the date given by mmddyy.
-T
198
18 October 2001 14:52
Test the new ZIP archive’s integrity. If the test fails, an exist-
ing ZIP archive is not changed, and with -m , no files are
removed.
Chapter 2 – Unix CommandsUpdate existing entries in the ZIP archive if the named files
have modification dates that are newer than those in the
archive. Similar to -f , except that this option adds files to
the archive if they aren’t already there.
-v As the only argument, print help and version information, a
pointer to the home and distribution Internet sites, and infor-
mation about how zip was compiled. When used with other
options, cause those options to print progr ess infor mation
and provide other diagnostic information.
zip
-u
-x files
Exclude the specified files, typically specified as a quoted
shell wildcard-style pattern.
-X Do not save extra file attributes (extended attributes on OS/2,
user ID/group ID, and file times on Unix).
-y Pr eserve symbolic links in the ZIP archive, instead of archiv-
ing the file the link points to.
-z Pr ompt for a (possibly multiline) comment describing the
entir e ZIP archive. End the comment with line containing
just a period, or EOF.
-n Specify compression speed: n is a digit between 0 and 9. 0
indicates no compression, 1 indicates fast but minimal com-
pr ession, 9 indicates slowest but maximal compression.
Default is -6 .
-@ Read standard input for names of files to be archived. File-
names containing spaces must be quoted using single
quotes.
Examples
Archive the current directory into source.zip , including only C
source files:
zip source -i ’*.[ch]’
Archive the current directory into source.zip , excluding the
object files:
zip source -x ’*.o’
Archive files in the current directory into source.zip , but don’t
compr ess .tiff and .snd files:
zip source -z ’.tiff:.snd’ *
Recursively archive the entire dir ectory tr ee into one archive:
zip -r /tmp/dist.zip .
Alphabetical Summary of Commands — zip
18 October 2001 14:52
199zipinfo
zipinfo [ options ] zipfile ... [ exclusion option ]
Solaris only. zipinfo prints information about ZIP format archives.
The zipfile is a ZIP archive whose filename ends in .zip . The
.zip can be omitted from the command line; zipinfo supplies it.
zipfile may also be a shell-style wildcard pattern (which should
be quoted to protect it from the shell); all matching files in the
ZIP archive will be acted upon. See also zip and unzip.
Exc lusion Option
-x files
Exclude. Do not extract archive members that match files.
Options
-1 Only list filenames, one per line. Nothing else is printed.
For use in shell scripts.
-2 Like -1 , but also permit headers, trailers, and ZIP archive
comments ( -h , -t , -z ).
-h Print a header line with the archive name, size in bytes, and
total number of files.
-l Use “long” format. Like -m , but also print the compressed
size in bytes, instead of the compression ratio.
-m Use “Medium” format. Like -s , but also include the com-
pr ession factor (as a percentage).
-M
Pipe output through the internal pager, which is similar to
Press the Return key or spacebar at the --More- -
pr ompt to see the next screenful.
more .
200
18 October 2001 14:52
-s Use “short” format, similar to ls -l . This is the default.
-t Print totals for all files (number of files, compressed and
uncompr essed sizes, overall compression factor).
-T Print times and dates in a decimal format (yymmdd . hhmmss)
that can be sorted.
-v Use verbose, multipage format.
-z Print the archive comment.
Chapter 2 – Unix CommandsCHAPTER 3
The Unix Shell: An Over view
For novice users, this chapter presents basic concepts about the Unix shell. For
advanced users, this chapter also summarizes the major similarities and differ ences
between the Bourne, Korn, and C shells. Details on the three shells are provided
in Chapter 4, The Bourne Shell and Korn Shell, and Chapter 5, The C Shell.
The following topics are presented:
• Intr oduction to the shell
• Purpose of the shell
• Shell flavors
• Common features
• Dif fering featur es
Introduction to the Shell
Let’s suppose that the Unix operating system is a car. When you drive, you issue a
variety of “commands”: you turn the steering wheel, press the accelerator, or press
the brake. But how does the car translate your commands into the action you
want? The car’s drive mechanism, which can be thought of as the car’s user inter-
face, is responsible. Cars can be equipped with front-wheel drive, rear-wheel
drive, four-wheel drive, and sometimes combinations of these.
The shell is the user interface to Unix, and by the same token, several shells are
available in Unix. Most systems provide more than one for you to choose from.
Each shell has differ ent featur es, but all of them affect how commands will be
interpr eted and provide tools to create your Unix environment.
The shell is simply a program that allows the system to understand your com-
mands. (That’s why the shell is often called a command interpreter.) For many
201
18 October 2001 14:56users, the shell works invisibly—“behind the scenes.” Your only concern is that
the system does what you tell it to do; you don’t care about the inner workings. In
our car analogy, this is comparable to pressing the brake. Most of us don’t care
whether the user interface involves disk brakes or drum brakes, as long as the car
stops.
Purpose of the Shell
Ther e ar e thr ee uses for the shell:
• Interactive use
• Customization of your Unix session
• Programming
Interactive Use
When the shell is used interactively, the system waits for you to type a command
at the Unix prompt. Your commands can include special symbols that let you
abbr eviate filenames or redir ect input and output.
Customization of Your Unix Session
A Unix shell defines variables to control the behavior of your Unix session. Setting
these variables will tell the system, for example, which directory to use as your
home directory, or the file in which to store your mail. Some variables are preset
by the system; you can define others in startup files that are read when you log in.
Startup files can also contain Unix commands or special shell commands. These
ar e executed every time you log in.
Prog ramming
Unix shells provide a set of special (or built-in) commands that let you create pro-
grams called shell scripts. In fact, many built-in commands can be used interac-
tively like Unix commands, and Unix commands are frequently used in shell
scripts. Scripts are useful for executing a series of individual commands. This is
similar to BATCH files in MS-DOS. Scripts can also execute commands repeatedly
(in a loop) or conditionally ( if - else ), as in many high-level programming lan-
guages.
Shell Flavors
Many differ ent Unix shells are available. This quick refer ence describes the three
most popular shells:
•
202
18 October 2001 14:56
The Bourne (or standard) shell, the most compact shell and also the simplest.
Chapter 3 – The Unix Shell: An Overview• The Korn shell, a superset of the Bourne shell that lets you edit the command
line. There are in fact two commonly available versions of the Korn shell,
distinguished by the year they were released, and referr ed to in this book as
ksh88 and ksh93 respectively.
• The C shell, which uses C-like syntax and is more convenient for the interac-
tive user than the Bourne shell.
Most systems have more than one shell, and people will often use the Bourne
shell for writing shell scripts and another shell for interactive use.
The /etc/passwd file determines which shell takes effect during your interactive
Unix session. When you log in, the system checks your entry in /etc/passwd . The
last field of each entry names a program to run as the default shell. * For example:
Your shell is the:
/bin/sh
/bin/rsh
/bin/jsh
/bin/ksh
/usr/dt/bin/dtksh Bour ne shell
Restricted Bourne shell
Bour ne shell, including job control
Kor n shell
The Desktop Korn shell, a version of ksh93 (Solaris
only)
Restricted Korn shell
C shell
/bin/rksh
/bin/csh
If the program name is:
You can change to another shell by typing the program name at the command
line. For example, to change from the Bourne shell to the Korn shell, type:
$ exec ksh
Note that on most systems, rsh is the “remote shell” for executing commands on a
remote system across a network. On some systems, though, rsh is indeed the
restricted shell, and remsh is the remote shell. Check your local documentation.
Which Shell Do I Want?
If you are new to Unix, picking a shell may be a bewildering question. Before ksh
was commonly available, the general advice was to use csh for interactive use
(because it supported job control and had other features that made it a better
interactive shell than the Bourne shell), but to use the Bourne shell for scripting
(because it is a more power ful pr ogramming language, and more universally avail-
able).
Today, ksh is widely available; it is upwardly compatible with the Bourne shell as
a programming language, and it has all the interactive capabilities of csh , and
mor e. If it is available, it is probably your best choice.
* On Solaris or other networked Unix systems, this information may come from NIS or NIS+. Usually,
your system administrator will handle this for you; just don’t be surprised if your login name doesn’t
appear in /etc/passwd .
Shell Flavors
18 October 2001 14:56
203Common Features
The following table displays features that are common to the Bourne, Korn, and C
shells. Note that the Korn shell is an enhanced version of the Bourne shell; there-
for e, the Korn shell includes all features of the Bourne shell, plus some others.
The commands bg , fg , jobs , stop , and suspend ar e available only on systems that
support job control. (Essentially all modern Unix systems do.)
Symbol/Command Meaning/Action
>
>>
<
<<
|
|&
&
;
*
?
[ ]
( )
‘ ‘
" "
’ ’
\
$var
$$
$0
$n
$*
#
bg
break
cd
continue
echo
eval
exec
fg
jobs
kill
shift
stop
suspend
time Redir ect output.
Append to file.
Redir ect input.
“Her e” document (redir ect input).
Pipe output.
Start a coprocess. Korn shell only.
Run process in background.
Separate commands on same line.
Match any character(s) in filename.
Match single character in filename.
Match any characters enclosed.
Execute in subshell.
Substitute output of enclosed command.
Partial quote (allows variable and command expansion).
Full quote (no expansion).
Quote following character.
Use value for variable.
Pr ocess ID.
Command name.
n th argument (0 ≤ n ≤ 9).
All arguments as simple words.
Begin comment.
Backgr ound execution.
Br eak fr om loop statements.
Change directory.
Resume a program loop.
Display output.
Evaluate arguments.
Execute a new shell.
For eground execution.
Show active jobs.
Terminate running jobs.
Shift positional parameters.
Suspend a background job.
Suspend a foregr ound job (such as a shell created by su ).
Time a command.
204
18 October 2001 14:56
Chapter 3 – The Unix Shell: An OverviewSymbol/Command Meaning/Action
umask
unset
wait Set default file permissions for new files.
Erase variable or function definitions.
Wait for a background job to finish.
Differing Features
The following table displays features that are dif ferent among the three shells.
ksh csh Meaning/Action
$ $
>| > file 2>&1 > file 2>&1 ‘ ‘ ‘ ‘ %
>!
>>!
>& file
{ }
‘ ‘ Pr ompt.
Force redir ection.
Force append.
Combine stdout and stderr.
Expand elements in list.
Substitute output of
enclosed command.
Substitute output of
enclosed command. (Pre-
ferr ed for m.)
Home directory.
Home directory symbol.
Variable assignment.
Set environment variable.
Mor e than nine args can
be refer enced.
All args as separate words.
Number of arguments.
Exit status.
Last background Process
ID.
Curr ent options.
Read commands in file.
Name x stands for y.
Choose alternatives.
Switch directories.
End a loop statement.
End case or switch .
Exit with a status.
Loop through variables.
Ignor e echo escapes.
Display hashed commands
(tracked aliases).
Remember command loca-
tions.
$( )
$HOME
var=value
export var
$HOME
 ̃
var=value
export var=val
${nn}
$home
 ̃
set var = value
setenv var val
"$@"
$#
$?
$! "$@"
$#
$?
$! $- $- . file hash . file
alias x = y
case
cd  ̃-
done
esac
exit [n]
for / do
print -r
alias -t source file
alias x y
switch/case
popd/pushd
end
endsw
exit [(expr)]
foreach
glob
hashstat
hash cmds alias -t cmds rehash
case
done
esac
exit [n]
for / do
$#argv
$status
Dif fering Featur es
18 October 2001 14:56
205
shsh ksh csh Meaning/Action
hash -r PATH=$PATH
history
r
r str unhash
history
!!
!str r x=y [cmd] !cmd:s/x/y/ if ((i==5))
fi
ulimit
pwd
read
trap 2
unalias
until /do
while /do if ($i==5)
endif
limit
dirs
$<
onintr
unalias Forget command locations.
List previous commands.
Redo previous command.
Redo command that starts
with str.
Edit command, then exe-
cute.
Sample if statement.
End if statement.
Set resource limits.
Print working directory.
Read from standard input.
Ignor e interrupts.
Remove aliases.
Begin until loop.
Begin while loop.
if [ $i -eq 5 ]
fi
ulimit
pwd
read
trap 2
until /do
while /do
206
18 October 2001 14:56
while
Chapter 3 – The Unix Shell: An OverviewCHAPTER 4
The Bour ne Shell and Kor n Shell
• Overview of features
• Syntax
• Variables
• Arithmetic expressions (Korn shell only)
• Command history (Korn shell only)
• Job control
• Invoking the shell
• Restricted shells
• Built-in commands
http://www.kor nshell.com pr ovides considerable information about the Korn shell.
Follow the links there for binaries of ksh93 that can be downloaded for noncom-
mercial and educational use. See also Lear ning the Korn Shell, which is listed in
the Bibliography.
Over view of Features
The Bourne shell is the standard shell and provides the following features:
• Input/output redir ection
• Wildcard characters (metacharacters) for filename abbreviation
207
18 October 2001 15:00
This chapter presents the following topics:• Shell variables for customizing your environment
• A built-in command set for writing shell programs
• Job control (beginning in SVR4)
The Korn shell is a backward-compatible extension of the Bourne shell. Features
that are valid only in the Korn shell are so indicated:
• Command-line editing (using the command syntax of either vi or emacs )
• Access to previous commands (command history)
• Integer arithmetic
• Mor e ways to match patterns and substitute variables
• Arrays and arithmetic expressions
• Command-name abbreviation (aliasing)
• Mor e built-in commands
ksh93 adds the following capabilities:
• Upwards compliance with POSIX
• Inter nationalization facilities
• An arithmetic for loop
• Floating-point arithmetic and built-in arithmetic functions
• Structur ed variable names and indirect variable refer ences
• Associative arrays
• Even more ways to match patterns and substitute variables
• Even more built-in commands
Syntax
This section describes the many symbols peculiar to the Bourne and Korn shells.
The topics are arranged as follows:
• Special files
• Filename metacharacters
• Quoting
• Command forms
• Redir ection for ms
• Copr ocesses (Kor n shell only)
208
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellSpecial Files
/etc/profile
Executed automatically at login, first.
$HOME/.profile
Executed automatically at login, second.
$ENV
Specifies the name of a file to read when a new Korn shell is created. ( ksh88 :
all shells. ksh93 : interactive shells only.) The value is variable ( ksh93 : and
command and arithmetic) substituted in order to determine the actual file
name. Login shells read $ENV after processing /etc/profile and $HOME/.pro-
file .
/etc/passwd
Source of home directories for  ̃ name abbr eviations. (On networked systems,
this information may come from NIS or NIS+, not your workstation password
file.)
*
?
[abc ... ]
[!abc ... ]
Filename Metacharacter s
Match any string of zero or mor e characters.
Match any single character.
Match any one of the enclosed characters; a hyphen can
specify a range (e.g., a–z, A–Z, 0–9).
Match any character not enclosed as above.
In the Korn shell:
?(pattern)
*(pattern)
+(pattern)
@(pattern)
!(pattern)
\n
 ̃
 ̃name
 ̃+
 ̃-
Match zero or one instance of patter n.
Match zero or mor e instances of patter n.
Match one or more instances of patter n.
Match exactly one instance of patter n.
Match any strings that don’t match patter n.
Match the text matched by the n’th subpattern in (...) . ksh93 only.
Home directory of the current user.
Home directory of user name.
Curr ent working directory ($PWD).
Pr evious working directory ($OLDPWD).
This patter n can be a sequence of patterns separated by | , meaning that the match
applies to any of the patterns. If & is used instead of | , all the patterns must match.
& has higher precedence than | . This extended syntax resembles that available in
egrep and awk .
ksh93 supports the POSIX [[=c=]] notation for matching characters that have the
same weight, and [[.c.]] for specifying collating sequences. In addition, character
classes, of the form [[:class:]] , allow you to match the following classes of char-
acters.
Syntax
18 October 2001 15:00
209Class Characters Matched
alnum
alpha
blank
cntrl
digit
graph
lower
print
space
upper
xdigit Alphanumeric characters
Alphabetic characters
Space or tab
Contr ol characters
Decimal digits
Nonspace characters
Lowercase characters
Printable characters
Whitespace characters
Uppercase characters
Hexadecimal digits
Examples
$
$
$
$
ls new*
cat ch?
vi [D-R]*
pr !(*.o|core) | lp
List new and new.1
Match ch9 but not ch10
Match files that begin with uppercase D through R
Kor n shell only; print files that are not object files or core dumps
Quoting
Quoting disables a character’s special meaning and allows it to be used literally, as
itself. The following table displays characters have special meaning to the Bourne
and Korn shells.
Character Meaning
;
&
(
|
<
*
"
‘
$ Command separator
Backgr ound execution
Command grouping
Pipe
Redir ection symbols
Filename metacharacters
Used in quoting other characters
Command substitution
Variable substitution (or command or arithmetic substitu-
tion)
Word separators
)
> &
? [ ]  ̃ + - @ !
’ \
space tab newline
These characters can be used for quoting:
" " Everything between " and " is taken literally, except for the following charac-
ters that keep their special meaning:
$
210
18 October 2001 15:00
Variable (or Korn shell command and arithmetic) substitution will occur.
Chapter 4 – The Bourne Shell and Korn Shell‘ Command substitution will occur.
" This marks the end of the double quote.
’ ’ Everything between ’ and ’ is taken literally except for another ’ . You can-
not embed another ’ within such a quoted string.
The character following a \ is taken literally. Use within " " to escape " , $ ,
and ‘ . Often used to escape itself, spaces, or newlines.
\
$" "
ksh93 only. Just like "" , except that locale translation is done.
$’ ’
ksh93 only. Similar to ’’ , but the quoted text is processed for the following
escape sequences:
Value Sequence Value
\a
\b
\f
\n
\r
\t
\v Alert
Backspace
For m feed
Newline
Carriage retur n
Tab
Vertical tab \nnn
\xnn
\’
\"
\\
\E Octal value nnn
Hexadecimal value nn
Single quote
Double quote
Backslash
Escape
Sequence
Examples
$ echo ’Single quotes "protect" double quotes’
Single quotes "protect" double quotes
$ echo "Well, isn’t that \"special\"?"
Well, isn’t that "special"?
$ echo "You have ‘ls | wc -l‘ files in ‘pwd‘"
You have
43 files in /home/bob
$ echo "The value of \$x is $x"
The value of $x is 100
Command For ms
cmd &
cmd1 ; cmd2
{ cmd1 ; cmd2 ; }
(cmd1 ; cmd2)
cmd1 | cmd2
cmd1 ‘cmd2‘
cmd1 $(cmd2)
cmd $((expression))
Execute cmd in background.
Command sequence; execute multiple cmds on the same
line.
Execute commands as a group in the current shell.
Execute commands as a group in a subshell.
Pipe; use output from cmd1 as input to cmd2.
Command substitution; use cmd2 output as arguments to
cmd1.
Kor n shell command substitution; nesting is allowed.
Kor n shell arithmetic substitution. Use the result of expr es-
sion as argument to cmd.
Syntax
18 October 2001 15:00
211AND; execute cmd1 and then (if cmd1 succeeds) cmd2.
This is a “short-circuit” operation; cmd2 is never executed
if cmd1 fails.
OR; execute either cmd1 or (if cmd1 fails) cmd2. This is a
“short-circuit” operation; cmd2 is never executed if cmd1
succeeds.
cmd1 && cmd2
cmd1 || cmd2
Examples
$
$
$
$
$
$
$
$
$
$
nroff file > file.txt &
cd; ls
(date; who; pwd) > logfile
sort file | pr -3 | lp
vi ‘grep -l ifdef *.c‘
egrep ’(yes|no)’ ‘cat list‘
egrep ’(yes|no)’ $(cat list)
egrep ’(yes|no)’ $(<list)
grep XX file && lp file
grep XX file || echo "XX not found"
For mat in the background
Execute sequentially
All output is redir ected
Sort file, page output, then print
Edit files found by grep
Specify a list of files to search
Kor n shell version of previous
Same, but faster
Print file if it contains the pattern;
otherwise, echo an error message
Redirection For ms
File Descriptor Name Common Abbr eviation Typical Default
0
1
2 Standard input
Standard output
Standard error stdin
stdout
stderr Keyboard
Terminal
Terminal
The usual input source or output destination can be changed, as seen in the fol-
lowing sections.
Simple redirection
cmd > file
Send output of cmd to file (overwrite).
cmd >> file
Send output of cmd to file (append).
cmd < file
Take input for cmd fr om file.
cmd << text
The contents of the shell script up to a line identical to text become the stan-
dard input for cmd (text can be stored in a shell variable). This command
for m is sometimes called a Her e document. Input is usually typed at the key-
board or in the shell program. Commands that typically use this syntax
include cat , ex , and sed . (If <<- is used, leading tabs are ignor ed when com-
paring input with the end-of-input text marker.) If text is quoted, the input is
passed through verbatim. Otherwise, the contents are processed for variable
and command substitutions. The Korn shell also processes the input for arith-
metic substitution.
212
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shellcmd <> file
Kor n shell only. Open file for reading and writing on the standard input. The
contents are not destroyed. *
Redirection using file descriptor s
cmd >&n
cmd m>&n
cmd >&-
cmd <&n
cmd m<&n
cmd <&-
cmd <&n-
cmd >&n-
Send cmd output to file descriptor n.
Same, except that output that would normally go to file
descriptor m is sent to file descriptor n instead.
Close standard output.
Take input for cmd fr om file descriptor n.
Same, except that input that would normally come from
file descriptor m comes from file descriptor n instead.
Close standard input.
Move input file descriptor n instead of duplicating it. ksh93
only.
Move output file descriptor n instead of duplicating it.
ksh93 only.
cmd 2>file
cmd > file 2>&1
cmd > f1 2>f2
cmd | tee files
cmd 2>&1 | tee files
Send standard error to file ; standard output remains the
same (e.g., the screen).
Send both standard error and standard output to file.
Send standard output to file f1, standard error to file f2.
Send output of cmd to standard output (usually the termi-
nal) and to files. (See the Example in Chapter 2, Unix
Commands, under tee.)
Send standard output and error output of cmd to standard
output (usually the terminal) and to files.
No space should appear between file descriptors and a redir ection symbol; spac-
ing is optional in the other cases.
Examples
$ cat part1 > book
$ cat part2 part3 >> book
$ mail tim < report
$ sed ’s/ˆ/XX /g’ << END_ARCHIVE
> This is often how a shell archive is "wrapped",
> bundling text for distribution. You would normally
> run sed from a shell program, not from the command line.
> END_ARCHIVE
XX This is often how a shell archive is "wrapped",
XX bundling text for distribution. You would normally
XX run sed from a shell program, not from the command line.
* With < , the file is opened read-only, and writes on the file descriptor will fail. With <> , the file is
opened read-write; it is up to the application to actually take advantage of this.
Syntax
18 October 2001 15:00
213
Multiple redirectionTo redir ect standard output to standard error:
$ echo "Usage error: see administrator" 1>&2
The following command sends output (files found) to filelist and error messages
(inaccessible files) to file no_access :
$ find / -print > filelist 2>no_access
Coprocesses
Copr ocesses ar e a featur e of the Korn shell only.
cmd1 | cmd2 |&
read -p var
print -p string
cmd <&p
cmd >&p
exec n<&p
exec n>&p
Copr ocess; execute the pipeline in the background. The
shell sets up a two-way pipe, allowing redir ection of both
standard input and standard output.
Read coprocess output into variable var.
Write string to the coprocess.
Take input for cmd fr om the coprocess.
Send output of cmd to the coprocess.
Move input from coprocess to file descriptor n.
Move output for coprocess to file descriptor n.
Moving the coprocess input and output file descriptors to standard file descriptors
allows you to open multiple coprocesses.
Examples
$
$
$
$
A
ed - memo |&
print -p /word/
read -p search
print "$search"
word to the wise.
Start coprocess
Send ed command to coprocess
Read output of ed command into variable search
Show the line on standard output
Variables
This section describes the following:
• Variable substitution
• Built-in shell variables
• Other shell variables
• Arrays (Korn shell only)
• Discipline functions ( ksh93 only)
214
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellVariable Substitution
ksh93 pr ovides structur ed variables, such as pos.x and pos.y . To create either one,
pos must already exist, and braces must be used to retrieve their values. Names
beginning with .sh ar e reserved for use by ksh .
No spaces should be used in the following expressions. The colon ( : ) is optional;
if it’s included, var must be nonnull as well as set.
var=value ...
${var}
${var:-value}
${var:=value}
${var:?value}
${var:+value}
Set each variable var to a value.
Use value of var ; braces are optional if var is separated
fr om the following text. They are requir ed in ksh93 if a
variable name contains periods.
Use var if set; otherwise, use value.
Use var if set; otherwise, use value and assign value to
var.
Use var if set; otherwise, print value and exit (if not inter-
active). If value isn’t supplied, print the phrase “parameter
null or not set.”
Use value if var is set; otherwise, use nothing.
In the Korn shell:
${#var} Use the length of var.
${#*}
${#@} Use the number of positional parameters.
${var#pattern}
${var##pattern}
${var%pattern}
${var%%pattern}
Use value of var after removing patter n fr om the left.
Remove the shortest matching piece.
Same as # patter n, but remove the longest matching piece.
Use value of var after removing patter n fr om the right.
Remove the shortest matching piece.
Same as % patter n, but remove the longest matching piece.
In ksh93 :
${!prefix*}
${!prefix@} List of variables whose names begin with pr efix.
${var:pos}
${var:pos:len} Starting at position pos (0-based) in variable var, extract
len characters, or rest of string if no len. pos and len may
be arithmetic expressions.
${var/pat/repl} Use value of var, with first match of pat replaced with
repl.
Use value of var, with first match of pat deleted.
Use value of var, with every match of pat replaced with
repl.
Use value of var, with match of pat replaced with repl.
Match must occur at beginning of the value.
${var/pat}
${var//pat/repl}
${var/#pat/repl}
Variables
18 October 2001 15:00
215${var/%pat/repl}
Use value of var, with match of pat replaced with repl.
Match must occur at end of the value.
In ksh93 , indir ect variables allow you to “alias” one variable name to affect the
value of another. This is accomplished using typeset -n :
$ greet="hello, world"
$ typeset -n friendly_message=greet
$ echo $friendly_message
hello, world
$ friendly_message="don’t panic"
$ echo $greet
don’t panic
Cr eate initial variable
Set up alias
Access old value through new name
Change the value
Old variable is changed
Examples
$ u=up d=down blank=
$ echo ${u}root
uproot
$ echo ${u-$d}
up
$ echo ${tmp-‘date‘}
Thu Feb 4 15:03:46 EST 1993
$ echo ${blank="no data"}
$ echo ${blank:="no data"}
no data
$ echo $blank
no data
Assign values to three variables (last is null)
Braces are needed here
Display value of u or d; since u is set, it’s printed
If tmp is not set, the date command is executed
blank is set, so it is printed (a blank line)
blank is set but null, so the string is printed
blank now has a new value
Korn shell example
tail=’${PWD##*/}’
Take the current directory name and remove the longest character string ending
with /, which removes the leading pathname and leaves the tail
Built-in Shell Var iables
Built-in variables are automatically set by the shell and are typically used inside
shell scripts. Built-in variables can make use of the variable substitution patterns
shown previously. Note that the $ is not actually part of the variable name,
although the variable is always refer enced this way.
$#
$-
$?
$$
$!
$0
$n
$* , $@
216
18 October 2001 15:00
Number of command-line arguments.
Options currently in effect (arguments supplied to sh or to set ).
Exit value of last executed command.
Pr ocess number of current process.
Pr ocess number of last background command.
First word; that is, command name. This will have the full path
name if it was found via a PATH search.
Individual arguments on command line (positional parameters). The
Bour ne shell allows only nine parameters to be refer enced dir ectly
(n = 1–9); the Korn shell allows n to be greater than 9 if specified
as ${n} .
All arguments on command line ( $1 $2 ...).
Chapter 4 – The Bourne Shell and Korn Shell"$*"
"$@"
All arguments on command line as one string ( "$1 $2..." ).
All arguments on command line, individually quoted ( "$1" "$2" ...).
The Korn shell automatically sets these additional variables:
$_
LINENO
OLDPWD
OPTARG
OPTIND
PPID
PWD
RANDOM [ =n ]
REPLY
SECONDS [ =n ]
ksh93 automatically sets these additional variables. Variables whose names contain
“.” must be enclosed in braces when refer enced, e.g., ${.sh.edchar} .
HISTCMD
.sh.edchar
.sh.edcol
.sh.edmode
.sh.edtext
.sh.name
.sh.subscript
.sh.value
.sh.version
The history number of the current command.
The character(s) entered when processing a KEYBD trap. Chang-
ing it replaces the characters that caused the trap.
The position of the cursor in the most recent KEYBD trap.
Will be equal to ESCAPE if in a KEYBD trap in vi mode, other-
wise empty.
The characters in the input buffer during a KEYBD trap.
The name of the variable running a discipline function.
The subscript of the variable running a discipline function.
The value of the variable inside the set and get discipline func-
tions.
The version of ksh93 .
Other Shell Var iables
The following variables are not automatically set by the shell. They are typically
used in your .profile file, where you can define them to suit your needs. Vari-
ables can be assigned values by issuing commands of the form:
variable=value
This list includes the type of value expected when defining these variables. Those
that are specific to the Korn shell are marked as (K). Those that are specific to
ksh93 ar e marked (K93).
Variables
18 October 2001 15:00
217
Temporary variable; initialized to pathname of script or
pr ogram being executed. Later, stor es the last argument of
pr evious command. Also stores name of matching MAIL
file during mail checks.
Curr ent line number within the script or function.
Pr evious working directory (set by cd ).
Name of last option processed by getopts .
Numerical index of OPTARG.
Pr ocess number of this shell’s parent.
Curr ent working directory (set by cd ).
Generate a new random number with each refer ence; start
with integer n, if given.
Default reply, used by select and read .
Number of seconds since the shell was started, or, if n is
given, number of seconds + n since the shell started.CDPATH=dirs
COLUMNS=n
EDITOR=file
ENV=file
FCEDIT=file
FIGNORE=pattern
FPATH=dirs
HISTEDIT=file
HISTFILE=file
HISTSIZE=n
HOME=dir
IFS=’chars’
LANG=dir
LC_ALL=locale
LC_COLLATE=locale
LC_CTYPE=locale
LC_NUMERIC=locale
LINES=n
MAIL=file
MAILCHECK=n
MAILPATH=files
Dir ectories searched by cd ; allows shortcuts in changing
dir ectories; unset by default.
(K) Screen’s column width; used in line edit modes and
select lists.
(K) Pathname of line edit mode to turn on (can end in
emacs or vi ); used when VISUAL is not set.
(K) Name of script that gets executed at startup; useful for
storing alias and function definitions. For example,
ENV=$HOME/.kshrc (like C shell’s .cshrc ).
(K) Editor used by fc command (default is /bin/ed ).
Obsoleted in ksh93 by HISTEDIT.
(K93) Pattern describing the set of filenames to ignore
during pattern matching.
(K) Directories to search for function definitions;
undefined functions are set via typeset -fu ; FPA TH is
searched when these functions are first refer enced. ( ksh93
also searches PATH.)
(K93) Editor used by hist command, if set. Overrides the
setting of FCEDIT.
(K) File in which to store command history (must be set
befor e ksh is started); default is $HOME/.sh_history .
(K) Number of history commands available (must be set
befor e ksh is started); default is 128.
Home directory; set by login (fr om /etc/passwd file).
Input field separators; default is space, tab, and newline.
Dir ectory to use for certain language-dependent programs.
(K93) Current locale; overrides LANG and the other LC_*
variables.
(K93) Locale to use for character collation (sorting order).
(K93) Locale to use for character class functions. (See the
earlier section “Filename Metacharacters.”)
(K93) Locale to use for the decimal-point character.
(K) Screen’s height; used for select lists.
Default file in which to receive mail; set by login .
Number of seconds between mail checks; default is 600
(10 minutes).
One or more files, delimited by a colon, in which to
receive mail. Along with each file, you may supply an
optional message that the shell prints when the file
incr eases in size. Messages are separated from the file
name by a separator character. The Korn shell separator is
? , and the default message is You have mail in $_ . $_ is
replaced with the name of the file. The Bourne shell
separator is % , and the default message is You have mail .
For example, for ksh , you might have:
MAILPATH="$MAIL?Ring! Candygram!:/etc/motd?New Login Message"
218
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellPATH=dirlist
One or more pathnames, delimited by colons, in which to
search for commands to execute. Default for SVR4 is
/bin:/usr/bin . On Solaris, the default is /usr/bin: . However,
the standard start-up scripts change it to:
/usr/bin:/usr/ucb:/etc:.
ksh93 : PATH is also searched for function definitions for
PS1=string
PS2=string
PS3=string
PS4=string
SHACCT=file
Ar rays
The Korn shell supports one-dimensional arrays of up to 1024 elements. The first
element is numbered 0. An array name can be initialized as follows:
set -A name value0 value1 ...
wher e the specified values become elements of name. Declaring arrays is not
requir ed, however. Any valid refer ence to a subscripted variable can create an
array.
When refer encing arrays, use the ${ ... } syntax. This isn’t needed when refer enc-
ing arrays inside (( )) (the form of let that does automatic quoting). Note that [
and ] ar e typed literally (i.e., they don’t stand for optional syntax).
${name[i]}
${name}
Use element i of array name. i can be any arithmetic
expr ession as described under let . The expression must
retur n a value between 0 and 1023.
Use element 0 of array name.
${name[*]}
${name[@]} Use all elements of array name.
${#name[*]}
${#name[@]} Use the number of elements in array name.
ksh93 pr ovides associative arrays, where the indices are strings instead of numbers
(as in awk ). In this case, [ and ] act like double quotes. Associative arrays are cre-
Variables
18 October 2001 15:00
219
SHELL=file
TERM=string
TMOUT=n
VISUAL=path
undefined functions.
Primary prompt string; default is $ .
Secondary prompt (used in multiline commands); default is
> .
(K) Prompt string in select loops; default is #? .
(K) Prompt string for execution trace ( ksh -x or set -x );
default is + .
“Shell account”; file in which to log executed shell scripts.
Not in Korn shell.
Name of default shell (e.g., /bin/sh ).
Terminal type.
(K) If no command is typed after n seconds, exit the shell.
(K) Same as EDITOR, but VISUAL is checked first.ated with typeset -A . A special syntax allows assigning to multiple elements at
once:
data=([joe]=30 [mary]=25)
The values would be retrieved as ${data[joe]} and ${data[mary]} .
Discipline Functions (ksh93 only)
Along with structured variables, ksh93 intr oduces discipline functions. These are
special functions that are called whenever a variable’s value is accessed or
changed. For a shell variable named x , you can define the following functions:
x.get
x.set
x.unset
Called when x ’s value is retrieved ( $x ).
Called when x ’s value is changed ( x=2 ).
Called when x is unset ( unset x ).
Within the discipline functions, special variables provide information about the
variable being changed:
.sh.name
.sh.subscript
.sh.value
The name of the variable being changed.
The subscript of the array element being changed.
The value of the variable being assigned or retur ned.
Changing it within the discipline function changes the
value that is actually assigned or retur ned.
Ar ithmetic Expressions
The Korn shell’s let command perfor ms arithmetic. ksh88 is restricted to integer
arithmetic. ksh93 can do floating-point arithmetic as well. The Korn shell provides
a way to substitute arithmetic values (for use as command arguments or in vari-
ables); base conversion is also possible:
$(( expr ))
B#n
Use the value of the enclosed arithmetic expression.
Interpr et integer n in numeric base B. For example, 8#100
specifies the octal equivalent of decimal 64.
Operator s
The Korn shell uses arithmetic operators from the C programming language; in
decr easing order of precedence.
Operator Description
++ -- Auto-incr ement and auto-decrement, both prefix and postfix. ksh93
only.
Unary plus. ksh93 only.
Unary minus.
Logical negation; binary inversion (one’s complement).
+
-
!  ̃
220
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellOperator Description
*
+
<<
<=
<
==
&
ˆ
|
&&
||
?: Multiplication; division; modulus (remainder).
Addition; subtraction.
Bitwise left shift; bitwise right shift.
Less than or equal to; greater than or equal to.
Less than; greater than.
Equality; inequality (both evaluated left to right).
Bitwise AND.
Bitwise exclusive OR.
Bitwise OR.
Logical AND (short-circuit).
Logical OR (short-circuit).
Inline conditional evaluation. ksh93 only.
/ %
-
>>
>=
>
!=
Assignment.
, Sequential expression evaluation. ksh93 only.
*= /= %=
= += -=
<<= >>=
&= ˆ= |=
Built-in Mathematical Functions (ksh93 only)
ksh93 pr ovides access to the standard set of mathematical functions. They are
called using C function call syntax.
Name Function Name Function
abs
acos
asin
cos
cosh
exp
int Absolute value
Arc cosine
Arc sine
Cosine
Hyperbolic cosine
Exponential function
Integer part of floating-point number log
sin
sinh
sqrt
tan
tanh Natural logarithm
Sine
Hyperbolic sine
Squar e root
Tangent
Hyperbolic tangent
Examples
See the let command for more infor mation and examples:
let "count=0" "i = i + 1"
let "num % 2"
(( percent >= 0 && percent <= 100 ))
Assign i and count
Test for an even number
Test the range of a value
Arithmetic Expressions
18 October 2001 15:00
221Command History
The Korn shell lets you display or modify previous commands. Commands in the
history list can be modified using:
• Line-edit mode
• The fc and hist commands
Line-Edit Mode
Line-edit mode emulates many features of the vi and emacs editors. The history list
is treated like a file. When the editor is invoked, you type editing keystrokes to
move to the command line you want to execute. You can also change the line
befor e executing it. When you’re ready to issue the command, press the Return
key.
Line-edit mode can be started in several ways. For example, these are equivalent:
$ VISUAL=vi
$ EDITOR=vi
$ set -o vi
Overrides value of VISUAL or EDITOR
Note that vi starts in input mode; to type a vi command, press the Escape key
first.
Common editing keystrokes
vi emacs Result
k
j
/string
h
l
b
w
X
x
dw
db
xp CTRL-p
CTRL-n
CTRL-r string
CTRL-b
CTRL-f
ESC-b
ESC-f
DEL
CTRL-d
ESC-d
ESC-h
CTRL-t Get previous command.
Get next command.
Get previous command containing string.
Move back one character.
Move forward one character.
Move back one word.
Move forward one word.
Delete previous character.
Delete character under cursor.
Delete word forward.
Delete word backward.
Transpose two characters.
The fc and hist Commands
Use fc -l to list history commands and fc -e to edit them. See the entry under
“Built-in Commands” for more infor mation.
In ksh93 , the fc command has been renamed hist , and alias fc=hist is prede-
fined.
222
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellExamples
$
$
$
$
$
$
$
$
$
$
$
$
history
fc -l 20 30
fc -l -5
fc -l cat
fc -l 50
fc -ln 5 > doit
fc -e vi 5 20
fc -e emacs
r
r cat
r doc=Doc
r chap=doc c
List the last 16 commands
List commands 20 through 30
List the last five commands
List all commands since the last command beginning with cat
List all commands since command 50
Save command 5 to file doit.‘
Edit commands 5 through 20 using vi
Edit previous command using emacs
Reexecute previous command
Reexecute last cat command
Substitute, then reexecute last command
Reexecute last command that begins with c, but change string chap to doc
Job Control
Job control lets you place foregr ound jobs in the background, bring background
jobs to the foregr ound, or suspend (temporarily stop) running jobs. Job control is
enabled by any of the following commands:
Bour ne shell
ksh -m -i
set -m
set -o monitor Kor n shell (same as next two)
Many job control commands take a jobID as an argument. This argument can be
specified as follows:
%n Job number n.
%s Job whose command line starts with string s.
%?s Job whose command line contains string s.
%% Curr ent job.
%+ Curr ent job (same as above).
%- Pr evious job.
The Bourne and Korn shells provide the following job control commands. For
mor e infor mation on these commands, see the section “Built-in Commands” later
in this chapter.
bg Put a job in the background.
fg Put a job in the foregr ound.
jobs
List active jobs.
kill
Terminate a job.
Job Control
18 October 2001 15:00
223
jsh -istop
Suspend a background job.
stty tostop
Stop background jobs if they try to send output to the terminal. (Note that
stty is not a built-in command.)
suspend
Suspend a job-control shell (such as one created by su ).
wait
Wait for background jobs to finish.
CTRL-Z
Suspend a foregr ound job. Then use bg or fg . (Your terminal may use some-
thing other than CTRL-Z as the suspend character.)
Invoking the Shell
The command interpreter for the Bourne shell ( sh ) or the Korn shell ( ksh ) can be
invoked as follows:
sh
[options] [arguments]
ksh [options] [arguments]
ksh and sh can execute commands from a terminal, from a file (when the first
ar gument is an executable script), or from standard input (if no arguments remain
or if -s is specified). ksh and sh automatically print prompts if standard input is a
ter minal, or if -i is given on the command line.
Ar guments
Arguments are assigned in order to the positional parameters $1 , $2 , etc. If
array assignment is in effect ( -A or +A ), arguments are assigned as array ele-
ments. If the first argument is an executable script, commands are read from
it, and the remaining arguments are assigned to $1 , $2 , etc.
Options
-c str
Read commands from string str.
-D Print all $"..." strings in the program. ksh93 only.
-i Cr eate an interactive shell (prompt for input).
-I file
Cr eate a cross-r efer ence database for variable and command definitions
and refer ences. May not be compiled in. ksh93 only.
-p
224
18 October 2001 15:00
Start up as a privileged user (Bourne shell: don’t set the effective user
and group IDs to those of the real user and group IDs. Kor n shell: don’t
pr ocess $HOME/.profile ).
Chapter 4 – The Bourne Shell and Korn Shell-r Cr eate a restricted shell (same as rksh or rsh ).
-s Read commands from standard input; output from built-in commands
goes to file descriptor 1; all other shell output goes to file descriptor 2.
The remaining options to sh and ksh ar e listed under the set built-in command.
Restr icted Shells
Restricted shells can be invoked in any of the following ways:
rksh
ksh -r
set -r Kor n shell
/usr/lib/rsh
set -r Bour ne shell
Restricted shells can also be set up by supplying the full pathname to rksh or rsh
in the shell field of /etc/passwd or by using them as the value for the SHELL vari-
able.
• Changing directory (i.e., using cd ).
• Setting the PATH variable. rksh also prohibits setting ENV and SHELL.
• Specifying a / for command names or pathnames.
• Redir ecting output (i.e., using > and >> ). ksh also prohibits the use of <> .
• Adding new built-in commands ( ksh93 ).
Shell scripts can still be run, since in that case the restricted shell calls ksh or sh to
run the script. This includes the /etc/profile , $HOME/.profile , and $ENV files.
Restricted shells are not used much in practice, as they are dif ficult to set up cor-
rectly.
Built-in Commands (Bourne and Kor n Shells)
Examples to be entered as a command line are shown with the $ pr ompt. Other-
wise, examples should be treated as code fragments that might be included in a
shell script. For convenience, some of the reserved words used by multiline com-
mands are also included.
!
! pipeline
ksh93 only. Negate the sense of a pipeline. Returns an exit status of
0 if the pipeline exited nonzero, and an exit status of 1 if the
pipeline exited zero. Typically used in if and while statements.
→
Built-in Commands (Bourne and Korn Shells) — !
18 October 2001 15:00
225
Restricted shells act the same as their nonrestricted counterparts, except that the
following are prohibited:!
Example
←
This code prints a message if user jane is not logged on:
if ! who | grep jane > /dev/null
then
echo jane is not currently logged on
fi
#
#
Ignor e all text that follows on the same line. # is used in shell scripts
as the comment character and is not really a command. (Take care
when commenting a Bourne shell script. A file that has # as its first
character is sometimes interpreted by older systems as a C shell
script.)
#!shell
#!shell [ option ]
Used as the first line of a script to invoke the named shell. Anything
given on the rest of the line is passed as a single argument to the
named shell. This feature is typically implemented by the kernel, but
may not be supported on some older systems. Some systems have a
limit of around 32 characters on the maximum length of shell. For
example:
#!/bin/sh
:
:
Null command. Returns an exit status of 0. Sometimes used on older
systems as the first character in a file to denote a Bourne shell script.
See this Example and under case. The line is still processed for side
ef fects, such as variable and command substitutions.
Example
Check whether someone is logged in:
if who | grep $1 > /dev/null
then :
# Do nothing if pattern is found
else echo "User $1 is not logged in"
fi
226
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shell. file [ arguments ]
.
Read and execute lines in file. file does not have to be executable
but must reside in a directory searched by PATH. The Korn shell
supports ar guments that are stor ed in the positional parameters.
[[
[[ expression ]]
]]
Kor n shell only. Same as test expr ession or [ expr ession ] , except
that [[ ]] allows additional operators. Word splitting and filename
expansion are disabled. Note that the brackets ( [ ] ) are typed liter-
ally, and that they must be surrounded by whitespace.
Additional Operator s
Logical AND of test expressions (short circuit).
Logical OR of test expressions (short circuit).
First string is lexically “less than” the second.
First string is lexically “greater than” the second.
name () { commands; }
name ( )
Define name as a function. Syntax can be written on one line or
acr oss many. Since the Bourne shell has no aliasing capability, sim-
ple functions can serve as aliases. The Korn shell provides the func-
tion keyword, an alternate form that works the same way.
Ther e ar e semantic differ ences that should be kept in mind:
• In the Bourne shell, all functions share traps with the “parent”
shell and may not be recursive.
• In ksh88 , all functions have their own traps and local variables,
and may be recursive.
• In ksh93 , name () functions share traps with the “parent” shell
and may not be recursive.
• In ksh93 , function functions have their own traps and local vari-
ables, and may be recursive. Using the . command with a
function function gives it Bourne shell semantics.
Example
$ count () {
> ls | wc -l
> }
→
Built-in Commands (Bourne and Korn Shells) — name ( )
18 October 2001 15:00
227
&&
||
<
>name ( ) ← When issued at the command line, count now displays the number
of files in the current directory.
alias alias [ options ] [ name [ =’cmd’ ]]
Kor n shell only. Assign a shorthand name as a synonym for cmd. If
=’ cmd ’ is omitted, print the alias for name ; if name is also omitted,
print all aliases. If the alias value contains a trailing space, the next
word on the command line also becomes a candidate for alias
expansion. See also unalias.
These aliases are built into ksh88 . Some use names of existing
Bour ne shell or C shell commands (which points out the similarities
among the shells).
autoload=’typeset -fu’
false=’let 0’
functions=’typeset -f’
hash=’alias -t’
history=’fc -l’
integer=’typeset -i’
nohup=’nohup ’
r=’fc -e -’
true=’:’
type=’whence -v’
The following aliases are built into ksh93 :
autoload=’typeset -fu’
command=’command ’
fc=’hist’
float=’typeset -E’
functions=’typeset -f’
hash=’alias -t --’
history=’hist -l’
integer=’typeset -i’
nameref=’typeset -n’
nohup=’nohup ’
r=’hist -s’
redirect=’command exec’
stop=’kill -s STOP’
times=’{ {time;} 2>&1;}’
type=’whence -v’
Options
228
18 October 2001 15:00
-p Print the word alias befor e each alias. ksh93 only.
-t Cr eate a tracked alias for a Unix command name. The Korn
shell remembers the full pathname of the command, allowing it
to be found more quickly and to be issued from any directory.
If no name is supplied, current tracked aliases are listed.
Tracked aliases are the similar to hashed commands in the
Bour ne shell.
Chapter 4 – The Bourne Shell and Korn Shell-x
Export the alias; it can now be used in shell scripts and other
subshells. If no name is supplied, current exported aliases are
listed.
alias
Example
alias dir=’echo ${PWD##*/}’
autoload [ functions ]
autoload
Load (define) the functions only when they are first used. Korn shell
alias for typeset -fu .
bg [ jobIDs ]
bg
Put current job or jobIDs in the background. See the earlier section
“Job Control.”
break
Exit from a for while , select , or until loop (or break out of n
loops).
builtin [ -ds ] [ -f library ] [ name ... ]
builtin
ksh93 only. This command allows you to load new built-in com-
mands into the shell at runtime from shared library files.
If no arguments are given, builtin prints all the built-in command
names. With arguments, builtin adds each name as a new built-in
command (like cd or pwd ). If the name contains a slash, the newly-
added built-in version is used only if a path search would otherwise
have found a command of the same name. (This allows replacement
of system commands with faster, built-in versions.) Otherwise, the
built-in command is always found.
Options
-d Delete the built-in command name.
-f Load new built-in command from library.
-s Only print “special” built-ins (those designated as special by
POSIX).
Built-in Commands (Bourne and Korn Shells) — builtin
18 October 2001 15:00
229
break [ n ]case
case value in
pattern1) cmds1;;
pattern2) cmds2;;
.
.
.
esac
Execute the first set of commands (cmds1) if value matches pat-
ter n1, execute the second set of commands (cmds2) if value
matches patter n2, etc. Be sure the last command in each set ends
with ;; . value is typically a positional parameter or other shell vari-
able. cmds ar e typically Unix commands, shell programming com-
mands, or variable assignments. Patterns can use file-generation
metacharacters. Multiple patterns (separated by | ) can be specified
on the same line; in this case, the associated cmds ar e executed
whenever value matches any of these patterns. See the Examples
her e and under eval .
Korn Shell Notes
• The Korn shell allows patter n to be preceded by an optional
open parenthesis, as in (pattern) . It’s useful for balancing
par entheses inside a $( ) construct.
• The Korn shell also allows a case to end with ;& instead of ;; .
In such cases control “falls through” to the group of statements
for the next patter n.
Examples
Check first command-line argument and take appropriate action:
case $1 in
# Match the first arg
no|yes) response=1;;
-[tT]) table=TRUE;;
*)
echo "unknown option"; exit 1;;
esac
Read user-supplied lines until user exits:
while :
# Null command; always true
do
echo "Type . to finish ==> \c"
read line
case "$line" in
.) echo "Message done"
break ;;
*) echo "$line" >> $message ;;
esac
done
230
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shellcd [ dir ]
cd [ -LP ] [ dir ]
cd [ -LP ] [ - ]
cd [ -LP ] [ old new ]
cd
With no arguments, change to home directory of user. Otherwise,
change working directory to dir. If dir is a relative pathname but is
not in the current directory, the CDPATH variable is searched. The
last three command forms are specific to the Korn shell, where -
stands for the previous directory. The fourth syntax modifies the cur-
rent directory name by replacing string old with new and then
switches to the resulting directory.
Options
Use the logical path (what the user typed, including any sym-
bolic links) for cd .. and the value of PWD. This is the
default.
-P Use the actual filesystem physical path for cd .. and the value
of PWD.
-L
Example
$ pwd
/var/spool/cron
$ cd cron uucp
/var/spool/uucp
cd prints the new directory
command [ -pvV ] name [ arg ...]
command
ksh93 only. Without -v or -V , execute name with given arguments.
This command bypasses any aliases or functions that may be
defined for name.
Options
-p Use a predefined, default search path, not the current value of
PA TH.
-v Just like whence .
-V Just like whence -v .
Example
Cr eate an alias for rm that will get the system’s version, and run it
with the -i option:
alias ’rm=command -p rm -i’
Built-in Commands (Bourne and Korn Shells) — command
18 October 2001 15:00
231continue
continue [ n ]
Skip remaining commands in a for , while , select , or until loop,
resuming with the next iteration of the loop (or skipping n loops).
disown
disown [ job ...]
ksh93 only. When a login shell exits, do not send a SIGHUP to the
given jobs. If no jobs are listed, no background jobs will receive
SIGHUP .
do
do
Reserved word that precedes the command sequence in a for ,
while , until , or select statement.
done
done
Reserved word that ends a for , while , until , or select statement.
echo
echo [ -n ] [ string ]
Write string to standard output; if -n is specified, the output is not
ter minated by a newline. If no string is supplied, echo a newline. In
the Korn shell, echo is built-in, and it emulates the system’s real echo
command. * (See also echo in Chapter 2.) echo understands special
escape characters, which must be quoted (or escaped with a \) to
pr event interpr etation by the shell:
\a Alert (ASCII BEL). (Not in /bin/sh ’s echo .)
\b Backspace.
\c Suppr ess the terminating newline (same as -n ).
\f For mfeed.
\n Newline.
\r Carriage retur n.
\t Tab character.
* But, if a path search finds /usr/bin/echo , the ksh built-in echo doesn’t accept the -n
option. (The situation with echo is a mess; consider using printf instead.)
232
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shell\v Vertical-tab character.
\\ Backslash.
echo
\0nnn
ASCII character repr esented by octal number nnn, wher e nnn
is one, two, or three digits and is preceded by a 0.
Examples
$ echo "testing printer" | lp
$ echo "Warning: ringing bell \a"
esac
esac
Reserved word that ends a case statement. Omitting esac is a com-
mon programming error.
eval
eval args
Typically, eval is used in shell scripts, and ar gs is a line of code that
contains shell variables. eval forces variable expansion to happen
first and then runs the resulting command. This “double-scanning” is
useful any time shell variables contain input/output redir ection sym-
bols, aliases, or other shell variables. (For example, redir ection nor-
mally happens before variable expansion, so a variable containing
redir ection symbols must be expanded first using eval ; otherwise,
the redir ection symbols remain uninterpreted.) See the C shell eval
(Chapter 5, The C Shell ) for another example.
Example
This fragment of a Bourne shell script shows how eval constructs a
command that is interpreted in the right order:
for option
do
case "$option" in
Define where output goes
save) out=’ > $newfile’ ;;
show) out=’ | more’ ;;
esac
done
eval sort $file $out
Built-in Commands (Bourne and Korn Shells) — eval
18 October 2001 15:00
233ex ec
exec [ command args ...]
exec [ -a name ] [ -c ] [ command args ... ]
Execute command in place of the current process (instead of creat-
ing a new process). exec is also useful for opening, closing, or copy-
ing file descriptors. The second form is for ksh93 only.
Options
-a Use name for the value of argv[0] .
-c Clear the environment before executing the program.
Examples
trap ’exec 2>&-’ 0
$ exec /bin/csh
$ exec < infile
exit
Close standard err or when
shell script exits (signal 0)
Replace Bourne shell with C shell
Reassign standard input to infile
exit [ n ]
Exit a shell script with status n (e.g., exit 1 ). n can be 0 (success) or
nonzer o (failur e). If n is not given, exit status is that of the most
recent command. exit can be issued at the command line to close a
window (log out). Exit statuses can range in value from 0 to 255.
Example
if [ $# -eq 0 ]
then
echo "Usage: $0 [-c] [-d] file(s)" 1>&2
exit 1
# Error status
fi
expor t
export [ variables ]
export [ name= [ value ] ...]
export -p
Pass (export) the value of one or more shell variables, giving global
meaning to the variables (which are local by default). For example,
a variable defined in one shell script must be exported if its value is
used in other programs called by the script. If no variables ar e
given, export lists the variables exported by the current shell. The
second form is the Korn shell version, which is similar to the first
for m except that you can set a variable name to a value befor e
exporting it. The third form is specific to ksh93 .
234
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellOption
expor t
Print export befor e printing the names and values of exported
variables. This allows saving a list of exported variables for
rereading later.
-p
Example
In the Bourne shell, you would type:
TERM=vt100
export TERM
In the Korn shell, you could type this instead:
export TERM=vt100
false
false
ksh88 alias for let 0 . Built-in command in ksh93 that exits with a
fc [ options ] [ first [ last ]]
fc -e - [ old=new ] [ command ]
fc
ksh88 only. Display or edit commands in the history list. (Use only
one of -l or -e .) first and last ar e numbers or strings specifying the
range of commands to display or edit. If last is omitted, fc applies to
a single command (specified by first). If both first and last ar e omit-
ted, fc edits the previous command or lists the last 16. The second
for m of fc takes a history command, replaces old string with new
string, and executes the modified command. If no strings are speci-
fied, command is just reexecuted. If no command is given either,
the previous command is reexecuted. command is a number or
string like first. See the examples in the earlier section “Command
History.”
Options
-e [ editor ]
Invoke editor to edit the specified history commands. The
default editor is set by the shell variable FCEDIT. If that vari-
able is not set, the default is /bin/ed .
-e -
Execute (or redo) a history command; refer to second syntax
line above.
→
Built-in Commands (Bourne and Korn Shells) — fc
18 October 2001 15:00
235
false retur n value.fc
←
fc
-l List the specified command or range of commands, or list the
last 16.
-n Suppr ess command numbering from the -l listing.
-r Reverse the order of the -l listing.
fc
ksh93 alias for hist .
fg
fg [ jobIDs ]
Bring current job or jobIDs to the foregr ound. See the earlier section
“Job Control.”
fi
fi
Reserved word that ends an if statement. (Don’t forget to use it!)
for
for x [ in list ]
do
commands
done
For variable x (in optional list of values) do commands. If in list is
omitted, "$@" (the positional parameters) is assumed.
Examples
Paginate files specified on the command line; save each result:
for file; do
pr $file > $file.tmp
done
Search chapters for a list of words (like fgrep -f ):
for item in ‘cat program_list‘
do
echo "Checking chapters for"
echo "references to program $item..."
grep -c "$item.[co]" chap*
done
236
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellExtract a one-word title from each file and use as new filename:
for
for file
do
name=‘sed -n ’s/NAME: //p’ $file‘
mv $file $name
done
for
for ((init; cond; incr))
do
commands
done
ksh93 only. Arithmetic for loop, similar to C’s. Evaluate init. While
cond is true, execute the body of the loop. Evaluate incr befor e re-
testing cond. Any one of the expressions may be omitted; a missing
cond is treated as being true.
Examples
Search for a phrase in each odd chapter:
for ((x=1; x <= 20; x += 2))
do
grep $1 chap$x
done
function name { commands; }
function
Kor n shell only. Define name as a shell function. See the description
of semantic issues in the name () entry earlier.
Example
Define a function to count files.
$ function fcount {
>
ls | wc -l
> }
functions
functions
Kor n shell alias for typeset -f . (Note the “s” in the name; function
is a Korn shell keyword.) See typeset later in this listing.
Built-in Commands (Bourne and Korn Shells) — functions
18 October 2001 15:00
237getconf
getconf [ name [ path ]]
ksh93 only. Retrieve the values for parameters that can vary across
systems. name is the parameter to retrieve; path is a filename to test
for parameters that can vary on differ ent filesystem types.
The parameters are defined by the POSIX 1003.1 and 1003.2 stan-
dards. See the entry for getconf in Chapter 2.
Example
Print the maximum value that can be held in a C int .
$ getconf INT_MAX
2147483647
getopts
getopts [ -a name ] string name [ args ]
Pr ocess command-line arguments (or ar gs, if specified) and check
for legal options. getopts is used in shell script loops and is
intended to ensure standard syntax for command-line options. Stan-
dard syntax dictates that command-line options begin with a + or a
- . Options can be stacked; i.e., consecutive letters can follow a sin-
gle - . End processing of options by specifying -- on the command
line. string contains the option letters to be recognized by getopts
when running the shell script. Valid options are processed in turn
and stored in the shell variable name. If an option is followed by a
colon, the option must be followed by one or more arguments.
(Multiple arguments must be given to the command as one shell
wor d. This is done by quoting the arguments or separating them
with commas. The application must be written to expect multiple
arguments in this format.) getopts uses the shell variables OPTARG
and OPTIND. getopts is available to non-Bourne shell users as /usr/
bin/getopts .
Option
-a
hash
Use name in error messages about invalid options. ksh93 only.
hash [ -r ] [ commands ]
Bour ne shell version. As the shell finds commands along the search
path ($PATH), it remembers the found location in an internal hash
table. The next time you enter a command, the shell uses the value
stor ed in its hash table.
With no arguments, hash lists the current hashed commands. The
display shows hits (the number of times the command is called by
the shell) and cost (the level of work needed to find the command).
238
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellCommands that were found in a relative directory have an asterisk
( * ) added in the hits column.
hash
With commands, the shell will add those commands to the hash
table.
-r removes commands from the hash list, either all of them or just
the specified commands. The hash table is also cleared when PATH
is assigned. Use PATH=$PATH to clear the hash table without affecting
your search path. This is most useful if you have installed a new ver-
sion of a command in a directory that is earlier in $PATH than the
curr ent version of the command.
hash
hash
Kor n shell alias for alias -t ( alias -t — in ksh93 ). Emulates Bourne
shell’s hash .
hist
ksh93 only. Display or edit commands in the history list. (Use only
one of -l or -s .) first and last ar e numbers or strings specifying the
range of commands to display or edit. If last is omitted, hist applies
to a single command (specified by first). If both first and last ar e
omitted, hist edits the previous command or lists the last 16. The
second form of hist takes a history command, replaces old string
with new string, and executes the modified command. If no strings
ar e specified, command is just reexecuted. If no command is given
either, the previous command is reexecuted. command is a number
or string like first. See the examples in the earlier section “Command
History.”
Options
-e [ editor ]
Invoke editor to edit the specified history commands. The
default editor is set by the shell variable HISTEDIT. If that vari-
able is not set, FCEDIT is used. If neither is set, the default is
/bin/ed .
-l List the specified command or range of commands, or list the
last 16.
-n Suppr ess command numbering from the -l listing.
-r Reverse the order of the -l listing.
→
Built-in Commands (Bourne and Korn Shells) — hist
18 October 2001 15:00
239
hist [ options ] [ first [ last ]]
hist -s [ old=new ] [ command ]Execute (or redo) a history command; refer to second syntax
line above.
hist -s
histor y history
←
Show the last 16 commands. ksh88 alias for fc -l . ksh93 alias for
hist -l .
if
if condition1
then commands1
[ elif condition2
then commands2 ]
.
.
.
[ else commands3 ]
fi
If condition1 is met, do commands1; otherwise, if condition2 is
met, do commands2 ; if neither is met, do commands3. Conditions
ar e usually specified with the test and [[ ]] commands. See test
and [[ ]] for a full list of conditions, and see additional Examples
under : and exit.
Examples
Insert a 0 before numbers less than 10:
if [ $counter -lt 10 ]
then number=0$counter
else number=$counter
fi
Make a directory if it doesn’t exist:
if [ ! -d $dir ]; then
mkdir $dir
chmod 775 $dir
fi
integer
integer
Specify integer variables. Korn shell alias for typeset -i .
jobs
jobs [ options ] [ jobIDs ]
List all running or stopped jobs, or list those specified by jobIDs. For
example, you can check whether a long compilation or text format
240
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shellis still running. Also useful before logging out. See the earlier section
“Job Control.”
jobs
Options
-l List job IDs and process group IDs.
-n List only jobs whose status changed since last notification. Korn
shell only.
-p List process group IDs only.
-x cmd
Replace each job ID found in cmd with the associated process
ID and then execute cmd. Not valid for Korn shell.
kill [ options ] IDs
kill
Terminate each specified process ID or job ID. You must own the
pr ocess or be a privileged user. This built-in is similar to /usr/bin/
kill described in Chapter 2. See the earlier section “Job Control.”
Options
-l
List the signal names. (Used by itself.)
-n num
Send the given signal number. ksh93 only.
-s name
Send the given signal name. ksh93 only.
-signal
The signal number (from /usr/include/sys/signal.h ) or name
(fr om kill -l ). With a signal number of 9, the kill is absolute.
Signals
Signals are defined in /usr/include/sys/signal.h and are listed here
without the SIG pr efix. You probably have more signals on your sys-
tem than the ones shown here.
HUP
INT
QUIT
ILL
TRAP
IOT
EMT
FPE
KILL
BUS
SEGV
SYS
PIPE
1
2
3
4
5
6
7
8
9
10
11
12
13
hangup
interrupt
quit
illegal instruction
trace trap
IOT instruction
EMT instruction
floating point exception
kill
bus error
segmentation violation
bad argument to system call
write to pipe, but no process to read it
→
Built-in Commands (Bourne and Korn Shells) — kill
18 October 2001 15:00
241ALRM
TERM
USR1
USR2
CLD
PWR
kill
←
let
14
15
16
17
18
19
alarm clock
software termination (the default signal)
user-defined signal 1
user-defined signal 2
child process died
restart after power failure
let expressions
or
((expressions))
Kor n shell only. Perfor m arithmetic as specified by one or more
expr essions. expr essions consist of numbers, operators, and shell
variables (which don’t need a preceding $ ). Expressions must be
quoted if they contain spaces or other special characters. The (( ))
for m does the quoting for you. For more infor mation and examples,
see “Arithmetic Expressions” earlier in this chapter. See also expr in
Chapter 2.
Examples
Each of these examples adds 1 to variable i :
i=‘expr $i + 1‘
let i=i+1
let "i = i + 1"
(( i = i + 1 ))
(( i += 1 ))
(( i++ ))
nameref
sh, ksh88, ksh93
ksh88 and ksh93
ksh93 only
nameref newvar=oldvar ...
ksh93 alias for typeset -n . See the discussion of indirect variables in
the section “Variables,” earlier in this chapter.
newgrp
newgrp [ group ]
Change your group ID to gr oup, or retur n to your default group. On
moder n Unix systems where users can be in multiple groups, this
command is obsolete.
nohup
nohup
Don’t terminate a command after log out. nohup is a Korn shell alias:
nohup=’nohup ’
242
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellThe embedded space at the end lets nohup interpr et the following
command as an alias, if needed.
nohup
print [ options ] [ string ...]
pr int
Kor n shell only. Display string (on standard output by default).
print includes the functions of echo and can be used in its place on
most Unix systems.
Options
- Ignor e all subsequent options.
-- Same as – .
-f format
Print like printf , using for mat as the format string. Ignor es the
-n , -r , and -R options. ksh93 only.
Don’t end output with a newline.
-p Send string to the process created by |& , instead of to standard
output.
-r Ignor e the escape sequences often used with echo .
-R Same as -r and ignore subsequent options (except -n ).
-s Send string to the history file.
-n
-u [ n ]
Send string to file descriptor n (default is 1).
printf format [ val ...]
pr intf
ksh93 only. Formatted printing, like the ANSI C printf function.
Additional For mat Letter s
%b Expand escape sequences in strings (e.g., \t to tab, and so on).
%d An additional period and the output base can follow the preci-
sion (e.g., %5.3.6d to produce output in base 6).
%P Translate egrep extended regular expression into ksh patter n.
%q Print a quoted string that can be rer ead later on.
Built-in Commands (Bourne and Korn Shells) — printf
18 October 2001 15:00
243pwd
pwd
pwd [ -LP ]
Print your present working directory on standard output. The second
for m is specific to the Korn shell.
Options
Options give control over the use of logical versus physical treat-
ment of the printed path. See the entry for cd, earlier in this section.
r
-L Use logical path (what the user typed, including any symbolic
links) and the value of PWD for the current directory. This is
the default.
-P Use the actual filesystem physical path for the current directory.
r
Reexecute previous command. ksh88 alias for fc -e - . ksh93 alias for
hist -s .
read
read variable1 [ variable2 ... ]
Read one line of standard input and assign each word to the corre-
sponding variable, with all leftover words assigned to the last vari-
able. If only one variable is specified, the entire line will be assigned
to that variable. See the Examples here and under case . The retur n
status is 0 unless EOF is reached.
Example
$ read first last address
Sarah Caldwell 123 Main Street
$ echo "$last, $first\n$address"
Caldwell, Sarah
123 Main Street
read
read [ options ] [ variable1 [ ?string ]] [ variable2 ...]
Kor n shell only. Same as in the Bourne shell, except that the Korn
shell version supports the following options as well as the ? syntax
for prompting. If the first variable is followed by ? string, string is
displayed as a user prompt. If no variables are given, input is stored
in the REPLY variable. Additionally, ksh93 allows you to specify a
timeout.
244
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn ShellOptions
read
-A array
Read into indexed array array. ksh93 only.
-d delim
Read up to first occurrence of delim, instead of newline. ksh93
only.
-p Read from the output of a |& copr ocess.
-r Raw mode; ignore \ as a line continuation character.
-s Save input as a command in the history file.
-t timeout
When reading from a terminal or pipe, if no data is entered
after timeout seconds, retur n 1. This pr events an application
fr om hanging forever, waiting for user input. ksh93 only.
-u [ n ]
Read input from file descriptor n (default is 0).
Example
Pr ompt yourself to enter two temperatures:
$ read n1?"High low: " n2
High low: 65 33
readonly [ variable1 variable2 ...]
readonly -p
readonly
Pr event the specified shell variables from being assigned new val-
ues. Variables can be accessed (read) but not overwritten. In the
Kor n shell, the syntax variable = value can assign a new value that
cannot be changed. The second form is specific to ksh93 .
Option
-p
Print readonly befor e printing the names and values of read-
only variables. This allows saving a list of read-only variables
for rer eading later.
redirect i/o-redirection ...
redirect
ksh93 alias for command exec .
→
Built-in Commands (Bourne and Korn Shells) — redir ect
18 October 2001 15:00
245redirect
←
Example
Change the shell’s standard error to the console:
$ redirect 2>/dev/console
retur n
return [ n ]
Use inside a function definition. Exit the function with status n or
with the exit status of the previously executed command.
select
select x [ in list ]
do
commands
done
Kor n shell only. Display a list of menu items on standard error, num-
ber ed in the order they are specified in list. If no in list is given,
items are taken from the command line (via "$@" ). Following the
menu is a prompt string (set by PS3). At the PS3 prompt, users select
a menu item by typing its line number, or they redisplay the menu
by pressing the Return key. (User input is stored in the shell variable
REPLY.) If a valid line number is typed, commands ar e executed.
Typing EOF ter minates the loop.
Example
PS3="Select the item number: "
select event in Format Page View Exit
do
case "$event" in
Format) nroff $file | lp;;
Page)
pr $file | lp;;
View)
more $file;;
Exit)
exit 0;;
*
)
echo "Invalid selection";;
esac
done
The output of this script looks like this:
1. Format
2. Page
3. View
4. Exit
Select the item number:
set
set [ options arg1 arg2 ... ]
With no arguments, set prints the values of all variables known to
the current shell. Options can be enabled ( - option) or disabled
246
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shell(+option). Options can also be set when the shell is invoked, via ksh
or sh . (See the earlier section “Invoking the Shell.”) Arguments are
assigned in order to $1 , $2 , etc.
set
Options
+A name
Assign remaining arguments as elements of array name. Kor n
shell only.
-A name
Same as +A , but unset name befor e making assignments. Kor n
shell only.
Fr om now on automatically mark variables for export after
defining or changing them.
-b Same as -o notify . The single-letter form is only in ksh93 .
-C Same as -o noclobber . The single-letter form is only in ksh93 .
-e Exit if a command yields a nonzero exit status. In the Korn
shell, the ERR trap is executed before the shell exits.
-f Ignor e filename metacharacters (e.g., * ? [ ] ).
-h Locate commands as they are defined. The Korn shell creates
tracked aliases, whereas the Bourne shell hashes command
names. See hash.
-k Assignment of environment variables (var = value) takes effect
regardless of where they appear on the command line. Nor-
mally, assignments must precede the command name.
-m Enable job control; background jobs execute in a separate pro-
cess group. -m is usually set automatically. Korn shell only.
-n Read commands but don’t execute; useful for checking syntax.
The Korn shell ignores this option if it is interactive.
-a
-o [ mode ]
List Korn shell modes, or turn on mode mode. Many modes
can be set by other options. Modes are:
allexport
bgnice
emacs
errexit
ignoreeof
keyword
markdirs
monitor
Same as -a .
Run background jobs at lower priority.
Set command-line editor to emacs .
Same as -e .
Don’t process EOF signals. To exit the shell, type
exit .
Same as -k .
Append / to directory names.
Same as -m .
→
Built-in Commands (Bourne and Korn Shells) — set
18 October 2001 15:00
247noclobber
set
←
noexec
noglob
nolog
notify
nounset
privileged
trackall
verbose
vi
viraw
xtrace
Pr event overwriting via > redir ection; use >| to
overwrite files.
Same as -n .
Same as -f .
Omit function definitions from history file.
Print job completion messages as soon as jobs
ter minate; don’t wait until the next prompt.
Same as -u .
Same as -p .
Same as -h .
Same as -v .
Set command-line editor to vi .
Same as vi , but process each character when it’s
typed.
Same as -x .
-p Start up as a privileged user (i.e., don’t process $HOME/.profile ).
-s Sort the positional parameters. Kor n shell only.
-t Exit after one command is executed.
-u In substitutions, treat unset variables as errors.
-v Show each shell command line when read.
-x
Show commands and arguments when executed, preceded by a
+ . (Kor n shell: precede with the value of PS4.) This provides
step-by-step debugging of shell scripts.
- Turn off -v and -x , and turn off option processing. Included in
Kor n shell for compatibility with older versions of Bourne shell.
-- Used as the last option; -- tur ns of f option processing so that
arguments beginning with - ar e not misinterpreted as options.
(For example, you can set $1 to −1.) If no arguments are given
after -- , unset the positional parameters.
Examples
set - "$num" -20 -30
set -vx
set +x
set -o noclobber
set +o noclobber
shift
Set $1 to $num, $2 to -20, $3 to -30
Read each command line; show it;
execute it; show it again (with arguments)
Stop command tracing
Pr event file overwriting
Allow file overwriting again
shift [ n ]
Shift positional arguments (e.g., $2 becomes $1 ). If n is given, shift
to the left n places. Used in while loops to iterate through
248
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shellcommand-line arguments. In the Korn shell, n can be an integer
expr ession.
shift
sleep [ n ]
sleep
ksh93 only. Sleep for n seconds. n can have a fractional part.
stop [ jobIDs ]
stop
Suspend the background job specified by jobIDs; this is the comple-
ment of CTRL-Z or suspend . Not valid in ksh88 . See the earlier section
“Job Control.”
stop [ jobIDs ]
stop
ksh93 alias for kill -s STOP .
Same as CTRL-Z . Often used to stop an su command. Not valid in
ksh88 ; in ksh93 , suspend is an alias for kill -s STOP $$ .
test
test condition
or
[ condition ]
Evaluate a condition and, if its value is true, retur n a zer o exit status;
otherwise, retur n a nonzer o exit status. An alternate form of the
command uses [ ] rather than the word test . The Korn shell allows
an additional form, [[ ]] . condition is constructed using the follow-
ing expressions. Conditions are true if the description holds true.
Featur es that are specific to the Korn shell are marked with a (K).
Featur es that are specific to ksh93 ar e marked with a (K93).
File Conditions
-a file
file exists. (K)
-b file
file exists and is a block special file.
-c file
file exists and is a character special file.
→
Built-in Commands (Bourne and Korn Shells) — test
18 October 2001 15:00
249
suspend
suspendtest
←
-d file
file exists and is a directory.
-f file
file exists and is a regular file.
-g file
file exists, and its set-group-id bit is set.
-G file
file exists, and its group is the effective group ID. (K)
-k file
file exists, and its sticky bit is set.
-L file
file exists and is a symbolic link. (K)
-o c
Option c is on. (K)
-O file
file exists, and its owner is the effective user ID. (K)
-p file
file exists and is a named pipe (fifo).
-r file
file exists and is readable.
-s file
file exists and has a size greater than zero.
-S file
file exists and is a socket. (K)
-t [ n ]
The open file descriptor n is associated with a terminal device;
default n is 1.
-u file
file exists, and its set-user-id bit is set.
-w file
file exists and is writable.
-x file
file exists and is executable.
f1 -ef f2
Files f1 and f2 ar e linked (refer to same file). (K)
f1 -nt f2
File f1 is newer than f2. (K)
250
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shelltest
f1 -ot f2
File f1 is older than f2. (K)
Str ing Conditions
string
string is not null.
-n s1
String s1 has nonzero length.
-z s1
String s1 has zero length.
s1 = s2
Strings s1 and s2 ar e identical. In the Korn shell, s2 can be a
wildcard pattern. (See the section “Filename Metacharacters,”
earlier in this chapter.)
s1 == s2
Strings s1 and s2 ar e identical. s2 can be a wildcard pattern.
Pr eferr ed over = . (K93)
s1 != s2
Strings s1 and s2 ar e not identical. In the Korn shell, s2 can be
a wildcard pattern.
s1 < s2
ASCII value of s1 pr ecedes that of s2. (Valid only within [[ ]]
construct). (K)
s1 > s2
ASCII value of s1 follows that of s2. (Valid only within [[ ]]
construct). (K)
Integer Comparisons
n1 -eq n2
n1 equals n2.
n1 -ge n2
n1 is greater than or equal to n2.
n1 -gt n2
n1 is greater than n2.
n1 -le n2
n1 is less than or equal to n2.
n1 -lt n2
n1 is less than n2.
→
Built-in Commands (Bourne and Korn Shells) — test
18 October 2001 15:00
251test
←
n1 -ne n2
n1 does not equal n2.
Combined For ms
(condition)
True if condition is true (used for grouping). The () s should
be quoted by a \ .
! condition
True if condition is false.
condition1 -a condition2
True if both conditions are true.
condition1 && condition2
True if both conditions are true. (Valid only within [[ ]] con-
struct.) (K)
condition1 -o condition2
True if either condition is true.
condition1 || condition2
True if either condition is true. (Valid only within [[ ]] con-
struct.) (K)
Examples
The following examples show the first line of various statements that
might use a test condition:
while test $# -gt 0
while [ -n "$1" ]
if [ $count -lt 10 ]
if [ -d RCS ]
if [ "$answer" != "y" ]
if [ ! -r "$1" -o ! -f "$1" ]
time
While there are arguments...
While there are nonempty arguments...
If $count is less than 10...
If the RCS directory exists...
If the answer is not y...
If the first argument is not a
readable file or a regular file...
time command
time [ command ]
Kor n shell only. Execute command and print the total elapsed time,
user time, and system time (in seconds). Same as the Unix command
time (see Chapter 2), except that the built-in version can also time
other built-in commands as well as all commands in a pipeline.
The second form applies to ksh93 ; with no command, the total user
and system times for the shell, and all children are printed.
252
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shelltimes
times
Print accumulated process times for user and system.
times
times
ksh93 alias for { {time;} 2>&1;} . See also time.
trap [ [ commands ] signals ]
trap -p
trap
Execute commands if any signals ar e received. The second form is
specific to ksh93 ; it prints the current trap settings in a form suitable
for rer eading later.
Common signals include 0, 1, 2, and 15. Multiple commands should
be quoted as a group and separated by semicolons internally. If
commands is the null string (i.e., trap "" signals ), signals ar e
ignor ed by the shell. If commands ar e omitted entirely, reset pro-
cessing of specified signals to the default action. ksh93 : if commands
is “-”, reset signals to their initial defaults.
If both commands and signals ar e omitted, list current trap assign-
ments. See the Examples here and in ex ec.
Signals
Signals are listed along with what triggers them:
0
1
2
3
4
5
6
7
8
10
12
13
14
15
ERR
DEBUG
KEYBD
Exit from shell (usually when shell script finishes).
Hangup (usually logout).
Interrupt (usually CTRL-C ).
Quit.
Illegal instruction.
Trace trap.
IOT instruction.
EMT instruction.
Floating-point exception.
Bus error.
Bad argument to a system call.
Write to a pipe without a process to read it.
Alar m timeout.
Softwar e ter mination (usually via kill ).
Nonzer o exit status. Korn shell only.
Execution of any command. Korn shell only.
A key has been read in emacs , gmacs , or vi editing
mode. ksh93 only.
→
Built-in Commands (Bourne and Korn Shells) — trap
18 October 2001 15:00
253trap
Examples
←
trap "" 2
trap 2
Ignor e signal 2 (interrupts)
Obey interrupts again
Remove a $tmp file when the shell program exits, or if the user logs
out, presses CTRL-C , or does a kill :
trap "rm -f $tmp; exit" 0 1 2 15
Print a “clean up” message when the shell program receives signals
1, 2, or 15:
trap ’echo Interrupt! Cleaning up...’ 1 2 15
tr ue
true
ksh88 alias for : . ksh93 built-in command that exits with a true retur n
value.
type
type commands
Show whether each command name is a Unix command, a built-in
command, or a defined shell function. In the Korn shell, this is sim-
ply an alias for whence -v .
Example
$ type mv read
mv is /bin/mv
read is a shell builtin
typeset
typeset [ options ] [ variable [ =value ...]]
typeset -p
Kor n shell only. Assign a type to each variable (along with an
optional initial value), or, if no variables are supplied, display all
variables of a particular type (as determined by the options). When
variables are specified, - option enables the type, and +option dis-
ables it. With no variables given, - option prints variable names and
values; +option prints only the names.
The second form shown is specific to ksh93 .
Options
-A arr
arr is an associative array. ksh93 only.
254
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shelltypeset
-E d
variable is a floating-point number. d is the number of decimal
places. The value is printed using printf %g for mat. ksh93
only.
-F d
variable is a floating-point number. d is the number of decimal
places. The value is printed using printf %f for mat. ksh93
only.
-f [ c ]
The named variable is a function; no assignment is allowed. If
no variable is given, list current function names. Flag c can be
t , u , or x . t tur ns on tracing (same as set -x ). u marks the
function as undefined, which causes autoloading of the function
(i.e., a search of FPATH locates the function when it’s first used.
ksh93 also searches PATH). x exports the function. Note the
aliases autoload and functions.
On non-Unix systems, map Unix filenames to host filenames.
-H
-i [ n ]
Define variables as integers of base n. integer is an alias for
typeset -i .
-L [ n ]
Define variables as left-justified strings, n characters long (trun-
cate or pad with blanks on the right as needed). Leading
blanks are stripped; leading 0s are stripped if -Z is also speci-
fied. If no n is supplied, field width is that of the variable’s first
assigned value.
-l
-n
Convert uppercase to lowercase.
variable is an indirect refer ence to another variable (a namer ef).
ksh93 only. (See the section “Variables,” earlier in this chapter.)
-p
Print typeset commands to recr eate the types of all the current
variables. ksh93 only.
-R [ n ]
Define variables as right-justified strings, n characters long
(truncate or pad with blanks on the left as needed). Trailing
blanks are stripped. If no n is supplied, field width is that of
the variable’s first assigned value.
-r Mark variables as read-only. See also readonly.
-t Mark variables with a user-definable tag.
-u Convert lowercase to uppercase.
→
Built-in Commands (Bourne and Korn Shells) — typeset
18 October 2001 15:00
255typeset
←
Mark variables for automatic export.
-x
-Z [ n ]
When used with -L , strip leading 0s. When used alone, it’s sim-
ilar to -R except that -Z pads numeric values with 0s and pads
text values with blanks.
Examples
typeset
typeset
typeset
typeset
typeset
ulimit
-x
+r PWD
-i n1 n2 n3
-R5 zipcode
List name, value, and type of all set variables
List names and values of exported variables
End read-only status of PWD
Thr ee variables are integers
zipcode is flush right, five characters wide
ulimit [ options ] [ n ]
Print the value of one or more resource limits, or, if n is specified,
set a resource limit to n. Resource limits can be either hard ( -H ) or
soft ( -S ). By default, ulimit sets both limits or prints the soft limit.
The options determine which resource is acted on.
Options
256
18 October 2001 15:00
-H Hard limit. Anyone can lower a hard limit; only privileged users
can raise it.
-S Soft limit. Must be lower than the hard limit.
-a Print all limits.
-c Maximum size of core files.
-d Maximum kilobytes of data segment or heap.
-f Maximum size of files (the default option).
-m Maximum kilobytes of physical memory. Kor n shell only. (Not
ef fective on all Unix systems.)
-n Maximum file descriptor plus 1.
-p Size of pipe buffers. Korn shell only. (Not effective on all Unix
systems.)
-s Maximum kilobytes of stack segment.
-t Maximum CPU seconds.
-v Maximum kilobytes of virtual memory.
Chapter 4 – The Bourne Shell and Korn Shellumask [ nnn ]
umask [ -S ] [ mask ]
umask
Display file creation mask or set file creation mask to octal value
nnn. The file creation mask determines which permission bits are
tur ned of f (e.g., umask 002 pr oduces rw-rw-r- - ). See the entry in
Chapter 2 for examples.
The second form is specific to ksh93 . A symbolic mask is permis-
sions to keep.
Option
-S
Print the current mask using symbolic notation. ksh93 only.
unalias
unalias names
unalias -a
Kor n shell only. Remove names fr om the alias list. See also alias.
Option
-a
Remove all aliases. ksh93 only.
unset
unset names
Bour ne shell version. Erase definitions of functions or variables
listed in names.
unset [ options ] names
unset
Erase definitions of functions or variables listed in names. The Korn
shell version supports options.
Options
-f Unset functions in names.
-n Unset indirect variable (nameref) name, not the variable the
namer ef refers to. ksh93 only.
-v Unset variables names (default). ksh93 only.
Built-in Commands (Bourne and Korn Shells) — unset
18 October 2001 15:00
257until
until condition
do
commands
done
Until condition is met, do commands. condition is usually specified
with the test command.
wait
wait [ ID ]
Pause in execution until all background jobs complete (exit status 0
is retur ned), or pause until the specified background process ID or
job ID completes (exit status of ID is retur ned). Note that the shell
variable $! contains the process ID of the most recent background
pr ocess. If job control is not in effect, ID can be only a process ID
number. See the earlier section “Job Control.”
Example
wait $!
whence
Wait for most recent background process to finish
whence [ options ] commands
Kor n shell only. Show whether each command name is a Unix com-
mand, a built-in command, a defined shell function, or an alias.
Options
while
-a Print all interpretations of commands. ksh93 only.
-f Skip the search for shell functions. ksh93 only.
-p Search for the pathname of commands.
-v Verbose output; same as type .
while condition
do
commands
done
While condition is met, do commands. condition is usually specified
with the test command. See the Examples under case and test.
258
18 October 2001 15:00
Chapter 4 – The Bourne Shell and Korn Shellfilename
filename
Read and execute commands from executable file filename, or exe-
cute a binary object file.
Built-in Commands (Bourne and Korn Shells)
18 October 2001 15:00
259CHAPTER 5
The C Shell
This chapter describes the C shell, so named because many of its programming
constructs and symbols resemble those of the C programming language. The fol-
lowing topics are presented:
• Overview of features
• Syntax
• Variables
• Expr essions
• Command history
• Job control
• Invoking the shell
• Built-in commands
For more infor mation on the C shell, see Using csh & tcsh, which is listed in the
Bibliography.
Over view of Features
Featur es of the C shell include:
• Input/output redir ection
• Wildcard characters (metacharacters) for filename abbreviation
• Shell variables for customizing your environment
260
18 October 2001 15:04• Integer arithmetic
• Access to previous commands (command history)
• Command name abbreviation (aliasing)
• A built-in command set for writing shell programs
• Job control
• Optional filename completion
Syntax
This section describes the many symbols peculiar to the C shell. The topics are
arranged as follows:
• Special files
• Filename metacharacters
• Quoting
• Command forms
• Redir ection for ms
Special Files
Executed at each instance of shell invocation.
Executed by login shell after .cshrc at login.
Executed by login shell at logout.
History list saved from previous login.
Source of home directories for  ̃ name abbr eviations.
(May come from NIS or NIS+ instead.)
 ̃/.cshrc
 ̃/.login
 ̃/.logout
 ̃/.history
/etc/passwd
Filename Metacharacter s
Metacharacter Description
*
?
[abc ... ] Match any string of zero or mor e characters.
Match any single character.
Match any one of the enclosed characters; a hyphen can be
used to specify a range (e.g., a–z, A–Z, 0–9).
Expand each comma-separated string inside braces. The strings
need not match actual filenames.
Home directory for the current user.
Home directory of user name.
{abc,xxx, ... }
 ̃
 ̃name
Syntax
18 October 2001 15:04
261Examples
%
%
%
%
%
%
ls new*
cat ch?
vi [D-R]*
ls {ch,app}?
mv info{,.old}
cd  ̃tom
Match new and new.1
Match ch9 but not ch10
Match files that begin with uppercase D through R
Expand, then match ch1, ch2, app1, app2
Expands to mv info info.old
Change to tom’s home directory
Quoting
Quoting disables a character’s special meaning and allows it to be used literally, as
itself. The characters in the following table have special meaning to the C shell.
Character Meaning
;
&
( )
|
* ? [ ]  ̃
{ }
< > & !
! ˆ
" ’ \
‘
$
space tab newline Command separator
Backgr ound execution
Command grouping
Pipe
Filename metacharacters
String expansion characters; usually don’t requir e quoting
Redir ection symbols
History substitution, quick substitution
Used in quoting other characters
Command substitution
Variable substitution
Word separators
These characters can be used for quoting:
" " Everything between " and " is taken literally, except for the following charac-
ters that keep their special meaning:
$ Variable substitution will occur.
‘ Command substitution will occur.
" This marks the end of the double quote.
\ Escape next character.
! The history character.
newline
The newline character.
’ ’ Everything between ’ and ’ is taken literally except for ! (history) and
another ’ , and newline.
\
262
18 October 2001 15:04
The character following a \ is taken literally. Use within "" to escape " , $ , ‘ ,
and newline. Use within ’’ to escape newlines. Often used to escape itself,
spaces, or newlines. Always needed to escape a history character (usually ! ).
Chapter 5 – The C ShellExamples
% echo ’Single quotes "protect" double quotes’
Single quotes "protect" double quotes
% echo "Don’t double quotes protect single quotes too?"
Don’t double quotes protect single quotes too?
% echo "You have ‘ls|wc -l‘ files in ‘pwd‘"
You have
43 files in /home/bob
% echo The value of \$x is $x
The value of $x is 100
Command For ms
cmd &
cmd1 ; cmd2
(cmd1 ; cmd2)
cmd1 | cmd2
cmd1 ‘cmd2‘
cmd1 && cmd2
cmd1 || cmd2
Execute cmd in background.
Command sequence; execute multiple cmds on the same line.
Subshell; treat cmd1 and cmd2 as a command group.
Pipe; use output from cmd1 as input to cmd2.
Command substitution; use cmd2 output as arguments to cmd1.
AND; execute cmd1 and then (if cmd1 succeeds) cmd2. This is
a “short-circuit” operation; cmd2 is never executed if cmd1 fails.
OR; execute either cmd1 or (if cmd1 fails) cmd2. This is a
“short-circuit” operation; cmd2 is never executed if cmd1 suc-
ceeds.
%
%
%
%
%
%
%
%
nroff file > file.out &
cd; ls
(date; who; pwd) > logfile
sort file | pr -3 | lp
vi ‘grep -l ifdef *.c‘
egrep ’(yes|no)’ ‘cat list‘
grep XX file && lp file
grep XX file || echo XX not found
Examples
For mat in the background
Execute sequentially
All output is redir ected
Sort file, page output, then print
Edit files found by grep
Specify a list of files to search
Print file if it contains the pattern,
otherwise, echo an error message
Redirection For ms
File Desciptor Name Common Abbr eviation Typical Default
0
1
2 Standard input
Standard output
Standard error stdin
stdout
stderr Keyboard
Ter minal
Terminal
The usual input source or output destination can be changed, as seen in the fol-
lowing sections.
Syntax
18 October 2001 15:04
263Simple redirection
cmd > file
Send output of cmd to file (overwrite).
cmd >! file
Same as above, even if noclobber is set.
cmd >> file
Send output of cmd to file (append).
cmd >>! file
Same as above, but write to file even if noclobber is set.
cmd < file
Take input for cmd fr om file.
cmd << text
Read standard input up to a line identical to text (text can be stored in a shell
variable). Input is usually typed at the terminal or in the shell program. Com-
mands that typically use this syntax include cat , echo , ex , and sed . If text is
quoted (using any of the shell-quoting mechanisms), the input is passed
thr ough verbatim.
Multiple redirection
Examples
%
%
%
%
%
%
%
cat part1 > book
cat part2 part3 >> book
mail tim < report
cc calc.c >& error_out
cc newcalc.c >&! error_out
grep Unix ch* |& pr
(find / -print > filelist) >& no_access
% sed ’s/ˆ/XX /g’ << "END_ARCHIVE"
This is often how a shell archive is "wrapped",
bundling text for distribution. You would normally
run sed from a shell program, not from the command line.
"END_ARCHIVE"
XX This is often how a shell archive is "wrapped",
XX bundling text for distribution. You would normally
XX run sed from a shell program, not from the command line.
Variables
This section describes the following:
•
264
18 October 2001 15:04
Variable substitution
Chapter 5 – The C Shell• Variable modifiers
• Predefined shell variables
• Example .cshrc file
• Envir onment variables
Variable Substitution
In the following substitutions, braces ( {} ) are optional, except when needed to
separate a variable name from following characters that would otherwise be a part
of it.
${var}
${var[i]}
${#var}
${#argv}
$0
${argv[n]}
$?0
$<
${n}
${argv[*]}
$*
$argv[$#argv]
${?var}
$$
The value of variable var.
Select word or words in position i of var. i can be a single
number, a range m–n, a range - n (missing m implies 1), a
range m - (missing n implies all remaining words), or *
(select all words). i can also be a variable that expands to
one of these values.
The number of words in var.
The number of arguments.
Name of the program. (Usually not set in interactive shells.)
Individual arguments on command line (positional parame-
ters). n = 1–9.
Same as ${argv[ n ]} .
All arguments on command line.
Same as $argv[*] .
The last argument.
Retur n 1 if var is set; 0 if var is not set.
Pr ocess number of current shell; useful as part of a file-
name for creating temporary files with unique names.
Retur n 1 if input filename is known; 0 if not.
Read a line from standard input.
Examples
Sort the third through last arguments (files) and save the output in a unique tem-
porary file:
sort $argv[3-] > tmp.$$
Pr ocess .cshrc commands only if the shell is interactive (i.e., the prompt variable
must be set):
if ($?prompt) then
set commands,
alias commands,
etc.
endif
Variables
18 October 2001 15:04
265Variable Modifier s
Except for $? var, $$ , $?0 , and $< , the previous variable substitutions may be fol-
lowed by one of the following modifiers. When braces are used, the modifier goes
inside them.
:r Retur n the variable’s root.
:e Retur n the variable’s extension.
:h Retur n the variable’s header.
:t Retur n the variable’s tail.
:gr Retur n all roots.
:ge Retur n all extensions.
:gh Retur n all headers.
:gt Retur n all tails.
:q Quote a wordlist variable, keeping the items separate. Useful when the vari-
able contains filename metacharacters that should not be expanded.
:x Quote a pattern, expanding it into a wordlist.
Examples using pathname modifier s
This table shows the use of pathname modifiers on the following variable:
set aa=(/progs/num.c /book/chap.ps)
Variable Portion Specification Output Result
Nor mal variable echo $aa /progs/num.c /book/chap.ps
Second
Second
Second
Second
Root root
header
tail
extension echo
echo
echo
echo
echo $aa[2]:r
$aa[2]:h
$aa[2]:t
$aa[2]:e
$aa:r /book/chap
/book
chap.ps
ps
/progs/num /book/chap.ps
Global root
Header
Global header
Tail
Global tail
Extension
Global extension echo
echo
echo
echo
echo
echo
echo $aa:gr
$aa:h
$aa:gh
$aa:t
$aa:gt
$aa:e
$aa:ge /progs/num /book/chap
/progs /book/chap.ps
/progs /book
num.c /book/chap.ps
num.c chap.ps
c /book/chap.ps
c ps
266
18 October 2001 15:04
Chapter 5 – The C ShellExamples using quoting modifier s
% set a="[a-z]*" A="[A-Z]*"
% echo "$a" "$A"
[a-z]* [A-Z]*
% echo $a $A
at cc m4 Book Doc
% echo $a:x $A
[a-z]* Book Doc
% set d=($a:q $A:q)
% echo $d
at cc m4 Book Doc
% echo $d:q
[a-z]* [A-Z]*
% echo $d[1] +++ $d[2]
at cc m4 +++ Book Doc
% echo $d[1]:q
[a-z]*
Predefined Shell Var iables
Variables can be set in one of two ways, by assigning a value:
set var=value
or by simply turning them on:
set var
In the following table, variables that accept values are shown with the equals sign
followed by the type of value they accept; the value is then described. (Note,
however, that variables such as argv , cwd , or status ar e never explicitly assigned.)
For variables that are tur ned on or off, the table describes what they do when set.
The C shell automatically sets the variables argv , cwd , home , path , prompt , shell ,
status , term , and user .
Variable Description
argv=(args)
cdpath=(dirs) List of arguments passed to current command; default is () .
List of alternate directories to search when locating arguments
for cd , popd , or pushd .
Full pathname of current directory.
Redisplay each command line before execution; same as csh -x
command.
List of filename suffixes to ignore during filename completion
(see filec ).
If set, a filename that is partially typed on the command line can
be expanded to its full name when the Escape key is pressed. If
mor e than one filename matches, type EOF to list possible com-
pletions.
cwd=dir
echo
fignore=(chars)
filec
Variables
18 October 2001 15:04
267Variable Description
hardpaths Tell dirs to display the actual pathname of any directory that is
a symbolic link.
A two-character string that sets the characters to use in history-
substitution and quick-substitution (default is !ˆ ).
Number of commands to save in history list.
Home directory of user, initialized from HOME. The  ̃ character
is shorthand for this value.
Ignor e an end-of-file (EOF ) from ter minals; pr events accidental
logout.
One or more files checked for new mail every five minutes or
(if n is supplied) every n seconds.
Don’t ring bell for ambiguous file completion (see filec ).
Don’t redir ect output to an existing file; prevents accidental
destruction of files.
Turn off filename expansion; useful in shell scripts.
Tr eat filename metacharacters as literal characters; e.g., vi ch*
cr eates new file ch* instead of printing “No match.”
Notify user of completed jobs right away, instead of waiting for
the next prompt.
List of pathnames in which to search for commands to execute.
Initialized from PATH. SVR4 default is ( . /usr/ucb /usr/bin ) .
On Solaris, the default path is ( /usr/bin . ) . However, the
standard start-up scripts then change it to ( /bin /usr/bin
/usr/ucb /etc . ) .
String that prompts for interactive input; default is % .
Number of history commands to save in  ̃/.history upon
logout; they can be accessed at the next login.
Pathname of the shell program currently in use; default is /bin/
csh .
Exit status of last command. Built-in commands retur n 0 (suc-
cess) or 1 (failure).
Name of terminal type, same as TERM.
If command execution takes more than n CPU seconds, report
user time, system time, elapsed time, and CPU percentage. Sup-
ply optional % c flags to show other data.
Login name of user, initialized from USER.
Display a command after history substitution; same as the com-
mand csh -v .
histchars=ab
history=n
home=dir
ignoreeof
mail=(n file)
nobeep
noclobber
noglob
nonomatch
notify
path=(dirs)
prompt=’str’
savehist=n
shell=file
status=n
term=ID
time=’n %c’
user=name
verbose
Example .cshrc File
# PREDEFINED VARIABLES
set path=( ̃  ̃/bin /usr/ucb /bin /usr/bin . )
set mail=(/var/mail/tom)
if ($?prompt) then
set echo
set filec
268
18 October 2001 15:04
Chapter 5 – The C Shell
# Settings for interactive useset noclobber ignoreeof
set cdpath=(/usr/lib /var/spool/uucp)
# Now I can type cd macros
# instead of cd /usr/lib/macros
set
set
set
set
fignore=.o
# Ignore object files for filec
history=100 savehist=25
prompt=’tom \!% ’
# Includes history number
time=3
# MY VARIABLES
set man1="/usr/man/man1"
set a="[a-z]*"
set A="[A-Z]*"
# Lets me do
# Lets me
# Or
cd $man1, ls $man1
do vi $a
grep string $A
# ALIASES
alias
alias
alias
alias
alias
endif
c "clear; dirs"
# Use quotes to protect ; or |
h "history | more"
j jobs -l
ls ls -sFC
# Redefine ls command
del ’mv \!*  ̃/tmp_dir’# A safe alternative to rm
Environment Var iables
Envir onment variables are assigned as follows:
setenv VAR value
By convention, environment variable names are all uppercase. You can create
your own environment variables, or you can use the following predefined envi-
ronment variables.
These environment variables have a corresponding C shell variable:
HOME
Home directory; same as home . These may be changed independently of each
other.
PA TH
Search path for commands; same as path . Changing either one updates the
value stored in the other.
TERM
Terminal type; same as term . Changing term updates TERM, but not the other
way around.
Variables
18 October 2001 15:04
269
The C shell maintains a set of envir onment variables, which are distinct from shell
variables and aren’t really part of the C shell. Shell variables are meaningful only
within the current shell, but environment variables are automatically exported,
making them available globally. For example, C shell variables are accessible only
to a particular script in which they’re defined, whereas environment variables can
be used by any shell scripts, mail utilities, or editors you might invoke.USER
User name; same as user . Changing user updates USER, but not the other way
ar ound.
Other environment variables include the following:
EXINIT
A string of ex commands similar to those found in the startup .exrc file (e.g.,
set ai ). Used by vi and ex .
LOGNAME
Another name for the USER variable.
MAIL
The file that holds mail. Used by mail programs. This is not the same as the
C shell mail variable, which only checks for new mail.
PWD
The current directory; the value is copied from cwd .
SHELL
Undefined by default; once initialized to shell , the two are identical.
Expressions
Expr essions ar e used in @ (the C shell math operator), if , and while statements to
per form arithmetic, string comparisons, file testing, etc. exit and set can also
specify expressions. Expressions are for med by combining variables and constants
with operators that resemble those in the C programming language. Operator
pr ecedence is the same as in C. It is easiest to just remember the following prece-
dence rules:
• * / %
• + -
• Group all other expressions inside () s; parentheses are requir ed if the expres-
sion contains < , < , & , or |
Operator s
Operators can be one of the following types.
Assignment operator s
Operator Description
=
+= -=
*= /= %=
&= ˆ= |=
++ Assign value.
Reassign after addition/subtraction.
Reassign after multiplication/division/remainder.
Reassign after bitwise AND/XOR/OR.
Incr ement.
270
18 October 2001 15:04
Chapter 5 – The C ShellOperator Description
-- Decr ement.
Ar ithmetic operator s
Operator Description
* / %
+ - Multiplication; integer division; modulus (remainder).
Addition; subtraction.
Bitwise and logical operator s
Operator Description
 ̃
!
<< >>
&
ˆ
|
&&
||
{ command } Binary inversion (one’s complement).
Logical negation.
Bitwise left shift; bitwise right shift.
Bitwise AND.
Bitwise exclusive OR.
Bitwise OR.
Logical AND (short-circuit).
Logical OR (short-circuit).
Retur n 1 if command is successful; 0 otherwise. Note that this is
the opposite of command ’s normal retur n code. The $status
variable may be more practical.
Compar ison operator s
Operator Description
== !=
<= >=
< >
= ̃ Equality; inequality.
Less than or equal to; greater than or equal to.
Less than; greater than.
String on left matches a filename pattern con-
taining * , ? , or [...] .
String on left does not match a filename pat-
ter n containing * , ? , or [...] .
! ̃
File inquiry operator s
Command substitution and filename expansion are per formed on file befor e the
test is perfor med.
Operator Description
-d file
-e file
-f file The file is a directory.
The file exists.
The file is a plain file.
Expr essions
18 October 2001 15:04
271Operator Description
-o file
-r file
-w file
-x file
-z file
! The user owns the file.
The user has read permission.
The user has write permission.
The user has execute permission.
The file has zero size.
Reverse the sense of any inquiry above.
Examples
The following examples show @ commands and assume n = 4.
Expr ession Value of $x
@
@
@
@
@
@ 1
0
16
1
0
1
x
x
x
x
x
x
=
=
=
=
=
=
($n > 10 || $n < 5)
($n >= 0 && $n < 3)
($n << 2)
($n >> 2)
$n % 2
$n % 3
The following examples show the first line of if or while statements.
Expr ession Meaning
while ($#argv != 0)
if ($today[1] == "Fri")
if ($file ! ̃ *.[zZ])
if ($argv[1] = ̃ chap?) While there are arguments ...
If the first word is “Fri”...
If the file doesn’t end with .z or .Z ...
If the first argument is chap followed by a single char-
acter ...
If the first argument is a plain file ...
If $tmpdir is not a directory ...
if (-f $argv[1])
if (! -d $tmpdir)
Command History
Pr eviously executed commands are stor ed in a history list. The C shell lets you
access this list so you can verify commands, repeat them, or execute modified ver-
sions of them. The history built-in command displays the history list; the prede-
fined variables histchars , history , and savehist also affect the history mechanism.
Accessing the history list involves three things:
• Making command substitutions (using ! and ˆ )
• Making argument substitutions (specific words within a command)
• Using modifiers to extract or replace parts of a command or word
272
18 October 2001 15:04
Chapter 5 – The C ShellCommand Substitution
!
!!
!N
!-N
!string
!?string?
!?string?%
!$
!!string
!N string
!{s1}s2
ˆoldˆnewˆ
Begin a history substitution
Pr evious command
Command number N in history list
N th command back from current command
Most recent command that starts with string
Most recent command that contains string
Most recent command argument that contains string
Last argument of previous command
Pr evious command, then append string
Command N, then append string
Most recent command starting with string s1, then
append string s2
Quick substitution; change string old to new in previ-
ous command; execute modified command
Command Substitution Examples
The following command is assumed:
3% vi cprogs/01.c ch002 ch03
Command Typed Command Executed
4
5
6
7
8
9
10
11
12 ˆ00ˆ0
nroff !*
nroff !$
!vi
!6
!?01
!{nr}.new
!!|lp
more !?pr?% vi cprogs/01.c ch02 ch03
nroff cprogs/01.c ch02 ch03
nroff ch03
vi cprogs/01.c ch02 ch03
nroff ch03
vi cprogs/01.c ch02 ch03
nroff ch03.new
nroff ch03.new | lp
more cprogs/01.c
Event Number
Word Substitution
Word specifiers allow you to retrieve individual words from previous command
lines. Colons may precede any word specifier. After an event number, colons are
optional unless shown here.
:0
:n
ˆ
$
:n-m
-m
Command name
Argument number n
First argument
Last argument
Arguments n thr ough m
Words 0 through m; same as :0- m
Command History
18 October 2001 15:04
273Arguments n thr ough next-to-last
Arguments n thr ough last; same as n -$
All arguments; same as ˆ-$ or 1-$
Curr ent command line up to this point; fairly useless
:n-
:n*
*
#
Word Substitution Examples
The following command is assumed:
13% cat ch01 ch02 ch03 biblio back
Event Number Command Typed
Command Executed
14
15
16
17
18 ls !13ˆ ls ch01
sort !13:*
lp !cat:3*
!cat:0-3
vi !-5:4 sort ch01 ch02 ch03 biblio back
lp ch03 biblio back
cat ch01 ch02 ch03
vi biblio
Histor y Modifier s
Command and word substitutions can be modified by one or more of these:
Pr inting, Substitution, and Quoting
:p
:s/old/new
:gs/old/new
:&
:g&
:q
:x
Display command but don’t execute.
Substitute string new for old, first instance only.
Substitute string new for old, all instances.
Repeat previous substitution ( :s or ˆ command), first
instance only.
Repeat previous substitution, all instances.
Quote a word list.
Quote separate words.
Tr uncation
:r
:gr
:e
:ge
:h
:gh
:t
:gt Extract
Extract
Extract
Extract
Extract
Extract
Extract
Extract
274 Chapter 5 – The C Shell
18 October 2001 15:04
the first available pathname
all pathname roots.
the first available pathname
all pathname extensions.
the first available pathname
all pathname headers.
the first available pathname
all pathname tails.
root.
extension.
header.
tail.Histor y Modifier Examples
Fr om the table in the section “Word Substitution Examples,” command number 17
is:
17% cat ch01 ch02 ch03
Event #
19
20
21
22
23
24
25
26
27
Command Typed Command Executed
!17:s/ch/CH/
!:g&
!more:p
cd !$:h
vi !mo:$:t
grep stdio !$
ˆstdioˆinclude stdioˆ:q
nroff !21:t:p
!! cat CH01 ch02 ch03
cat CH01 CH02 CH03
more cprogs/01.c (displayed only)
cd cprogs
vi 01.c
grep stdio 01.c
grep "include stdio" 01.c
nroff 01.c (is that want I wanted?)
nroff 01.c (execute it)
Job Control
Job control lets you place foregr ound jobs in the background, bring background
jobs to the foregr ound, or suspend (temporarily stop) running jobs. The C shell
pr ovides the following commands for job control. For more infor mation on these
commands, see “Built-in C Shell Commands,” later in this chapter.
Put a job in the background.
fg Put a job in the foregr ound.
bg
jobs
List active jobs.
kill
Terminate a job.
notify
Notify when a background job finishes.
stop
Suspend a background job.
CTRL-Z
Suspend a foregr ound job.
Many job-control commands take a jobID as an argument. This argument can be
specified as follows:
%n
Job number n
Job Control
18 October 2001 15:04
275Job whose command line starts with string s
%s
%?s Job whose command line contains string s
%% Curr ent job
% Curr ent job (same as above)
%+ Curr ent job (same as above)
%- Pr evious job
Invoking the Shell
The C shell command interpreter can be invoked as follows:
csh [options] [arguments]
csh executes commands from a terminal or a file. Options -n , -v , and -x ar e useful
when debugging scripts.
The following list details the options:
-b Allow the remaining command-line options to be interpreted as options to a
specified command, rather than as options to csh itself.
-c Tr eat the first ar gument as a string of commands to execute. Remaining argu-
ments are available via the argv array.
-e Exit if a command produces errors.
-f Fast startup; start csh without executing .cshrc or .login .
-i Invoke interactive shell (prompt for input).
-n Parse commands but do not execute.
-s Read commands from the standard input.
-t Exit after executing one command.
-v Display commands before executing them; expand history substitutions but
don’t expand other substitutions (e.g., filename, variable, and command).
Same as setting verbose .
-V Same as -v , but also display .cshrc .
-x Display commands before executing them, but expand all substitutions. Same
as setting echo . -x is often combined with -v .
-X Same as -x , but also display .cshrc .
276
18 October 2001 15:04
Chapter 5 – The C ShellBuilt-in C Shell Commands
#
#
Ignor e all text that follows on the same line. # is used in shell scripts
as the comment character and is not really a command. In addition, a
file that has # as its first character is sometimes interpreted by older
systems as a C shell script.
#!shell [ option ]
#!
Used as the first line of a script to invoke the named shell. Anything
given on the rest of the line is passed as a single argument to the
named shell. This feature is typically implemented by the kernel, but
may not be supported on some older systems. Some systems have a
limit of around 32 characters on the maximum length of shell. For
example:
#!/bin/csh -f
:
:
Null (do-nothing) command. Returns an exit status of 0.
alias
Assign name as the shorthand name, or alias, for command. If com-
mand is omitted, print the alias for name ; if name is also omitted,
print all aliases. Aliases can be defined on the command line, but
they are mor e often stored in .cshrc so that they take effect after
login. (See the section “Example .cshrc File” earlier in this chapter.)
Alias definitions can refer ence command-line arguments, much like
the history list. Use \!* to refer to all command-line arguments, \!ˆ
for the first argument, \!$ for the last, etc. An alias name can be any
valid Unix command; however, you lose the original command’s
meaning unless you type \name. See also unalias.
→
Built-in C Shell Commands — alias
18 October 2001 15:04
277
alias [ name [ command ]]alias
Examples
←
Set the size for xterm windows under the X Window System:
alias R ’set noglob; eval ‘resize‘; unset noglob’
Show aliases that contain the string ls :
alias | grep ls
Run nroff on all command-line arguments:
alias ms ’nroff -ms \!*’
Copy the file that is named as the first argument:
alias back ’cp \!ˆ \!ˆ.old’
Use the regular ls , not its alias:
% \ls
bg
bg [ jobIDs ]
Put the current job or the jobIDs in the background. See the earlier
section “Job Control.”
Example
To place a time-consuming process in the background, you might
begin with:
4% nroff -ms report | col > report.txt
CTRL-Z
and then issue any one of the following:
5%
5%
5%
5%
5%
break
bg
bg %
bg %1
bg %nr
% &
Curr ent job
Job number 1
Match initial string nrof f
break
Resume execution following the end command of the nearest enclos-
ing while or foreach .
breaksw
breaksw
Br eak fr om a switch ; continue execution after the endsw .
278
18 October 2001 15:04
Chapter 5 – The C Shellcase
case pattern :
Identify a patter n in a switch .
cd [ dir ]
cd
Change working directory to dir ; default is home directory of user. If
dir is a relative pathname but is not in the current directory, the
cdpath variable is searched. See the section “Example .cshrc File” ear-
lier in this chapter.
chdir [ dir ]
chdir
Same as cd . Useful if you are redefining cd as an alias.
continue
continue
Resume execution of nearest enclosing while or foreach .
default
default:
Label the default case (typically last) in a switch .
dir s
Print the directory stack, showing the current directory first; use -l to
expand the home directory symbol (  ̃ ) to the actual directory name.
See also popd and pushd.
echo [ -n ] string
echo
Write string to standard output; if -n is specified, the output is not
ter minated by a newline. Unlike the Unix version ( /bin/echo ) and the
Bour ne shell version, the C shell’s echo doesn’t support escape char-
acters. See also echo in Chapter 2 and Chapter 4, The Bourne Shell
and Korn Shell.
end
end
Reserved word that ends a foreach or while statement.
Built-in C Shell Commands — end
18 October 2001 15:04
279
dirs [ -l ]endif
endif
Reserved word that ends an if statement.
endsw
endsw
Reserved word that ends a switch statement.
eval
eval args
Typically, eval is used in shell scripts, and ar gs is a line of code that
contains shell variables. eval forces variable expansion to happen
first and then runs the resulting command. This “double-scanning” is
useful any time shell variables contain input/output redir ection sym-
bols, aliases, or other shell variables. (For example, redir ection nor-
mally happens before variable expansion, so a variable containing
redir ection symbols must be expanded first using eval ; otherwise, the
redir ection symbols remain uninterpreted.) A Bourne shell example
can be found under eval in Chapter 4. Other uses of eval ar e shown
next.
Examples
The following lines can be placed in the .login file to set up terminal
characteristics:
set noglob
eval ‘tset -s xterm‘
unset noglob
The following commands show the effect of eval :
% set b=’$a’
% set a=hello
% echo $b
$a
% eval echo $b
hello
ex ec
Read the command line once
Read the command line twice
exec command
Execute command in place of current shell. This terminates the cur-
rent shell, rather than creating a new process under it.
exit
exit [ (expr) ]
Exit a shell script with the status given by expr. A status of 0 means
success; nonzero means failure. If expr is not specified, the exit value
280
18 October 2001 15:04
Chapter 5 – The C Shellis that of the status variable. exit can be issued at the command line
to close a window (log out).
exit
fg [ jobIDs ]
fg
Bring the current job or the jobIDs to the foregr ound. See also the
section “Job Control” earlier in this chapter.
Example
If you suspend a vi editing session (by pressing CTRL-Z ), you might
resume vi using any of these commands:
8%
8%
8%
8%
%
fg
fg %
fg %vi
Match initial string
foreach
foreach name (wordlist)
commands
end
Assign variable name to each value in wor dlist, and execute com-
mands between foreach and end . You can use foreach as a multiline
command issued at the C shell prompt (first Example), or you can
use it in a shell script (second Example).
Examples
Rename all files that begin with a capital letter:
% foreach i ([A-Z]*)
? mv $i $i.new
? end
Check whether each command-line argument is an option or not:
foreach arg ($argv)
# does it begin with - ?
if ("$arg" = ̃ -*) then
echo "Argument is an option"
else
echo "Argument is a filename"
endif
end
glob
glob wordlist
Do filename, variable, and history substitutions on wor dlist. This
expands it much like echo , except that no \ escapes are recognized,
and words are delimited by null characters. glob is typically used in
→
Built-in C Shell Commands — glob
18 October 2001 15:04
281glob ← shell scripts to “hardcode” a value so that it remains the same for the
rest of the script.
goto goto string
Skip to a line whose first nonblank character is string followed by a
: , and continue execution below that line. On the goto line, string
can be a variable or filename pattern, but the label branched to must
be a literal, expanded value and must not occur within a foreach or
while .
hashstat
hashstat
Display statistics that show the hash table’s level of success at locat-
ing commands via the path variable.
histor y
history [ options ]
Display the list of history events. (History syntax is discussed earlier
in the section “Command History.”)
Note: multiline compound commands such as foreach ... end ar e
not saved in the history list.
Options
-h Print history list without event numbers.
-r Print in reverse order; show oldest commands last.
n Display only the last n history commands, instead of the number
set by the history shell variable.
Example
To save and execute the last five commands:
history -h 5 > do_it
source do_it
if
if
Begin a conditional statement. The simple format is:
if (expr) cmd
282
18 October 2001 15:04
Chapter 5 – The C ShellTher e ar e thr ee other possible formats, shown side-by-side:
if (expr) then
cmds
endif
if (expr) then
cmds1
else
cmds2
endif
if
if (expr) then
cmds1
else if (expr) then
cmds2
else
cmds3
endif
In the simplest form, execute cmd if expr is true; otherwise, do noth-
ing (redir ection still occurs; this is a bug). In the other forms, execute
one or more commands. If expr is true, continue with the commands
after then ; if expr is false, branch to the commands after else (or after
the else if and continue checking). For more examples, see the ear-
lier section “Expressions,” or shift or while.
Example
Take a default action if no command-line arguments are given:
if ($#argv == 0) then
echo "No filename given. Sending to Report."
set outfile = Report
else
set outfile = $argv[1]
endif
jobs
List all running or stopped jobs; -l includes process IDs. For exam-
ple, you can check whether a long compilation or text format is still
running. Also useful before logging out.
kill [ options ] ID
kill
Terminate each specified process ID or job ID. You must own the
pr ocess or be a privileged user. This built-in is similar to /usr/bin/
kill described in Chapter 2 but also allows symbolic job names.
Stubbor n pr ocesses can be killed using signal 9. See also the earlier
section “Job Control.”
→
Built-in C Shell Commands — kill
18 October 2001 15:04
283
jobs [ -l ]kill
←
Options
-l
List the signal names. (Used by itself.)
-signal
The signal number (from /usr/include/sys/signal.h ) or name
(fr om kill -l ). With a signal number of 9, the kill is absolute.
Signals
Signals are defined in /usr/include/sys/signal.h and are listed here
without the SIG pr efix. You probably have more signals on your sys-
tem than the ones shown here.
HUP
INT
QUIT
ILL
TRAP
IOT
EMT
FPE
KILL
BUS
SEGV
SYS
PIPE
ALRM
TERM
USR1
USR2
CLD
PWR
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
hangup
interrupt
quit
illegal instruction
trace trap
IOT instruction
EMT instruction
floating point exception
kill
bus error
segmentation violation
bad argument to system call
write to pipe, but no process to read it
alarm clock
software termination (the default signal)
user-defined signal 1
user-defined signal 2
child process died
restart after power failure
Examples
If you’ve issued the following command:
44% nroff -ms report > report.txt &
[1] 19536
csh prints job and process IDs
you can terminate it in any of the following ways:
45%
45%
45%
45%
45%
limit
kill
kill
kill
kill
kill
19536
%
%1
%nr
%?report
Pr ocess ID
Curr ent job
Job number 1
Initial string
Matching string
limit [ -h ] [ resource [ limit ]]
Display limits or set a limit on resources used by the current process
and by each process it creates. If no limit is given, the current limit is
printed for resour ce. If resour ce is also omitted, all limits are printed.
By default, the current limits are shown or set; with -h , hard limits
284
18 October 2001 15:04
Chapter 5 – The C Shellar e used. A hard limit imposes an absolute limit that can’t be
exceeded. Only a privileged user may raise it. See also unlimit.
limit
Resour ce
cputime
Maximum number of seconds the CPU can spend; can be abbre-
viated as cpu
filesize
Maximum size of any one file
datasize
Maximum size of data (including stack)
stacksize
Maximum size of stack
coredumpsize
Maximum size of a core dump file
Limit
A number followed by an optional character (a unit specifier).
For cputime :
For others:
n h (for n hours),
n m (for n minutes),
mm :ss (minutes and seconds).
n k (for n kilobytes, the default),
n m (for n megabytes).
login [ user | -p ]
log in
Replace user’s login shell with /bin/login . -p pr eserves envir onment
variables.
logout
logout
Terminate the login shell.
nice [ ±n ] command
nice
Change the execution priority for command, or, if none is given,
change priority for the current shell. (See also nice in Chapter 2.) The
priority range is −20 to 20, with a default of 4. The range is back-
wards from what you might expect: −20 gives the highest priority
(fastest execution); 20 gives the lowest.
→
Built-in C Shell Commands — nice
18 October 2001 15:04
285nice
←
nohup
+n Add n to the priority value (lower job priority).
-n Subtract n fr om the priority value (raise job priority). Privileged
users only.
nohup [ command ]
“No hangup signals.” Do not terminate command after terminal line
is closed (i.e., when you hang up from a phone or log out). Use
without command in shell scripts to keep script from being termi-
nated. (See also nohup in Chapter 2.)
notify
notify [ jobID ]
Report immediately when a background job finishes (instead of wait-
ing for you to exit a long editing session, for example). If no jobID is
given, the current background job is assumed.
onintr
onintr label
onintr -
onintr
“On interrupt.” Used in shell scripts to handle interrupt signals (simi-
lar to the Bourne shell’s trap 2 and trap "" 2 commands). The first
for m is like a goto label. The script branches to label : if it catches an
interrupt signal (e.g., CTRL-C ). The second form lets the script ignore
interrupts. This is useful at the beginning of a script or before any
code segment that needs to run unhindered (e.g., when moving
files). The third form restor es interrupt handling that was previously
disabled with onintr - .
Example
onintr cleanup
.
.
.
cleanup:
onintr -
rm -f $tmpfiles
exit 2
popd
Go to “cleanup” on interrupt
Shell script commands
Label for interrupts
Ignor e additional interrupts
Remove any files created
Exit with an error status
popd [ +n ]
Remove the current entry from the directory stack or remove the n th
entry from the stack. The current entry has number 0 and appears on
the left. See also dir s and pushd.
286
18 October 2001 15:04
Chapter 5 – The C Shellpushd
pushd name
pushd +n
pushd
The first form changes the working directory to name and adds it to
the directory stack. The second form rotates the n th entry to the
beginning, making it the working directory. (Entry numbers begin at
0.) With no arguments, pushd switches the first two entries and
changes to the new current directory. See also dir s and popd.
Examples
5% dirs
/home/bob /usr
6% pushd /etc
/etc /home/bob /usr
7% pushd +2
/usr /etc /home/bob
8% pushd
/etc /usr /home/bob
9% popd
/usr /home/bob
Add /etc to directory stack
Switch to third dir ectory
Switch top two directories
Discar d curr ent entry; go to next
rehash
rehash
Recompute the hash table for the path variable. Use rehash whenever
a new command is created during the current session. This allows
the shell to locate and execute the command. (If the new command
resides in a directory not listed in path , add this directory to path
befor e rehashing.) See also unhash.
repeat
repeat n command
Execute n instances of command.
Examples
Generate a test file for a program by saving 25 copies of /usr/dict/
words in a file:
% repeat 25 cat /usr/dict/words > test_file
Read 10 lines from the terminal and store in item_list :
% repeat 10 line > item_list
Append 50 boilerplate files to report :
% repeat 50 cat template >> report
Built-in C Shell Commands — repeat
18 October 2001 15:04
287set
set variable = value
set variable[n] = value
set
Set variable to value, or, if multiple values are specified, set the vari-
able to the list of words in the value list. If an index n is specified,
set the n th word in the variable to value. (The variable must already
contain at least that number of words.) With no arguments, display
the names and values of all set variables. See also the section “Prede-
fined Shell Variables” earlier in this chapter.
Examples
%
%
%
%
%
setenv
set
set
set
set
set
list=(yes no maybe)
list[3]=maybe
quote="Make my day"
x=5 y=10 history=100
blank
Assign a word list
Assign an item in existing word list
Assign a variable
Assign several variables
Assign a null value to blank
setenv [ name [ value ]]
Assign a value to an environment variable name. By convention,
name should be uppercase. value can be a single word or a quoted
string. If no value is given, the null value is assigned. With no argu-
ments, display the names and values of all environment variables.
setenv is not necessary for the USER, TERM, and PATH variables
because they are automatically exported from user , term , and path .
See also the earlier section “Environment Variables.”
shift
shift [ variable ]
If variable is given, shift the words in a word list variable; i.e.,
name [2] becomes name [1] . With no argument, shift the positional
parameters (command-line arguments); i.e., $2 becomes $1 . shift is
typically used in a while loop. See additional Example under while.
Example
while ($#argv)
While there are arguments
if (-f $argv[1])
wc -l $argv[1]
else
echo "$argv[1] is not a regular file"
endif
shift
Get the next argument
end
288
18 October 2001 15:04
Chapter 5 – The C Shellsource [ -h ] script
source
Read and execute commands from a C shell script. With -h , the com-
mands are added to the history list but aren’t executed.
Example
source  ̃/.cshrc
stop [ jobIDs ]
stop
Suspend the current background job or the background job specified
by jobIDs; this is the complement of CTRL-Z or suspend .
suspend
suspend
Suspend the current foregr ound job; similar to CTRL-Z . Often used to
stop an su command.
switch
switch
switch (string)
case pattern1:
commands
breaksw
case pattern2:
commands
breaksw
case pattern3:
commands
breaksw
.
.
.
default:
commands
Pr ocess commands depending on the value of a variable. When you
need to handle more than three choices, switch is a useful alternative
to an if-then-else statement. If the string variable matches patter n1,
the first set of commands is executed; if string matches patter n2, the
second set of commands is executed; and so on. If no patterns
match, execute commands under the default case. string can be
specified using command substitution, variable substitution, or file-
name expansion. Patterns can be specified using pattern-matching
symbols * , ? , and [ ] . breaksw exits the switch after commands ar e
executed. If breaksw is omitted (which is rarely done), the switch
continues to execute another set of commands until it reaches a
breaksw or endsw . Her e is the general syntax of switch , side-by-side
with an example that processes the first command-line argument.
switch ($argv[1])
case -[nN]:
nroff $file | lp
breaksw
case -[Pp]:
pr $file | lp
breaksw
case -[Mm]:
more $file
breaksw
case -[Ss]:
sort $file
breaksw
default:
echo "Error-no such option"
→
Built-in C Shell Commands — switch
18 October 2001 15:04
289switch
←
breaksw
endsw
time
exit 1
breaksw
endsw
time [ command ]
Execute a command and show how much time it uses. With no argu-
ment, time can be used in a shell script to time it.
umask
umask [ nnn ]
Display file-creation mask or set file creation mask to octal nnn. The
file-cr eation mask determines which permission bits are tur ned of f.
See the entry in Chapter 2 for examples.
unalias
unalias name
Remove name fr om the alias list. See alias for more infor mation.
unhash
unhash
Remove internal hash table. The C shell stops using hashed values
and spends time searching the path dir ectories to locate a command.
See also rehash.
unlimit
unlimit [ resource ]
Remove the allocation limits on resour ce. If resour ce is not specified,
remove limits for all resources. See limit for more infor mation.
unset
unset variables
Remove one or more variables. Variable names may be specified as a
patter n, using filename metacharacters. See set.
unsetenv
unsetenv variable
Remove an environment variable. Filename matching is not valid. See
setenv.
290
18 October 2001 15:04
Chapter 5 – The C Shellwait
wait
Pause in execution until all background jobs complete, or until an
interrupt signal is received.
while
while (expression)
commands
end
As long as expr ession is true (evaluates to nonzero), evaluate com-
mands between while and end . break and continue can terminate or
continue the loop. See also the Example under shift.
Example
set user = (alice bob carol ted)
while ($argv[1] != $user[1])
Cycle through each user, checking for a match
shift user
If we cycled through with no match...
if ($#user == 0) then
echo "$argv[1] is not on the list of users"
exit 1
endif
end
Assign the value of the arithmetic expr ession to variable, or to the
n th element of variable if the index n is specified. With no variable
or expr ession specified, print the values of all shell variables (same as
set ). Expression operators as well as examples are listed in the ear-
lier section “Expressions.” Two special forms are also valid:
@ variable ++
Incr ement variable by one.
@ variable --
Decr ement variable by one.
Built-in C Shell Commands
18 October 2001 15:04
291
@
@ variable = expression
@ variable[n] = expression
@18 October 2001 15:04PART II
Te xt Editing and Processing
Part II summarizes the command set for the text editors and related utilities in
Unix. Chapter 6 reviews pattern matching, an important aspect of text editing.
• Chapter 6, Patter n Matching
• Chapter 1, The Emacs Editor
• Chapter 8, The vi Editor
• Chapter 9, The ex Editor
• Chapter 10, The sed Editor
• Chapter 11, The awk Programming Language
18 October 2001 15:3818 October 2001 15:38CHAPTER 6
Patter n Matching
A number of Unix text-processing utilities let you search for, and in some cases
change, text patterns rather than fixed strings. These utilities include the editing
pr ograms ed , ex , vi , and sed , the awk pr ogramming language, and the commands
grep and egrep . Text patterns (formally called regular expressions) contain normal
characters mixed with special characters (called metacharacters).
This chapter presents the following topics:
Filenames versus patterns
• List of metacharacters available to each program
• Description of metacharacters
• Examples
For more infor mation on regular expressions, see Mastering Regular Expressions,
listed in the Bibliography.
Filenames Ver sus Patter ns
Metacharacters used in pattern matching are dif ferent from metacharacters used for
filename expansion (see Chapter 4, The Bourne Shell and Korn Shell, and Chapter
5, The C Shell). When you issue a command on the command line, special charac-
ters are seen first by the shell, then by the program; therefor e, unquoted metachar-
acters are interpr eted by the shell for filename expansion. The command:
$ grep [A-Z]* chap[12]
could, for example, be transformed by the shell into:
$ grep Array.c Bug.c Comp.c chap1 chap2
295
18 October 2001 15:06
tt
Ma
•and would then try to find the pattern Array.c in files Bug.c , Comp.c , chap1 , and
chap2 . To bypass the shell and pass the special characters to grep , use quotes:
$ grep "[A-Z]*" chap[12]
Double quotes suffice in most cases, but single quotes are the safest bet.
Note also that in pattern matching, ? matches zero or one instance of a regular
expr ession; in filename expansion, ? matches a single character.
Metacharacter s, Listed by Unix Prog ram
Some metacharacters are valid for one program but not for another. Those that are
available to a Unix program are marked by a bullet (•) in Table 6-1. Items marked
with a “P” are specified by POSIX; double-check your system’s version. (On
Solaris, the versions in /usr/xpg4/bin accept these items.) Full descriptions are
pr ovided after the table.
Table 6−1: Unix Metacharacters
Symbol ed ex vi sed awk grep egrep Action
. • • • • • • • Match any character.
* • • • • • • • Match zero or mor e
pr eceding.
ˆ • • • • • • • Match beginning of
line/string.
$ • • • • • • • Match end of line/
string.
\ • • • • • • • Escape following
character.
• • • [ ] • • • • \( \) • • • • • Stor e patter n for later
replay. a
\n • • • • • Replay subpattern in
match.
•P
{ }
\{ \} •
\< \> •
•
•
•P
•
Match one from a set.
Match a range of
instances.
Match a range of
instances.
•
Match word’s
beginning or end.
+ • • Match one or more
pr eceding.
? • • Match zero or one
pr eceding.
296
18 October 2001 15:06
Chapter 6 – Patter n MatchingTable 6−1: Unix Metacharacters (continued)
Symbol
ed
ex
vi
sed
awk
grep
egrep Action
| • • Separate choices to
match.
( ) • • Gr oup expr essions to
match.
a
Stor ed subpatter ns can be “replayed” during matching. See Table 6-2.
Note that in ed , ex , vi , and sed , you specify both a search pattern (on the left) and
a replacement pattern (on the right). The metacharacters in Table 6-1 are meaning-
ful only in a search pattern.
In ed , ex , vi , and sed , the metacharacters in Table 6-2 are valid only in a replace-
ment pattern.
Table 6−2: Metacharacters in Replacement Patterns
Symbol ex vi sed ed Action
\ • • • • Escape following character.
\n • • • • Text matching pattern stor ed in \( \) .
& • • • • Text matching search pattern.
 ̃ • •
Reuse previous replacement pattern.
•
%
Reuse previous replacement pattern.
\u \U • • Change character(s) to uppercase.
\l \L • • Change character(s) to lowercase.
\E • • Tur n of f pr evious \U or \L .
\e • • Tur n of f pr evious \u or \l .
tt
Ma
Metacharacter s
Sear ch Patter ns
The characters in the following table have special meaning only in search patterns.
Character
.
Pattern
Match any single character except newline. Can match newline in
awk .
*
ˆ
Match any number (or none) of the single character that immedi-
ately precedes it. The preceding character can also be a regular
expr ession; e.g., since . (dot) means any character, .* means
“match any number of any character.”
Match the following regular expression at the beginning of the line
or string.
Metacharacters
18 October 2001 15:06
297Character Pattern
$ Match the preceding regular expression at the end of the line or
string.
Match any one of the enclosed characters.
A hyphen ( - ) indicates a range of consecutive characters. A circum-
flex ( ˆ ) as the first character in the brackets reverses the sense: it
matches any one character not in the list. A hyphen or close bracket
( ] ) as the first character is treated as a member of the list. All other
metacharacters are treated as members of the list (i.e., literally).
Match a range of occurrences of the single character that immedi-
ately precedes it. The preceding character can also be a metachar-
acter. {n} matches exactly n occurr ences, {n,} matches at least n
occurr ences, and {n,m} matches any number of occurrences
between n and m. n and m must be between 0 and 255, inclusive.
Just like {n,m} , above, but with backslashes in front of the braces.
Turn off the special meaning of the character that follows.
Save the pattern enclosed between \( and \) into a special holding
space. Up to nine patterns can be saved on a single line. The text
matched by the subpatterns can be “replayed” in substitutions by
the escape sequences \1 to \9 .
Replay the n th subpattern enclosed in \( and \) into the pattern at
this point. n is a number from 1 to 9, with 1 starting on the left. See
the following Examples.
Match characters at beginning ( \< ) or end ( \> ) of a word.
Match one or more instances of preceding regular expression.
Match zero or one instances of preceding regular expression.
Match the regular expression specified before or after.
Apply a match to the enclosed group of regular expressions.
[ ]
{n,m}
\{n,m\}
\
\( \)
\n
\< \>
+
?
|
( )
Many Unix systems allow the use of POSIX “character classes” within the square
brackets that enclose a group of characters. These classes, listed here, are typed
enclosed in [: and :] . For example, [[:alnum:]] matches a single alphanumeric
character.
Class Characters Matched
alnum
alpha
blank
cntrl
digit
graph
lower
print
space
upper
xdigit Alphanumeric characters
Alphabetic characters
Space or tab
Contr ol characters
Decimal digits
Nonspace characters
Lowercase characters
Printable characters
Whitespace characters
Uppercase characters
Hexadecimal digits
298
18 October 2001 15:06
Chapter 6 – Patter n MatchingReplacement Patter ns
The characters in this table have special meaning only in replacement patterns.
Character Pattern
\
\n Turn off the special meaning of the character that follows.
Restor e the text matched by the n th pattern previously saved by \(
and \) . n is a number from 1 to 9, with 1 starting on the left.
Reuse the text matched by the search pattern as part of the replace-
ment pattern.
Reuse the previous replacement pattern in the current replacement
patter n. Must be the only character in the replacement pattern. ( ex
and vi )
Reuse the previous replacement pattern in the current replacement
patter n. Must be the only character in the replacement pattern. ( ed )
Convert first character of replacement pattern to uppercase.
Convert entire replacement pattern to uppercase.
Convert first character of replacement pattern to lowercase.
Convert entire replacement pattern to lowercase.
Turn off previous \u , \U , \l , and \L .
&
 ̃
%
\u
\U
\l
\L
\e, \E
Examples of Searching
When used with grep or egrep , regular expressions should be surrounded by
quotes. (If the pattern contains a $ , you must use single quotes; e.g., ’ patter n ’ .)
When used with ed , ex , sed , and awk , regular expressions are usually surrounded
by / , although (except for awk ) any delimiter works. The following tables show
some example patterns.
What Does It Match?
bag
ˆbag
bag$ The string bag.
bag at the beginning of the line.
bag at the end of the line.
bag as the only word on the line.
Bag or bag.
Second letter is a vowel.
Second letter is a consonant (or uppercase or symbol).
Second letter is any character.
Any line containing exactly three characters.
Any line that begins with a dot.
Same, followed by two lowercase letters (e.g., troff requests).
Same as previous; ed , grep , and sed only.
Any line that doesn’t begin with a dot.
bug, bugs, bugss, etc.
A word in quotes.
A word, with or without quotes.
ˆbag$
[Bb]ag
b[aeiou]g
b[ˆaeiou]g
b.g
ˆ...$
ˆ\.
ˆ\.[a-z][a-z]
ˆ\.[a-z]\{2\}
ˆ[ˆ.]
bugs*
"word"
"*word"*
Examples of Searching
18 October 2001 15:06
299
tt
Ma
Patter nPatter n What Does It Match?
[A-Z][A-Z]*
[A-Z]+
[[:upper:]]+
[A-Z].*
[A-Z]*
[a-zA-Z]
[ˆ0-9A-Za-z]
[ˆ[:alnum:]] One or more uppercase letters.
Same; egrep or awk only.
Same; POSIX egrep or awk .
An uppercase letter, followed by zero or mor e characters.
Zer o or more uppercase letters.
Any letter.
Any symbol or space (not a letter or a number).
Same, using POSIX character class.
egr ep or awk Pattern What Does It Match?
[567]
five|six|seven
80[2-4]?86
80[2-4]?86|(Pentium(-II)?) One of the numbers 5, 6, or 7.
One of the words five, six, or seven.
8086, 80286, 80386, or 80486.
8086, 80286, 80386, 80486, Pen-
tium, or Pentium-II.
company or companies.
compan(y|ies)
ex or vi Pattern What Does It Match?
\<the
the\>
\<the\> Words like theater or the.
Words like br eathe or the.
The word the.
ed, sed or grep Pattern What Does It Match?
0\{5,\}
[0-9]\{3\}-[0-9]\{2\}-[0-9]\{4\} Five or more zer os in a row.
U.S. Social Security number (nnn-
nn-nnnn).
A line with two occurrences of why.
C/C++ simple assignment state-
ments.
\(why\).*\1
\([[:alpha:]_][[:alnum:]_.]*\) = \1;
Examples of Searching and Replacing
The examples in Table 6-3 show the metacharacters available to sed or ex . Note
that ex commands begin with a colon. A space is marked by a ; a tab is marked
by a ➟.
Table 6−3: Sear ching and Replacing
Command Result
s/.*/( & )/ Redo the entire line, but add parentheses.
s/.*/mv & &.old/ Change a wordlist (one word per line) into mv
commands.
/ˆ$/d Delete blank lines.
300
18 October 2001 15:06
Chapter 6 – Patter n MatchingTable 6−3: Sear ching and Replacing (continued)
Command Result
:g/ˆ$/d Same as previous, in ex editor.
/ˆ[ ➟ ]*$/d Delete blank lines, plus lines containing only spaces or
tabs.
:g/ˆ[ ➟ ]*$/d Same as previous, in ex editor.
s/ */ /g Turn one or more spaces into one space.
:%s/ */ /g Same as previous, in ex editor.
:s/[0-9]/Item &:/ Turn a number into an item label (on the current line).
:s Repeat the substitution on the first occurrence.
:& Same as previous.
:sg Same, but for all occurrences on the line.
:&g Same as previous.
:%&g Repeat the substitution globally (i.e., on all lines).
:.,$s/Fortran/\U&/g On current line to last line, change word to uppercase.
:%s/.*/\L&/ Lowercase entire file.
:s/\<./\u&/g Uppercase first letter of each word on current line.
(Useful for titles.)
:%s/yes/No/g Globally change a word to No.
:%s/Yes/ ̃/g Globally change a differ ent word to No (pr evious
replacement).
Finally, some sed examples for transposing words. A simple transposition of two
words might look like this:
s/die or do/do or die/
Transpose words
s/\([Dd]ie\) or \([Dd]o\)/\2 or \1/
Transpose, using hold buffers
Examples of Searching
18 October 2001 15:06
301
tt
Ma
The real trick is to use hold buffers to transpose variable patterns. For example:CHAPTER 7
The Emacs Editor
This chapter presents the following topics:
• Intr oduction
• Summary of emacs commands by group
• Summary of emacs commands by key
• Summary of emacs commands by name
For more infor mation about emacs , see Lear ning GNU Emacs, listed in the Bibliog-
raphy.
Introduction
Although emacs is not part of SVR4 or Solaris, * this text editor is found on many
Unix systems because it is a popular alternative to vi . This book documents GNU
emacs (Version 20.3), which is available from the Free Software Foundation
(http://www.gnu.or g).
To start an emacs editing session, type:
emacs [file]
On some systems, GNU emacs is invoked by typing gmacs instead of emacs .
* The Sun Workshop programming environment, available separately from Sun, does come with Xemacs,
a derivative of GNU emacs .
302
18 October 2001 15:09Notes on the Tables
emacs commands use the Control key and the Meta key (Meta is usually the Escape
key). In this chapter, the notation C- indicates that the Control key is pressed at
the same time as the character that follows. Similarly, M- indicates the use of the
Meta key. When Meta is simulated by the Escape key, it’s not necessary to keep
the Meta key pressed down while typing the next key. But if your keyboard actu-
ally has a Meta key, then it is just like Control or Shift, and you should press it
simultaneously with the other key(s).
In the command tables that follow, the first column lists the keystroke and the last
column describes it. When there is a middle column, it lists the command name.
This name is accessed by typing M-x followed by the command name. If you’re
unsur e of the name, you can type a space or a carriage retur n, and emacs lists pos-
sible completions of what you’ve typed so far.
Because emacs is such a comprehensive editor, containing literally thousands of
commands, some commands must be omitted for the sake of preserving a “quick”
refer ence. You can browse the command set by typing C-h (for help) or M-x (for
command names).
Absolutely Essential Commands
If you’re just getting started with emacs , her e’s a short list of the most important
commands:
Description
C-h Enter the online help system.
C-x C-s Save the file.
C-x C-c Exit emacs .
C-x u Undo last edit (can be repeated).
C-g Get out of current command operation.
C-p
C-n
C-f
C-b Up/down/forward/back by line or character.
C-v
M-v Forward/backward by one screen.
Keystr okes
Intr oduction
18 October 2001 15:09
303Keystr okes Description
C-s
C-r Search forward/backward for characters.
C-d
Del Delete next/previous character.
Typical Problems
A very common problem is that the Del or Backspace key on the terminal does
not delete the character before the cursor, as it should. Instead, it invokes a help
pr ompt. This problem is caused by an incompatible terminal. A fairly robust fix is
to create a file named .emacs in your home directory (or edit one that’s already
ther e) and add the following lines:
(keyboard-translate ?\C-h ?\C-?)
(keyboard-translate ?\C-\\ ?\C-h)
Now the Del or Backspace key should work, and you can invoke help by pressing
C-\ (an arbitrarily chosen key sequence).
Another problem that could happen when you are logged in from a remote termi-
nal is that C-s may cause the terminal to hang. This is caused by an old-fashioned
handshake protocol between the terminal and the system. You can restart the ter-
minal by pressing C-q, but that doesn’t help you enter commands that contain the
sequence C-s. The only solution (aside from using a more moder n dial-in proto-
col) is to create new key bindings that replace C-s.
Summar y of Commands by Group
Reminder: C- indicates the Control key; M- indicates the Meta key.
File-Handling Commands
Keystr okes Command Name Description
C-x C-f
C-x C-v find-file
find-alter nate-file C-x
C-x
C-x
C-x insert-file
save-buf fer
write-file
save-buf fers-kill-
emacs
suspend-emacs Find file and read it.
Read another file; replace the one read with C-x
C-f.
Insert file at cursor position.
Save file (may hang terminal; use C-q to restart).
Write buffer contents to file.
Exit emacs .
C-z
304
18 October 2001 15:09
i
C-s
C-w
C-c
Suspend emacs (use exit or fg to restart).
Chapter 7 – The Emacs EditorCur sor-Movement Commands
Keystr okes Command Name Description
C-f
C-b
C-p
C-n
M-f
M-b
C-a
C-e
M-a
M-e
M-{
M-}
C-v
M-v
C-x [
C-x ]
M->
M-< forward-char
backward-char
pr evious-line
next-line
forward-word
backward-word
beginning-of-line
end-of-line
backward-sentence
forward-sentence
backward-paragraph
forward-paragraph
scr oll-up
scr oll-down
backward-page
forward-page
end-of-buf fer
beginning-of-buf fer Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
Move
(none)
(none)
C-l goto-line
goto-char
recenter M-n
C-u n digit-argument
universal-argument Go to line n of file.
Go to character n of file.
Redraw screen with current line in
the center.
Repeat the next command n times.
Repeat the next command n times.
forwar d one character (right).
backwar d one character (left).
to pr evious line (up).
to next line (down).
one word forwar d.
one word backwar d.
to beginning of line.
to end of line.
backward one sentence.
forward one sentence.
backward one paragraph.
forward one paragraph.
forward one screen.
backward one screen.
backward one page.
forward one page.
to end of file.
to beginning of file.
Deletion Commands
Command Name Description
Del
C-d
M-Del
M-d
C-k
M-k
C-x Del
C-y
C-w backward-delete-char
delete-char
backward-kill-word
kill-word
kill-line
kill-sentence
backward-kill-sentence
yank
kill-r egion Delete previous character.
Delete character under cursor.
Delete previous word.
Delete the word the cursor is on.
Delete from cursor to end of line.
Delete sentence the cursor is on.
Delete previous sentence.
Restor e what you’ve deleted.
Delete a marked region (see next sec-
tion).
Summary of Commands by Group
18 October 2001 15:09
Keystr okes
305Keystr okes Command Name Description
(none) backward-kill-para-
graph
kill-paragraph Delete previous paragraph.
(none)
Delete from the cursor to the end of the
paragraph.
Paragraphs and Regions
Keystr okes Command Name Description
C-@ set-mark-command Mark the beginning (or end) of a
region.
C-Space
C-x C-p
C-x C-x C-x h
M-q
(none) (same as above)
mark-page
exchange-point-and-
mark
mark-whole-buf fer
fill-paragraph
fill-r egion M-h mark-paragraph
Mark page.
Exchange location of cursor and mark.
Mark buffer.
Refor mat paragraph.
Refor mat individual paragraphs within a
region.
Mark paragraph.
Stopping and Undoing Commands
Keystr okes Command Name Description
C-g
C-x u
(none) keyboard-quit
advertised-undo
revert-buf fer Abort current command.
Undo last edit (can be done repeatedly).
Restor e buf fer to the state it was in when the
file was last saved (or auto-saved).
Tr ansposition Commands
Keystr okes Command Name Description
C-t
M-t
C-x C-t
(none)
(none) transpose-chars
transpose-words
transpose-lines
transpose-sentences
transpose-paragraphs Transpose
Transpose
Transpose
Transpose
Transpose
306
18 October 2001 15:09
Chapter 7 – The Emacs Editor
two
two
two
two
two
letters.
words.
lines.
sentences.
paragraphs.Capitalization Commands
Keystr okes Command Name Description
M-c
M-u
M-l
M- –; M-c capitalize-word
upcase-word
downcase-word
negative-argument;
capitalize-word
negative-argument;
upcase-word
negative-argument;
downcase-word
capitalize-r egion
upcase-r egion
downcase-r egion Capitalize first letter of word.
Uppercase word.
Lowercase word.
Capitalize previous word.
M- – M-u
M- – M-l
(none)
C-x C-u
C-x C-l
Uppercase previous word.
Lowercase previous word.
Capitalize region.
Uppercase region
Lowercase region.
Word-Abbreviation Commands
Keystr okes Command Name Description
(none)
C-x a i g abbr ev-mode
inverse-add-global-
abbr ev
inverse-add-local-
abbr ev
unexpand-abbr ev
write-abbr ev-file
edit-abbr evs
list-abbr evs
kill-all-abbr evs Enter (or exit) word abbreviation mode.
Type global abbreviation, then definition.
C-x a i l
(none)
(none)
(none)
(none)
(none)
Type local abbreviation, then definition.
Undo the last word abbreviation.
Write the word abbreviation file.
Edit the word abbreviations.
View the word abbreviations.
Kill abbreviations for this session.
Buffer-Manipulation Commands
Command Name Description
C-x b
C-x C-b
C-x k
(none)
(none)
C-x s switch-to-buf fer
list-buf fers
kill-buf fer
kill-some-buf fers
rename-buf fer
save-some-buf fers Move to specified buffer.
Display buffer list.
Delete specified buffer.
Ask about deleting each buffer.
Change buffer name to specified name.
Ask whether to save each modified buffer.
Summary of Commands by Group
18 October 2001 15:09
Keystr okes
307Window Commands
Keystr okes Command Name Description
C-x 2 split-window-verti-
cally
split-window-hori-
zontally
scr oll-right
scr oll-left
other-window
delete-window
delete-other-win-
dows
delete-windows-on
enlarge-window
shrink-window
enlarge-window-
horizontally
shrink-window-hori-
zontally
scr oll-other-window
find-file-other-win-
dow
switch-to-buf fer-
other-window
find-file-other-frame
switch-to-buf fer-
other-frame
compar e-windows Divide the current window into two, one
on top of the other.
Divide the current window into two, side
by side.
Scr oll the window right.
Scr oll the window left.
Move to the other window.
Delete current window.
Delete all windows but this one.
C-x 3
C-x
C-x
C-x
C-x
C-x
>
<
o
0
1
(none)
C-x ˆ
(none)
C-x }
C-x {
M-C-v
C-x 4 f
C-x 4 b
C-x 5 f
C-x 5 b
(none)
Delete all windows on a given buffer.
Make window taller.
Make window shorter.
Make window wider.
Make window narrower.
Scr oll other window.
Find a file in the other window.
Select a buffer in the other window.
Find a file in a new frame.
Select a buffer in another frame.
Compar e two buffers; show first differ-
ence.
Special Shell Character s
Keystr okes Command Name Description
C-c C-c comint-interrupt-
subjob
comint-send-eof
comint-kill-input
backward-kill-word
comint-stop-subjob Terminate the current job.
C-c
C-c
C-c
C-c
308
18 October 2001 15:09
C-d
C-u
C-w
C-z
Chapter 7 – The Emacs Editor
End of file character.
Erase current line.
Erase the previous word.
Suspend the current job.Indentation Commands
Keystr okes Command Name Description
C-x . set-fill-pr efix (none) indented-text-mode (none) text-mode M-C-\ indent-r egion M-m
M-C-o back-to-indentation
split-line (none) fill-individual-para-
graphs Use characters from the beginning of the
line up to the cursor column as the “fill
pr efix.” This prefix is prepended to each
line in the paragraph. Cancel the prefix by
typing this command in column 1.
Major mode: each tab defines a new
indent for subsequent lines.
Exit indented text mode; retur n to text
mode.
Indent a region to match first line in
region.
Move cursor to first character on line.
Split line at cursor; indent to column of
cursor.
Refor mat indented paragraphs, keeping
indentation.
Center ing Commands
Keystr okes Command Name Description
M-s
(none)
(none) center-line
center-paragraph
center-r egion Center line that cursor is on.
Center paragraph that cursor is on.
Center currently defined region.
Macro Commands
Command Name Description
C-x (
C-x )
C-x e
M-n C-x e start-kbd-macr o
end-kbd-macr o
call-last-kbd-macr o
digit-argument and
call-last-kbd-macr o
universal-argument
and start-kbd-macro
name-last-kbd-
macr o
insert-keyboard-
macr o
load-file
macr oname
kbd-macr o-query
(none)
exit-r ecursive-edit Start macro definition.
End macro definition.
Execute last macro defined.
Execute last macro defined n times.
C-u C-x (
(none)
(none)
(none)
(none)
C-x q
C-u C-x q
M-C-c
Execute last macro defined, then add
keystr okes.
Name last macro you created (before saving
it).
Insert the macro you named into a file.
Load macro files you’ve saved.
Execute a keyboard macro you’ve saved.
Insert a query in a macro definition.
Insert a recursive edit in a macro definition.
Exit a recursive edit.
Summary of Commands by Group
18 October 2001 15:09
309
Keystr okesBasic Indentation Commands
Keystr okes Command Name Description
M-C-\
M-m
M-ˆ indent-r egion
back-to-indentation
delete-indentation Indent a region to match first line in region.
Move to first non-blank character on line.
Join this line to the previous one.
Detail Infor mation Help Commands
Keystr okes Command Name Description
C-h a
(none) command-apr opos
apr opos C-h c describe-key-briefly C-h b describe-bindings C-h k describe-key C-h
C-h
C-h
C-h view-lossage
wher e-is
describe-function
describe-variable What commands involve this concept?
What functions and variables involve this
concept?
What command does this keystroke
sequence run?
What are all the key bindings for this
buf fer?
What command does this keystroke
sequence run, and what does it do?
What are the last 100 characters I typed?
What is the key binding for this command?
What does this function do?
What does this variable mean, and what is
its value?
Tell me about the mode the current buffer
is in.
What is the syntax table for this buffer?
l
w
f
v
C-h m describe-mode
C-h s describe-syntax
Help Commands
Keystr okes Command Name Description
C-h
C-h
C-h
C-h
C-h help-with-tutorial
info
view-emacs-news
describe-copying
describe-distribution Run the emacs tutorial.
Start the Info documentation reader.
View news about updates to emacs .
View the emacs General Public License.
View information on ordering emacs fr om
the FSF.
View the (non-)warranty for emacs .
t
i
n
C-c
C-d
C-h C-w
310
18 October 2001 15:09
describe-no-war-
ranty
Chapter 7 – The Emacs EditorSummar y of Commands by Key
Emacs commands are presented below in two alphabetical lists. Reminder: C- indi-
cates the Control key; M- indicates the Meta key.
Control-Key Sequences
Keystr okes Command Name Description
C-@
C-Space
C-]
C-a
C-b
C-c C-c Mark the beginning (or end) of a region.
C-c C-d
C-c C-u
C-c C-w
C-c C-z
C-d
C-e
C-f
C-g
C-h
C-h a
C-h b set-mark-command
(same as previous)
(none)
beginning-of-line
backward-char
comint-interrupt-
subjob
comint-send-eof
comint-kill-input
backward-kill-word
comint-stop-subjob
delete-char
end-of-line
forward-char
keyboard-quit
help-command
command-apr opos
describe-bindings C-h C-c
C-h C-d describe-copying
describe-distribution C-h C-w C-h c describe-no-war-
ranty
describe-key-briefly C-h f
C-h i
C-h k describe-function
info
describe-key C-h l
C-h m view-lossage
describe-mode C-h
C-h
C-h
C-h view-emacs-news
describe-syntax
help-with-tutorial
describe-variable
End-of-file character.
Erase current line.
Erase the previous word.
Suspend the current job.
Delete character under cursor.
Move to end of line.
Move forwar d one character (right).
Abort current command.
Enter the online help system.
What commands involve this concept?
What are all the key bindings for this
buf fer?
View the emacs General Public License.
View information on ordering emacs fr om
FSF.
View the (non-)warranty for emacs .
What command does this keystroke
sequence run?
What does this function do?
Start the Info documentation reader.
What command does this keystroke
sequence run, and what does it do?
What are the last 100 characters I typed?
Tell me about the mode the current buffer
is in.
View news about updates to emacs .
What is the syntax table for this buffer?
Run the emacs tutorial.
What does this variable mean, and what is
its value?
Summary of Commands by Key
18 October 2001 15:09
311
n
s
t
v
Exit recursive edit and exit query-replace.
Move to beginning of line.
Move backwar d one character (left).
Terminate the current job.Keystr okes Command Name Description
C-h w
C-k
C-l wher e-is
kill-line
recenter C-n
C-p
C-r Meta
C-r
C-r
C-r
C-s Meta
C-s
C-s
C-t
C-u n
C-u C-x ( next-line
pr evious-line
(none)
(none)
(none)
isearch-backward
(none)
(none)
isearch-forward
transpose-chars
universal-argument
universal-argument
and start-kbd-macro
(none)
scr oll-up
kill-r egion
start-kbd-macr o
end-kbd-macr o
backward-page
forward-page
enlarge-window
shrink-window-hori-
zontally
enlarge-window-
horizontally
scr oll-left
scr oll-right
set-fill-pr efix What is the key binding for this command?
Delete from cursor to end of line.
Redraw screen with current line in the cen-
ter.
Move to next line (down).
Move to pr evious line (up).
Start nonincremental search backwards.
Repeat nonincremental search backward.
Enter recursive edit (during query replace).
Start incremental search backward.
Start nonincremental search forward.
Repeat nonincremental search forward.
Start incremental search forward.
Transpose two letters.
Repeat the next command n times.
Execute last macro defined, then add
keystr okes.
Insert recursive edit in a macro definition.
Move forward one screen.
Delete a marked region.
Start macro definition.
End macro definition.
Move backward one page.
Move forward one page.
Make window taller.
Make window narrower.
C-u C-x q
C-v
C-w
C-x (
C-x )
C-x [
C-x ]
C-x ˆ
C-x {
C-x }
C-x <
C-x >
C-x .
C-x 0
C-x 1
C-x 2
C-x 3
C-x 4 b
312
18 October 2001 15:09
delete-window
delete-other-win-
dows
split-window-verti-
cally
split-window-hori-
zontally
switch-to-buf fer-
other-window
Chapter 7 – The Emacs Editor
Make window wider.
Scr oll the window left.
Scr oll the window right.
Use characters from the beginning of the
line up to the cursor column as the “fill pre-
fix.” This prefix is prepended to each line in
the paragraph. Cancel the prefix by typing
this command in column 1.
Delete current window.
Delete all windows but this one.
Divide the current window into two, one
on top of the other.
Divide the current window into two, side
by side.
Select a buffer in the other window.Keystr okes Command Name Description
C-x 4 f find-file-other-win-
dow
switch-to-buf fer-
other-frame
find-file-other-frame
list-buf fers
save-buf fers-kill-
emacs
find-file
downcase-r egion
mark-page
(none)
save-buf fer Find a file in the other window.
C-x 5 b
C-x 5 f
C-x C-b
C-x C-c
C-x
C-x
C-x
C-x
C-x
C-f
C-l
C-p
C-q
C-s
transpose-lines
upcase-r egion
find-alter nate-file
C-x C-w
C-x C-x write-file
exchange-point-and-
mark
backward-kill-sen-
tence
inverse-add-global-
abbr ev
inverse-add-local-
abbr ev
switch-to-buf fer
call-last-kbd-macr o
mark-whole-buf fer
insert-file
kill-buf fer
other-window
kbd-macr o-query
save-some-buf fers
advertised-undo
yank
suspend-emacs
C-x DEL
C-x a i g
C-x a i l
C-x
C-x
C-x
C-x
C-x
C-x
C-x
C-x
C-x
C-y
C-z
b
e
h
i
k
o
q
s
u
Find a file in a new frame.
Display the buffer list.
Exit emacs .
Find file and read it.
Lowercase region.
Mark page.
Toggle read-only status of buffer.
Save file (may hang terminal; use C-q to
restart).
Transpose two lines.
Uppercase region
Read an alternate file, replacing the one
read with C-x C-f.
Write buffer contents to file.
Exchange location of cursor and mark.
Delete previous sentence.
Type global abbreviation, then definition.
Type local abbreviation, then definition.
Move to the buffer specified.
Execute last macro defined.
Mark buffer.
Insert file at cursor position.
Delete the buffer specified.
Move to the other window.
Insert a query in a macro definition.
Ask whether to save each modified buffer.
Undo last edit (can be done repeatedly).
Restor e what you’ve deleted.
Suspend emacs (use exit or fg to restart).
Summary of Commands by Key
18 October 2001 15:09
313
C-x C-t
C-x C-u
C-x C-v
Select a buffer in another frame.Meta-Key Sequences
Keystr okes Command Name Description
Meta
M- – M-c Exit a query-replace or successful search.
Capitalize previous word.
M-a
M-b
M-C-\
M-C-c
M-C-o (none)
negative-argument;
capitalize-word
negative-argument;
downcase-word
negative-argument;
upcase-word
spell-word
beginning-of-buf fer
end-of-buf fer
backward-paragraph
forward-paragraph
delete-indentation
digit-argument
digit-argument and
call-last-kbd-macr o
backward-sentence
backward-word
indent-r egion
exit-r ecursive-edit
split-line M-C-v
M-c
M-d
M-DEL
M-e
M-f
(none) scr oll-other-window
capitalize-word
kill-word
backward-kill-word
forward-sentence
forward-word
fill-r egion M-h
M-k
M-l
M-m mark-paragraph
kill-sentence
downcase-word
back-to-indentation M-q
M-s
M-t
M-u
M-v
M-x fill-paragraph
center-line
transpose-words
upcase-word
scr oll-down
(none)
M- – M-l
M- – M-u
M-$
M-<
M->
M-{
M-}
M-ˆ
M-n
M-n C-x e
314
18 October 2001 15:09
Chapter 7 – The Emacs Editor
Lowercase previous word.
Uppercase previous word.
Check spelling of word after cursor.
Move to beginning of file.
Move to end of file.
Move backward one paragraph.
Move forward one paragraph.
Join this line to the previous one.
Repeat the next command n times.
Execute the last defined macro, n times.
Move backward one sentence.
Move one word backwar d.
Indent a region to match first line in region.
Exit a recursive edit.
Split line at cursor; indent to column of cur-
sor.
Scr oll other window.
Capitalize first letter of word.
Delete word that cursor is on.
Delete previous word.
Move forward one sentence.
Move one word forwar d.
Refor mat individual paragraphs within a
region.
Mark paragraph.
Delete sentence the cursor is on.
Lowercase word.
Move cursor to first nonblank character on
line.
Refor mat paragraph.
Center line that cursor is on.
Transpose two words.
Uppercase word.
Move backward one screen.
Access command by command name.Summar y of Commands by Name
The emacs commands below are presented alphabetically by command name. Use
M-x to access the command name. Reminder: C- indicates the Control key; M-
indicates the Meta key.
Keystr okes Description
macr oname (none) abbr ev-mode (none) advertised-undo C-x u apr opos (none) back-to-indentation M-m backward-char
backward-delete-
char
backward-kill-para-
graph
backward-kill-sen-
tence
backward-kill-word
backward-kill-word
backward-page
backward-paragraph
backward-sentence
backward-word
beginning-of-buf fer
beginning-of-line
call-last-kbd-macr o
capitalize-r egion
capitalize-word
center-line
center-paragraph
center-r egion
comint-interrupt-
subjob
comint-kill-input
comint-send-eof
comint-stop-subjob
command-apr opos C-b
Del Execute a keyboard macro you’ve
saved.
Enter (or exit) word abbreviation
mode.
Undo last edit (can be done repeat-
edly).
What functions and variables involve
this concept?
Move cursor to first non-blank char-
acter on line.
Move backwar d one character (left).
Delete previous character.
(none) Delete previous paragraph.
C-x Del Delete previous sentence.
C-c C-w
M-Del
C-x [
M-{
M-a
M-b
M-<
C-a
C-x e
(none)
M-c
M-s
(none)
(none)
C-c C-c Erase previous word.
Delete previous word.
Move backward one page.
Move backward one paragraph.
Move backward one sentence.
Move backward one word.
Move to beginning of file.
Move to beginning of line.
Execute last macro defined.
Capitalize region.
Capitalize first letter of word.
Center line that cursor is on.
Center paragraph that cursor is on.
Center currently defined region.
Terminate the current job.
C-c C-u
C-c C-d
C-c C-z
C-h a Erase current line.
End of file character.
Suspend current job.
What commands involve this con-
cept?
Compar e two buffers; show first dif-
fer ence.
compar e-windows
(none)
Summary of Commands by Name
18 October 2001 15:09
315
Command NameCommand Name Keystr okes Description
delete-char
delete-indentation
delete-other-win-
dows
delete-window
delete-windows-on C-d
M-ˆ
C-x 1 Delete character under cursor.
Join this line to previous one.
Delete all windows but this one.
C-x 0
(none) describe-bindings C-h b describe-copying C-h C-c describe-distribution C-h C-d describe-function
describe-key C-h f
C-h k describe-key-briefly C-h c describe-mode C-h m describe-no-war-
ranty
describe-syntax C-h C-w Delete current window.
Delete all windows on a given
buf fer.
What are all the key bindings for in
this buffer?
View the emacs General Public
License.
View information on ordering emacs
fr om the FSF.
What does this function do?
What command does this keystroke
sequence run, and what does it do?
What command does this keystroke
sequence run?
Tell me about the mode the current
buf fer is in.
View the (non-)warranty for emacs .
describe-variable C-h v digit-argument and
call-last-kbd-macr o
digit-argument
downcase-r egion
downcase-word
edit-abbr evs
end-kbd-macr o
end-of-buf fer
end-of-line
enlarge-window
enlarge-window-
horizontally
exchange-point-and-
mark
exit-r ecursive-edit
fill-individual-para-
graphs
fill-paragraph
fill-r egion M-n C-x e
316
18 October 2001 15:09
C-h s
M-n
C-x C-l
M-l
(none)
C-x )
M->
C-e
C-x ˆ
C-x }
C-x C-x
M-C-c
(none)
M-q
(none)
Chapter 7 – The Emacs Editor
What is the syntax table for this
buf fer?
What does this variable mean, and
what is its value?
Execute the last defined macro, n
times.
Repeat next command, n times.
Lowercase region.
Lowercase word.
Edit word abbreviations.
End macro definition.
Move to end of file.
Move to end of line.
Make window taller.
Make window wider.
Exchange location of cursor and
mark.
Exit a recursive edit.
Refor mat indented paragraphs,
keeping indentation.
Refor mat paragraph.
Refor mat individual paragraphs
within a region.Keystr okes Description
find-alter nate-file C-x C-v find-file
find-file-other-frame
find-file-other-win-
dow
forward-char
forward-page
forward-paragraph
forward-sentence
forward-word
goto-char
goto-line
help-command
help-with-tutorial
indent-r egion C-x C-f
C-x 5 f
C-x 4 f Read an alternate file, replacing the
one read with C-x C-f.
Find file and read it.
Find a file in a new frame.
Find a file in the other window.
indented-text-mode (none) info
insert-file
insert-keyboard-
macr o
inverse-add-global-
abbr ev
inverse-add-local-
abbr ev
isearch-backward
isearch-backward-
regexp
isearch-forward
isearch-forward-r eg-
exp
kbd-macr o-query
keyboard-quit
kill-all-abbr evs
kill-buf fer
kill-line
kill-paragraph C-h i
C-x i
(none) kill-r egion
kill-sentence
kill-some-buf fers
kill-word
list-abbr evs C-w
M-k
(none)
M-d
(none)
C-f
C-x ]
M-}
M-e
M-f
(none)
(none)
C-h
C-h t
M-C-\
C-x a i g
C-x a i l
C-r
C-r
C-s
C-r
C-x q
C-g
(none)
C-x k
C-k
(none)
Move forwar d one character (right).
Move forward one page.
Move forward one paragraph.
Move forward one sentence.
Move forward one word.
Go to character n of file.
Go to line n of file.
Enter the online help system.
Run the emacs tutorial.
Indent a region to match first line in
region.
Major mode: each tab defines a new
indent for subsequent lines.
Start the Info documentation reader.
Insert file at cursor position.
Insert the macro you named into a
file.
Type global abbreviation, then defi-
nition.
Type local abbreviation, then defini-
tion.
Start incremental search backward.
Same, but search for regular expres-
sion.
Start incremental search forward.
Same, but search for regular expres-
sion.
Insert a query in a macro definition.
Abort current command.
Kill abbreviations for this session.
Delete the buffer specified.
Delete from cursor to end of line.
Delete from cursor to end of para-
graph.
Delete a marked region.
Delete sentence the cursor is on.
Ask about deleting each buffer.
Delete word the cursor is on.
View word abbreviations.
Summary of Commands by Name
18 October 2001 15:09
317
Command NameCommand Name Keystr okes Description
list-buf fers
load-file
mark-page
mark-paragraph
mark-whole-buf fer
name-last-kbd-
macr o
negative-argument;
capitalize-word
negative-argument;
downcase-word
negative-argument;
upcase-word
next-line
other-window
pr evious-line
query-r eplace-r eg-
exp
recenter C-x C-b
(none)
C-x C-p
M-h
C-x h
(none) M- – M-c Display buffer list.
Load macro files you’ve saved.
Mark page.
Mark paragraph.
Mark buffer.
Name last macro you created
(befor e saving it).
Capitalize previous word.
M- – M-l Lowercase previous word.
M- – M-u Uppercase previous word.
C-n
C-x o
C-p
C-% Meta Move to next line (down).
Move to the other window.
Move to pr evious line (up).
Query-r eplace a regular expression.
C-l rename-buf fer (none) replace-r egexp (none) re-search-backward (none) re-search-forward (none) revert-buf fer (none) save-buf fer C-x C-s save-buf fers-kill-
emacs
save-some-buf fers C-x C-c Redraw screen, with current line in
center.
Change buffer name to specified
name.
Replace a regular expression uncon-
ditionally.
Simple regular expression search
backward.
Simple regular expression search
forward.
Restor e buf fer to the state it was in
when the file was last saved (or
auto-saved).
Save file (may hang terminal; use C-
q to restart).
Exit emacs .
scr oll-down
scr oll-left
scr oll-other-window
scr oll-right
scr oll-up M-v
C-x <
M-C-v
C-x >
C-v
318
18 October 2001 15:09
C-x s
Chapter 7 – The Emacs Editor
Ask whether to save each modified
buf fer.
Move backward one screen.
Scr oll the window left.
Scr oll other window.
Scr oll the window right.
Move forward one screen.Command Name Keystr okes Description
set-fill-pr efix C-x . set-mark-command C-@ or C-Space shrink-window
shrink-window-hori-
zontally
spell-buf fer
spell-r egion
spell-string (none)
C-x { Use characters from the beginning
of the line up to the cursor column
as the “fill prefix.” This prefix is
pr epended to each line in the para-
graph. Cancel the prefix by typing
this command in column 1.
Mark the beginning (or end) of a
region.
Make window shorter.
Make window narrower.
spell-word
split-line M-$
M-C-o split-window-verti-
cally
split-window-hori-
zontally
start-kbd-macr o
suspend-emacs C-x 2
(none)
(none)
(none)
C-x b
C-x 5 b C-x 4 b Select a buffer in the other window.
(none) transpose-chars
transpose-lines
transpose-para-
graphs
transpose-sentences
transpose-words
unexpand-abbr ev
universal-argument
universal-argument
and start-kbd-macro
upcase-r egion
upcase-word
view-emacs-news C-t
C-x C-t
(none) Exit indented text mode; retur n to
text mode.
Transpose two letters.
Transpose two lines.
Transpose two paragraphs.
C-x 3
C-x (
C-z
(none)
M-t
(none)
C-u n
C-u C-x (
C-x C-u
M-u
C-h n
Transpose two sentences.
Transpose two words.
Undo the last word abbreviation.
Repeat the next command n times.
Execute last macro defined, then
add keystrokes to it.
Uppercase region.
Uppercase word.
View news about updates to emacs .
Summary of Commands by Name
18 October 2001 15:09
319
switch-to-buf fer
switch-to-buf fer-
other-frame
switch-to-buf fer-
other-window
text-mode Check spelling of current buffer.
Check spelling of current region.
Check spelling of string typed in
minibuf fer.
Check spelling of word after cursor.
Split line at cursor; indent to column
of cursor.
Divide the current window into two,
one on top of the other.
Divide the current window into two,
side by side.
Start macro definition.
Suspend emacs (use exit or fg to
restart).
Move to the buffer specified.
Select a buffer in another frame.Command Name Keystr okes Description
view-lossage C-h l wher e-is C-h w write-abbr ev-file
write-file
yank (none)
C-x C-w
C-y What are the last 100 characters I
typed?
What is the key binding for this
command?
Write the word abbreviation file.
Write buffer contents to file.
Restor e what you’ve deleted.
320
18 October 2001 15:09
Chapter 7 – The Emacs EditorCHAPTER 8
The vi Editor
This chapter presents the following topics:
• Review of vi operations
• Movement commands
• Edit commands
• Saving and exiting
• Accessing multiple files
• Interacting with Unix
• Macr os
• Miscellaneous commands
• Alphabetical list of keys
• Setting up vi
vi is pronounced “vee eye.”
Besides the original Unix vi , ther e ar e a number of freely available vi clones. Both
the original vi and the clones are cover ed in Lear ning the vi Editor, listed in the
Bibliography.
Review of vi Operations
•
Command-line syntax
321
18 October 2001 15:11
This section provides a review of the following:• vi modes
• Syntax of vi commands
• Status-line commands
Command-Line Syntax
The three most common ways of starting a vi session are:
vi file
vi +n file
vi +/pattern file
You can open file for editing, optionally at line n or at the first line matching pat-
ter n. If no file is specified, vi opens with an empty buffer. See Chapter 2, Unix
Commands, for more infor mation on command-line options for vi .
Note that vi and ex ar e actually the same program; thus it is worthwhile to review
the material in Chapter 9, The ex Editor, as well, in order to become familiar with
the ex command set.
Command Mode
Once the file is opened, you are in command mode. From command mode, you
can:
• Invoke insert mode
• Issue editing commands
• Move the cursor to a differ ent position in the file
• Invoke ex commands
• Invoke a Unix shell
• Save or exit the current version of the file
Inser t Mode
In insert mode, you can enter new text in the file. Press the Escape key to exit
insert mode and retur n to command mode. The following commands invoke insert
mode:
a
A
c
C
i
I
o
O
322
18 October 2001 15:11
Append after cursor.
Append at end of line.
Begin change operation.
Change to end of line.
Insert before cursor.
Insert at beginning of line.
Open a line below current line.
Open a line above current line.
Chapter 8 – The vi EditorR
s
S
Begin overwriting text.
Substitute a character.
Substitute entire line.
Syntax of vi Commands
In vi , commands have the following general form:
[ n ] operator [ m ] object
The basic editing operators ar e:
c
d
y
Begin a change.
Begin a deletion.
Begin a yank (or copy).
If the current line is the object of the operation, the object is the same as the oper-
ator: cc , dd , yy . Otherwise, the editing operators act on objects specified by cursor-
movement commands or pattern-matching commands. n and m ar e the number of
times the operation is perfor med, or the number of objects the operation is per-
for med on. If both n and m ar e specified, the effect is n × m.
An object can repr esent any of the following text blocks:
wor d
sentence
paragraph
section
Includes characters up to a whitespace character (space or tab)
or punctuation mark. A capitalized object is a variant form that
recognizes only whitespace.
Is up to . , ! , or ? , followed by two spaces.
Is up to next blank line or paragraph macro defined by the
para= option.
Is up to next section heading defined by the sect= option.
Examples
2cw
d}
dˆ
5yy
y]]
Change the next two words.
Delete up to next paragraph.
Delete back to beginning of line.
Copy the next five lines.
Copy up to the next section.
Status-Line Commands
Most commands are not echoed on the screen as you input them. However, the
status line at the bottom of the screen is used to echo input for these commands:
Search forward for a pattern.
Search backward for a pattern.
Invoke an ex command.
/
?
:
Review of vi Operations
18 October 2001 15:11
323!
Invoke a Unix command that takes as its input an object in the buffer
and replaces it with output from the command.
Commands that are input on the status line must be entered by pressing the
Retur n key. In addition, error messages and output from the CTRL-G command are
displayed on the status line.
Movement Commands
A number preceding a command repeats the movement. Movement commands are
also objects for change, delete, and yank operations.
Character
h , j , k , l
Spacebar
Left, down, up, right (←, ↓, ↑, →).
Right.
Te xt
w , W , b , B
e , E
) , (
} , {
]] , [[
Forward, backward by word.
End of word.
Beginning of next, current sentence.
Beginning of next, current paragraph.
Beginning of next, current section.
Lines
0 , $
ˆ
+ , -
Return
n|
H
M
L
nH
nL
324
18 October 2001 15:11
First, last position of current line.
First nonblank character of current line.
First character of next, previous line.
First character of next line.
Column n of current line.
Top line of screen.
Middle line of screen.
Last line of screen.
n lines after top line.
n lines before last line.
Chapter 8 – The vi EditorScreens
CTRL-F
CTRL-B Scr oll forward, backward one screen.
CTRL-D
CTRL-U Scr oll down, up one-half screen.
CTRL-E
CTRL-Y Show one more line at bottom, top of window.
z Retur n
z.
z- Reposition line with cursor to top of screen.
Reposition line with cursor to middle of screen.
Reposition line with cursor to bottom of screen.
CTRL-L
CTRL-R Redraw screen (without scrolling).
Sear ches
/text
n
N
/
?
?text
/text/+n
?text?-n
%
fx
Fx
tx
Tx
,
;
Search forward for text.
Repeat previous search.
Repeat search in opposite direction.
Repeat forward search.
Repeat previous search backward.
Search backward for text.
Go to line n after text.
Go to line n befor e text.
Find match of current parenthesis, brace, or bracket.
Move search forward to x on current line.
Move search backward to x on current line.
Search forward to character before x in current line.
Search backward to character after x in current line.
Reverse search direction of last f , F , t , or T .
Repeat last character search ( f , F , t , or T ).
Line Numbering
CTRL-G
nG
G
:n
Display current line number.
Move to line number n.
Move to last line in file.
Move to line number n.
Movement Commands
18 October 2001 15:11
325Marking Position
mx
‘x
’x
‘‘
’’
Mark current position with character x.
Move cursor to mark x.
Move to start of line containing x.
Retur n to previous mark (or to location prior to a search).
Like above, but retur n to start of line.
Edit Commands
Recall that c , d , and y ar e the basic editing operators.
Inser ting New Text
a
A
i
I
o
O
Esc
CTRL-J
Return
CTRL-I
CTRL-T
Backspace
CTRL-H
CTRL-U
CTRL-V
CTRL-W
Append after cursor.
Append to end of line.
Insert before cursor.
Insert at beginning of line.
Open a line below cursor.
Open a line above cursor.
Terminate insert mode.
Move down one line.
Move down one line.
Insert a tab.
Move to next tab setting.
Move back one character.
Move back one character.
Delete current line.
Quote next character.
Move back one word.
Chang ing and Deleting Text
cw
cc
C
dd
ndd
D
dw
d}
dˆ
d/pat
dn
326
18 October 2001 15:11
Change word.
Change line.
Change text from current position to end of line.
Delete current line.
Delete n lines.
Delete remainder of line.
Delete a word.
Delete up to next paragraph.
Delete back to beginning of line.
Delete up to first occurrence of pattern.
Delete up to next occurrence of pattern.
Chapter 8 – The vi Editordfa
dta
dL
dG
p
P
rx
Rtext
s
4s
S
u
U
x
X
5X
.
 ̃
Delete up to and including a on current line.
Delete up to (but not including) a on current line.
Delete up to last line on screen.
Delete to end of file.
Insert last deleted text after cursor.
Insert last deleted text before cursor.
Replace character with x.
Replace with new text (overwrite), beginning at cursor.
Substitute character.
Substitute four characters.
Substitute entire line.
Undo last change.
Restor e curr ent line.
Delete current cursor position.
Delete back one character.
Delete previous five characters.
Repeat last change.
Reverse case.
Copying and Moving
Y
yy
"xyy
"xd
"Xd
"xp
y]]
ye
Copy current line to new buffer.
Copy current line.
Yank current line to buffer x.
Delete into buffer x.
Delete and append into buffer x.
Put contents of buffer x.
Copy up to next section heading.
Copy to end of word.
Buf fer names are the letters a – z . Uppercase names append text to the specified
buf fer.
Saving and Exiting
Writing a file means saving the edits and updating the file’s modification time.
Quit vi , writing the file only if changes were made.
Same as ZZ .
Write and quit file.
Write file.
Save copy to file.
Write lines n to m to new file.
Append lines n to m to existing file.
Write file (overriding protection).
Saving and Exiting
18 October 2001 15:11
ZZ
:x
:wq
:w
:w file
:n,mw file
:n,mw >> file
:w!
327Overwrite file with current buffer.
Write current buffer named file as file.new.
Quit vi .
Quit vi (discarding edits).
Quit vi and invoke ex .
Retur n to vi after Q command.
Edit file2 without leaving vi .
Edit next file.
Retur n to version of current file at time of last write.
Edit alternate file.
Curr ent filename.
Alter nate filename.
:w! file
:w %.new
:q
:q!
Q
:vi
:e file2
:n
:e!
:e #
%
#
Accessing Multiple Files
:e file
:e!
:e + file
:e +n file
:e #
:ta tag
:n
:n!
:n files
CTRL-G
:args
:rew
Edit another file ; curr ent file becomes alternate.
Retur n to version of current file at time of last write.
Begin editing at end of file.
Open file at line n.
Open to previous position in alternate file.
Edit file at location tag.
Edit next file.
Forces next file.
Specify new list of files.
Show current file and line number.
Display multiple files to be edited.
Rewind list of multiple files to top.
Interacting with Unix
:r file
:r !command
:nr !command
:!command
!object command
:n,m! command
n!!command
!!
:sh
CTRL-Z
:so file
328
18 October 2001 15:11
Read in contents of file after cursor.
Read in output from command after current line.
Like above, but place after line n (0 for top of file).
Run command, then retur n.
Send buffer object to Unix command; replace with
output.
Send lines n–m to command; replace with output.
Send n lines to Unix command; replace with output.
Repeat last system command.
Cr eate subshell; retur n to file with EOF.
Suspend editor, resume with fg .
Read and execute ex commands from file.
Chapter 8 – The vi EditorMacros
:ab in out
:unab in
:ab
:map c sequence
:unmap c
:map
:map! c sequence
:unmap! c
:map!
Use in as abbreviation for out.
Remove abbreviation for in.
List abbreviations.
Map character c as sequence of commands.
Remove map for character c.
List characters that are mapped.
Map character c to input mode sequence.
Remove input mode map (you may need to quote the character
with CTRL-V ).
List characters that are mapped for input mode.
The following characters are unused in command mode and can be mapped as
user-defined commands:
Letters
g K q V v
Contr ol keys
ˆA ˆK ˆO ˆW ˆX
Symbols
_ * \ =
(Note: the = is used by vi if Lisp mode is set. Differ ent versions of vi may use
some of these characters, so test them before using.)
Miscellaneous Commands
J
:j!
<<
>>
>}
<%
Join two lines.
Join two lines, preserving whitespace.
Shift this line left one shift width (default is eight spaces).
Shift this line right one shift width (default is eight spaces).
Shift right to end of paragraph.
Shift left until matching parenthesis, brace, or bracket.
(Cursor must be on the matching symbol.)
Alphabetical List of Keys
For brevity, control characters are marked by ˆ .
Per form a tag look-up on the text under the cursor.
a
A
ˆA Append text after cursor.
Append text at end of line.
Unused.
ˆ]
Alphabetical List of Keys
18 October 2001 15:11
329b
B
ˆB Back up to beginning of word in current line.
Back up to beginning of word, ignoring punctuation.
Scr oll backward one window.
c
C
ˆC Change operator.
Change to end of current line.
Unused in command mode; ends insert mode ( stty interrupt
character).
d
D
ˆD
Delete operator.
Delete to end of current line.
Scr oll down half-window (command mode).
Move backward one tab-stop (insert mode).
e
E
ˆE Move to end of word.
Move to end of word, ignoring punctuation.
Show one more line at bottom of window.
f
F
ˆF Find next character typed forward on current line.
Find next character typed backward on current line.
Scr oll forward one window.
g
G
ˆG Unused.
Go to specified line or end of file.
Print information about file on status line.
h
H
ˆH Left arrow cursor key.
Move cursor to Home position.
Left arrow cursor key; Backspace key in insert mode.
i
I
ˆI Insert text before cursor.
Insert text before first nonblank character on line.
Unused in command mode; in insert mode, same as Tab key.
j
J
ˆJ Down arrow cursor key.
Join two lines.
Down arrow cursor key; in insert mode, move down a line.
k
K
ˆK Up arrow cursor key.
Unused.
Unused.
l
L
ˆL Right arrow cursor key.
Move cursor to last position in window.
Redraw screen.
m
M
ˆM Mark the current cursor position in register (a–z).
Move cursor to middle position in window.
Carriage retur n.
n
N
330
18 October 2001 15:11
Repeat the last search command.
Repeat the last search command in the reverse direction.
Chapter 8 – The vi EditorˆN Down arrow cursor key.
o
O
ˆO Open line below current line.
Open line above current line.
Unused.
p
P
ˆP Put yanked or deleted text after or below cursor.
Put yanked or deleted text before or above cursor.
Up arrow cursor key.
q
Q
ˆQ Unused.
Quit vi and invoke ex .
Unused (on some terminals, resume data flow).
r
R
ˆR Replace character at cursor with the next character you type.
Replace characters.
Redraw the screen.
s
S
ˆS Change the character under the cursor to typed characters.
Change entire line.
Unused (on some terminals, stop data flow).
t
T
ˆT
Move cursor forward to character before next character typed.
Move cursor backward to character after next character typed.
Retur n to the previous location in the tag stack (Solaris vi com-
mand mode).
If autoindent is set, indent another tab stop (insert mode).
u
U
ˆU Undo the last change made.
Restor e curr ent line, discarding changes.
Scr oll the screen upward half-window.
v
V
ˆV Unused.
Unused.
Unused in command mode; in insert mode, quote next character.
w
W
ˆW Move to beginning of next word.
Move to beginning of next word, ignoring punctuation.
Unused in command mode; in insert mode, back up to begin-
ning of word.
x
X
ˆX Delete character under cursor.
Delete character before cursor.
Unused.
y
Y
ˆY Yank or copy operator.
Make copy of current line.
Show one more line at top of window.
Reposition line containing cursor. z must be followed either by:
Retur n (r eposition line to top of screen), . (reposition line to
middle of screen), or – (reposition line to bottom of screen).
Alphabetical List of Keys
18 October 2001 15:11
z
331ZZ
ˆZ
Exit the editor, saving changes.
Suspend vi (only works on systems that have job control).
Setting Up vi
This section describes the following:
• The :set command
• Options available with :set
• Example .exrc file
The :set Command
The :set command allows you to specify options that change characteristics of
your editing environment. Options may be put in the  ̃/.exrc file or set during a
vi session.
The colon should not be typed if the command is put in .exrc :
:set
:set
:set
:set
:set
:set
x
nox
x=val
all
x?
Enable option x.
Disable option x.
Give value to option x.
Show changed options.
Show all options.
Show value of option x.
Options Used by :set
Table 8-1 contains brief descriptions of the important set command options. In the
first column, options are listed in alphabetical order; if the option can be abbrevi-
ated, that abbreviation is shown in parentheses. The second column shows the
default setting vi uses unless you issue an explicit set command (either manually
or in the .exrc file). The last column describes what the option does, when
enabled.
Table 8−1: :set Options
Option Default Description
autoindent (ai) noai In insert mode, indent each line to
the same level as the line above or
below. Use with the shiftwidth
option.
autoprint (ap) ap Display changes after each editor
command. (For global replacement,
display last replacement.)
332
18 October 2001 15:11
Chapter 8 – The vi EditorTable 8−1: :set Options (continued)
Default Description
autowrite (aw) noaw Automatically write (save) the file if
changed before opening another file
with :n or before giving Unix
command with :! .
beautify (bf) nobf Ignor e all control characters during
input (except tab, newline, or
for mfeed).
directory (dir) /tmp Name directory in which ex / vi
stor es buf fer files. (Directory must
be writable.)
edcompatible noedcompatible Remember the flags used with the
most recent substitute command
(global, confirming) and use them
for the next substitute command.
Despite the name, no version of ed
actually behaves this way.
errorbells (eb) errorbells Sound bell when an error occurs.
exrc (ex) noexrc Allow the execution of .exrc files
that reside outside the user’s home
dir ectory.
hardtabs (ht) 8 Define boundaries for terminal
hardwar e tabs.
ignorecase (ic) noic Disr egard case during a search.
lisp nolisp Insert indents in appropriate Lisp
for mat. ( ) , { } , [[ , and ]] ar e
modified to have meaning for Lisp.
list nolist Print tabs as ˆI ; mark ends of lines
with $ . (Use list to tell if end
character is a tab or a space.)
magic magic Wildcard characters . (dot), *
(asterisk), and [] (brackets) have
special meaning in patterns.
mesg mesg Per mit system messages to display
on terminal while editing in vi .
novice nonovice Requir e the use of long ex command
names, such as copy or read .
number (nu) nonu Display line numbers on left of
scr een during editing session.
Setting Up vi
18 October 2001 15:11
Option
333Table 8−1: :set Options (continued)
Option Default Description
open open Allow entry to open or visual mode
fr om ex . Although not in Solaris vi ,
this option has traditionally been in
vi , and may be in your Unix’s
version of vi .
optimize (opt) noopt Abolish carriage retur ns at the end
of lines when printing multiple lines;
speed output on dumb terminals
when printing lines with leading
whitespace (spaces or tabs).
paragraphs (para) IPLPPPQP LIpplpipbp Define paragraph delimiters for
movement by { or } . The pairs of
characters in the value are the
names of troff macr os that begin
paragraphs.
prompt prompt Display the ex pr ompt ( : ) when
vi ’s Q command is given.
readonly (ro) noro Any writes (saves) of a file fail
unless you use ! after the write
(works with w , ZZ , or autowrite ).
vi redraws the screen whenever
redraw (re)
edits are made (in other words,
insert mode pushes over existing
characters, and deleted lines
immediately close up). Default
depends on line speed and terminal
type. noredraw is useful at slow
speeds on a dumb terminal: deleted
lines show up as @, and inserted
text appears to overwrite existing
text until you press Escape.
remap remap Allow nested map sequences.
report 5 Display a message on the status line
whenever you make an edit that
af fects at least a certain number of
lines. For example, 6dd reports the
message “6 lines deleted.”
scroll [ 1 ⁄ 2 window] Number of lines to scroll with ˆD
and ˆU commands.
334
18 October 2001 15:11
Chapter 8 – The vi EditorTable 8−1: :set Options (continued)
Option Default
sections (sect) SHNHH HU
Description
Define section delimiters for [[ and
]] movement. The pairs of
characters in the value are the
names of troff macr os that begin
sections.
shell (sh) /bin/sh Pathname of shell used for shell
escape ( :! ) and shell command
( :sh ). Default value is derived from
shell environment, which varies on
dif ferent systems.
shiftwidth (sw) 8 Define number of spaces in
backward ( ˆD ) tabs when using the
autoindent option, and for the <<
and >> commands.
showmatch (sm) nosm In vi , when ) or } is entered, cursor
moves briefly to matching ( or { . (If
no match, rings the error message
bell.) Very useful for programming.
showmode noshowmode In insert mode, display a message
on the prompt line indicating the
type of insert you are making. For
example, “OPEN MODE” or
“APPEND MODE.”
Hold off display during insert.
Default depends on line speed and
ter minal type.
slowopen (slow)
8 Define number of spaces a tab
indents during editing session.
(Printer still uses system tab of 8.)
taglength (tl) 0 Define number of characters that are
significant for tags. Default (zero)
means that all characters are
significant.
tags tags /usr/lib/tags Define pathname of files containing
tags. (See the Unix ctags command.)
(By default, vi searches the file tags
in the current directory and /usr/
lib/tags .)
tagstack tagstack Enable stacking of tag locations on a
stack.
Setting Up vi
18 October 2001 15:11
335
tabstop (ts)Table 8−1: :set Options (continued)
Option
Default
Description
Set terminal type.
term
terse noterse Display shorter error messages.
timeout (to) timeout Keyboard maps time out after
1 second. a
Set terminal type. This is just
another name for term .
ttytype
warn
warn
Display the warning message, “No
write since last change.”
Show a certain number of lines of
the file on the screen. Default
depends on line speed and terminal
type.
window (w)
wrapscan (ws) ws Searches wrap around either end of
file.
wrapmargin (wm) 0 Define right margin. If gr eater than
zer o, automatically insert carriage
retur ns to break lines.
writeany (wa) nowa Allow saving to any file.
When you have mappings of several keys (for example, :map zzz 3dw ), you probably want
to use notimeout . Otherwise you need to type zzz within 1 second. When you have an insert
mode mapping for a cursor key (for example, :map! ˆ[OB ˆ[ja ), you should use timeout .
Otherwise, vi won’t react to Escape until you type another key.
a
Example .exr c File
set nowrapscan wrapmargin=7
set sections=SeAhBhChDh nomesg
map q :wˆM:nˆM
map v dwElp
ab ORA O’Reilly & Associates, Inc.
336
18 October 2001 15:11
Chapter 8 – The vi EditorCHAPTER 9
The ex Editor
The ex line editor serves as the foundation for the screen editor vi . Commands in
ex work on the current line or on a range of lines in a file. Most often, you use ex
fr om within vi . In vi , ex commands are preceded by a colon and entered by
pr essing Retur n.
You can also invoke ex on its own—from the command line—just as you would
invoke vi . (You could execute an ex script this way.) You can also use the vi com-
mand Q to quit the vi editor and enter ex .
This chapter presents the following topics:
• Syntax of ex commands
• Alphabetical summary of commands
For more infor mation, see Lear ning the vi Editor, listed in the Bibliography.
Syntax of ex Commands
To enter an ex command from vi , type:
: [ address ] command [ options ]
An initial : indicates an ex command. As you type the command, it is echoed on
the status line. Enter the command by pressing the Return key. addr ess is the line
number or range of lines that are the object of command. options and addr esses
ar e described below. ex commands are described in the “Alphabetical Summary”
section.
337
18 October 2001 15:12You can exit ex in several ways:
:x
Exit (save changes and quit).
:q! Quit without saving changes.
:vi Switch to the vi editor on the current file.
Addresses
If no address is given, the current line is the object of the command. If the address
specifies a range of lines, the format is:
x,y
wher e x and y ar e the first and last addressed lines (x must precede y in the
buf fer). x and y may each be a line number or a symbol. Using ; instead of , sets
the current line to x befor e interpr eting y. The notation 1,$ addr esses all lines in
the file, as does % .
Address Symbols
1,$
x,y
x;y
0
.
n
$
%
x-n
x+n
- [ n ]
+ [ n ]
’x
’’
/pattern/
?pattern?
All lines in the file.
Lines x thr ough y.
Lines x thr ough y, with current line
reset to x.
Top of file.
Curr ent line.
Absolute line number n.
Last line.
All lines; same as 1,$ .
n lines before x.
n lines after x.
One or n lines previous.
One or n lines ahead.
Line marked with x.
Pr evious mark.
Forward to line matching patter n.
Backward to line matching patter n.
See Chapter 6, Patter n Matching, for more infor mation on using patterns.
Options
!
Indicates a variant form of the command, overriding the normal behavior.
count
The number of times the command is to be repeated. Unlike in vi com-
mands, count cannot precede the command, because a number preceding an
338
18 October 2001 15:12
Chapter 9 – The ex Editorex command is treated as a line address. For example, d3 deletes three lines
beginning with the current line; 3d deletes line 3.
file The name of a file that is affected by the command. % stands for the current
file; # stands for the previous file.
Alphabetical Summary of ex Commands
ex commands can be entered by specifying any unique abbreviation. In this listing,
the full name appears in the margin, and the shortest possible abbreviation is used
in the syntax line. Examples are assumed to be typed from vi , so they include the
: pr ompt.
ab [ string text ]
abbrev
Define string when typed to be translated into text. If string and
text ar e not specified, list all current abbreviations.
Examples
Note: ˆM appears when you type ˆV followed by Return.
:ab ora O’Reilly & Associates, Inc.
:ab id Name:ˆMRank:ˆMPhone:
[ address ] a [ ! ]
text
.
append
Append text at specified addr ess, or at present address if none is
specified. Add a ! to toggle the autoindent setting that is used
during input. That is, if autoindent was enabled, ! disables it.
ar gs
ar
Print the members of the argument list (files named on the com-
mand line), with the current argument printed in brackets ([]).
[ address ] c [ ! ]
text
.
change
Replace the specified lines with text. Add a ! to switch the
autoindent setting during input of text.
Alphabetical Summary of ex Commands — change
18 October 2001 15:12
339cop y
[ address ] co destination
Copy the lines included in addr ess to the specified destination
addr ess. The command t (short for “to”) is a synonym for copy .
Example
:1,10 co 50
delete
[ address ] d [ buffer ]
Delete the lines included in addr ess. If buf fer is specified, save or
append the text to the named buffer. Buf fer names are the lower-
case letters a–z. Uppercase names append text to the buffer.
Examples
:/Part I/,/Part II/-1d
:/main/+d
:.,$d
edit
Delete to line above "Part II"
Delete line below "main"
Delete from this line to last line
e [ ! ] [ +n ] [ filename ]
Begin editing on filename. If no filename is given, start over with
a copy of the current file. Add a ! to edit the new file even if the
curr ent file has not been saved since the last change. With the + n
argument, begin editing on line n. Or n may be a pattern, of the
for m / patter n.
Examples
:e file
:e#
:e!
file
f [ filename ]
Change the name of the current file to filename , which is consid-
er ed “not edited.” If no filename is specified, print the current
status of the file.
Example
:f %.new
global
[ address ] g [ ! ] /pattern/ [ commands ]
Execute commands on all lines which contain patter n or, if
addr ess is specified, on all lines within that range. If commands
340
18 October 2001 15:12
Chapter 9 – The ex Editorar e not specified, print all such lines. Add a ! to execute com-
mands on all lines not containing patter n. See also v.
global
Examples
:g/Unix/p
:g/Name:/s/tom/Tom/
[ address ] i [ ! ]
text
.
inser t
Insert text at line before the specified addr ess, or at present
addr ess if none is specified. Add a ! to switch the autoindent set-
ting during input of text.
[ address ] j [ ! ] [ count ]
join
Place the text in the specified range on one line, with whitespace
adjusted to provide two space characters after a period (.), no
space characters after a ), and one space character otherwise.
Add a ! to prevent whitespace adjustment.
Example
:1,5j!
Join first five lines, preserving whitespace
[ address ] k char
k
Mark the given addr ess with char, a single lowercase letter.
Retur n later to the line with ’x . k is equivalent to mark .
[ address ] l [ count ]
list
Print the specified lines so that tabs display as ˆI , and the ends
of lines display as $ . l is like a temporary version of :set list .
map [ ! ] [ char commands ]
map
Define a keyboard macro named char as the specified sequence
of commands. char is usually a single character, or the sequence
# n, repr esenting a function key on the keyboard. Use a ! to cre-
ate a macro for input mode. With no arguments, list the currently
defined macros.
Alphabetical Summary of ex Commands — map
18 October 2001 15:12
341
→Examples
map
←
:map K dwwP
Transpose two words
:map q :wˆM:nˆM
Write current file; go to next
:map! + ˆ[bi(ˆ[ea) Enclose previous word in par entheses
mark
[ address ] ma char
Mark the specified line with char, a single lowercase letter.
Retur n later to the line with ’x . Same as k .
move
[ address ] m destination
Move the lines specified by addr ess to the destination addr ess.
Example
:.,/Note/m /END/
next
Move text block after line containing "END"
n [ ! ] [[ +n ] filelist ]
Edit the next file from the command-line argument list. Use args
to list these files. If filelist is provided, replace the current argu-
ment list with filelist and begin editing on the first file. With the
+ n argument, begin editing on line n. Or n may be a pattern, of
the form / patter n.
Example
:n chap*
number
Start editing all "chapter" files
[ address ] nu [ count ]
Print each line specified by addr ess, preceded by its buffer line
number. Use # as an alternate abbreviation for number . count
specifies the number of lines to show, starting with addr ess.
open
[ address ] o [ /pattern/ ]
Enter open mode ( vi ) at the lines specified by addr ess, or at the
lines matching patter n. Exit open mode with Q . Open mode lets
you use the regular vi commands, but only one line at a time. It
342
18 October 2001 15:12
Chapter 9 – The ex Editorcan be useful on slow dialup lines (or on very distant Internet
open
telnet connections).
preser ve
pre
Save the current editor buffer as though the system were about
to crash.
[ address ] p [ count ]
pr int
Print the lines specified by addr ess. count specifies the number
of lines to print, starting with addr ess. P is another abbreviation.
Example
:100;+5p
Show line 100 and the next five lines
[ address ] pu [ char ]
put
Restor e pr eviously deleted or yanked lines from named buffer
specified by char, to the line specified by addr ess. If char is not
specified, the last deleted or yanked text is restor ed.
q [ ! ]
quit
Terminate current editing session. Use ! to discard changes made
since the last save. If the editing session includes additional files
in the argument list that were never accessed, quit by typing q!
or by typing q twice.
[ address ] r filename
read
Copy the text of filename after the line specified by addr ess. If
filename is not specified, the current filename is used.
Example
:0r $HOME/data
Read file in at top of current file
[ address ] r !command
read
Read the output of Unix command into the text after the line
specified by addr ess.
Alphabetical Summary of ex Commands — read
18 October 2001 15:12
343
→Example
read
←
:$r !cal
recover
Place a calendar at end of file
rec [ file ]
Recover file fr om the system save area.
rewind
rew [ ! ]
Rewind argument list and begin editing the first file in the list.
Add a ! to rewind even if the current file has not been saved
since the last change.
set
se parameter1 parameter2 ...
Set a value to an option with each parameter, or, if no parameter
is supplied, print all options that have been changed from their
defaults. For toggle options, each parameter can be phrased as
option or no option; other options can be assigned with the syntax
option = value. Specify all to list current settings. The form set
option ? displays the value of option. See the list of set options in
Chapter 8, The vi Editor.
Examples
:set nows wm=10
:set all
shell
sh
Cr eate a new shell. Resume editing when the shell terminates.
source
so file
Read and execute ex commands from file.
Examples
:so $HOME/.exrc
substitute
[ address ] s [ /pattern/replacement/ ] [ options ] [ count ]
Replace each instance of patter n on the specified lines with
replacement. If patter n and replacement ar e omitted, repeat last
substitution. count specifies the number of lines on which to
344
18 October 2001 15:12
Chapter 9 – The ex Editorsubstitute, starting with addr ess. See additional examples in
Chapter 6. (Spelling out the command name does not work in
Solaris vi .)
substitute
Options
c
g
p
Pr ompt for confirmation before each change.
Substitute all instances of patter n on each line (global).
Print the last line on which a substitution was made.
Examples
:1,10s/yes/no/g
:%s/[Hh]ello/Hi/gc
:s/Fortran/\U&/ 3
Substitute on first 10 lines
Confir m global substitutions
Upper case "Fortran" on next three lines
[ address ] t destination
t
Copy the lines included in addr ess to the specified destination
addr ess. t is equivalent to copy .
Example
:%t$
Copy the file and add it to the end
[ address ] ta tag
ta g
Switch the focus of editing to tag.
Example
Run ctags , then switch to the file containing myfunction:
:!ctags *.c
:tag myfunction
una bbreviate
una word
Remove wor d fr om the list of abbreviations.
undo
u
Reverse the changes made by the last editing command.
Alphabetical Summary of ex Commands — undo
18 October 2001 15:12
345unmap
unm [ ! ] char
Remove char fr om the list of keyboard macros. Use ! to remove
a macr o for input mode.
v
[ address ] v/pattern/ [ commands ]
Execute commands on all lines not containing patter n. If com-
mands ar e not specified, print all such lines. v is equivalent to g! .
Example
:v/#include/d
version
Delete all lines except "#include" lines
ve
Print the editor’s current version number and date of last change.
visual
[ address ] vi [ type ] [ count ]
Enter visual mode ( vi ) at the line specified by addr ess. Exit with
Q . type can be one of - , ˆ , or . (See the z command). count spec-
ifies an initial window size.
visual
vi [ + n ] file
Begin editing file in visual mode ( vi ), optionally at line n.
wr ite
[ address ] w [ ! ] [[ >> ] file ]
Write lines specified by addr ess to file, or write full contents of
buf fer if addr ess is not specified. If file is also omitted, save the
contents of the buffer to the current filename. If >> file is used,
write contents to the end of the specified file. Add a ! to force
the editor to write over any current contents of file.
Example
:1,10w name_list
:50w >> name_list
wr ite
Copy first 10 lines to name_list
Now append line 50
[ address ] w !command
Write lines specified by addr ess to command.
346
18 October 2001 15:12
Chapter 9 – The ex EditorExample
:1,66w !pr -h myfile | lp
wr ite
Print first page of file
wq [ ! ]
wq
Write and quit the file in one movement. The file is always writ-
ten. The ! flag forces the editor to write over any current con-
tents of file.
xit
x
Write the file if it was changed since the last write; then quit.
[ address ] ya [ char ] [ count ]
yank
Place lines specified by addr ess in named buffer char. If no char
is given, place lines in general buffer. count specifies the number
of lines to yank, starting with addr ess.
Example
:101,200 ya a
[ address ] z [ type ] [ count ]
z
Print a window of text with the line specified by addr ess at the
top. count specifies the number of lines to be displayed.
Type
+ Place specified line at the top of the window (default).
− Place specified line at the bottom of the window.
. Place specified line in the center of the window.
ˆ Print the previous window.
= Place specified line in the center of the window and leave
the current line at this line.
[ address ] !command
!
Execute Unix command in a shell. If addr ess is specified, apply
the lines contained in addr ess as standard input to command,
and replace the lines with the output and error output. (This is
called filtering the text through the command.)
Alphabetical Summary of ex Commands — ! 347
18 October 2001 15:12
→Examples
!
←
:!ls
:11,20!sort -f
=
List files in the current directory
Sort lines 11–20 of current file
[ address ] =
Print the line number of the line indicated by addr ess. Default is
line number of the last line.
<>
[ address ] < [ count ]
or
[ address ] > [ count ]
Shift lines specified by addr ess either left ( < ) or right ( > ). Only
leading spaces and tabs are added or removed when shifting
lines. count specifies the number of lines to shift, starting with
addr ess. The shiftwidth option controls the number of columns
that are shifted. Repeating the < or > incr eases the shift amount.
For example, :>>> shifts three times as much as :> .
addr ess
address
Print the lines specified in addr ess.
RETURN Print the next line in the file.
& [ address ] & [ options ] [ count ]
Repeat the previous substitute ( s ) command. count specifies the
number of lines on which to substitute, starting with addr ess.
options ar e the same as for the substitute command.
Examples
:s/Overdue/Paid/
:g/Status/&
 ̃
Substitute once on current line
Redo substitution on all “Status” lines
[ address ]  ̃ [ count ]
Replace the last used regular expression (even if from a search,
and not from an s command) with the replacement pattern from
the most recent s (substitute) command. This is rather obscure;
see Chapter 6 of Lear ning the vi Editor for details.
348
18 October 2001 15:12
Chapter 9 – The ex EditorCHAPTER 10
The sed Editor
This chapter presents the following topics:
• Conceptual overview of sed
• Command-line syntax
• Syntax of sed commands
• Group summary of sed commands
• Alphabetical summary of sed commands
For more infor mation, see sed & awk, listed in the Bibliography.
Conceptual Over view
sed is a noninteractive, or str eam-oriented, editor. It interpr ets a script and per-
for ms the actions in the script. sed is stream-oriented because, like many Unix pro-
grams, input flows through the program and is directed to standard output. For
example, sort is stream-oriented; vi is not. sed ’s input typically comes from a file
or pipe but can be directed from the keyboard. Output goes to the screen by
default but can be captured in a file or sent through a pipe instead.
Typical Uses of sed Include:
• Editing one or more files automatically.
• Simplifying repetitive edits to multiple files.
• Writing conversion programs.
349
18 October 2001 15:13sed Operates as Follows:
• Each line of input is copied into a “pattern space,” an internal buffer where
editing operations are per formed.
• All editing commands in a sed script are applied, in order, to each line of
input.
• Editing commands are applied to all lines (globally) unless line addressing
restricts the lines affected.
• If a command changes the input, subsequent commands and address tests are
applied to the current line in the pattern space, not the original input line.
• The original input file is unchanged because the editing commands modify a
copy of each original input line. The copy is sent to standard output (but can
be redir ected to a file).
• sed also maintains the “hold space,” a separate buffer that can be used to save
data for later retrieval.
Command-Line Syntax
The syntax for invoking sed has two forms:
sed [-n] [-e] ’command’ file(s)
sed [-n] -f scriptfile file(s)
The first form allows you to specify an editing command on the command line,
surr ounded by single quotes. The second form allows you to specify a scriptfile, a
file containing sed commands. Both forms may be used together, and they may be
used multiple times. If no file (s) ar e specified, sed reads from standard input.
The following options ar e recognized:
-n
Suppr ess the default output; sed displays only those lines specified with the p
command or with the p flag of the s command.
-e cmd
Next argument is an editing command. Useful if multiple scripts or commands
ar e specified.
-f file
Next argument is a file containing editing commands.
If the first line of the script is #n , sed behaves as if -n had been specified.
Syntax of sed Commands
sed commands have the general form:
[ address [ ,address ]][ ! ] command [ arguments ]
sed copies each line of input into the pattern space. sed instructions consist of
addr esses and editing commands. If the address of the command matches the line
350
18 October 2001 15:13
Chapter 10 – The sed Editorcommands consist of a single letter or symbol; they are described later, alphabeti-
cally and by group. ar guments include the label supplied to b or t , the filename
supplied to r or w , and the substitution flags for s . addr esses ar e described below.
Patter n Addressing
A sed command can specify zero, one, or two addresses. An address can be a line
number, the symbol $ (for last line), or a regular expression enclosed in slashes
( /patter n/ ). Regular expressions are described in Chapter 6, Patter n Matching.
Additionally, \n matches any newline in the pattern space (resulting from the N
command), but not the newline at the end of the pattern space.
If the Command Specifies: Then the Command is Applied to:
No address
One address Each input line.
Any line matching the address. Some commands
accept only one address: a , i , r , q , and = .
First matching line and all succeeding lines up to and
including a line matching the second address.
All lines that do not match the address.
Two comma-separated
addr esses
An address followed by !
Examples
s/xx/yy/g
/BSD/d
/ˆBEGIN/,/ˆEND/p
/SAVE/!d
/BEGIN/,/END/!s/xx/yy/g
Substitute on all lines (all occurrences).
Delete lines containing BSD .
Print between BEGIN and END , inclusive.
Delete any line that doesn’t contain SAVE .
Substitute on all lines, except between BEGIN and END .
Braces ( {} ) are used in sed to nest one address inside another or to apply multiple
commands at the same address.
[/pattern/[,/pattern/]]{
command1
command2
}
The opening curly brace must end its line, and the closing curly brace must be on
a line by itself. Be sure ther e ar e no spaces after the braces.
Syntax of sed Commands
18 October 2001 15:13
351
in the pattern space, the command is applied to that line. If a command has no
addr ess, it is applied to each input line. If a command changes the contents of the
patter n space, subsequent commands and addresses are applied to the current line
in the pattern space, not the original input line.Group Summary of sed Commands
In the lists below, the sed commands are grouped by function and are described
tersely. Full descriptions, including syntax and examples, can be found afterward
in the “Alphabetical Summary” section.
Basic Editing
a\
c\
i\
d
s
y
Append text after a line.
Replace text (usually a text block).
Insert text before a line.
Delete lines.
Make substitutions.
Translate characters (like Unix tr ).
Line Infor mation
=
l
p
Display line number of a line.
Display control characters in ASCII.
Display the line.
Input/Output Processing
n
r
w
q
Skip current line and go to line below.
Read another file’s contents into the output stream.
Write input lines to another file.
Quit the sed script (no further output).
Yanking and Putting
h
H
g
G
x
Copy into hold space; wipe out what’s there.
Copy into hold space; append to what’s there.
Get the hold space back; wipe out the destination line.
Get the hold space back; append to the pattern space.
Exchange contents of hold space and pattern space.
Branching Commands
b
t
:label
352
18 October 2001 15:13
Branch to label or to end of script.
Same as b , but branch only after substitution.
Label branched to by t or b .
Chapter 10 – The sed EditorMultiline Input Processing
Read another line of input (creates embedded newline).
Delete up to the embedded newline.
Print up to the embedded newline.
N
D
P
Alphabetical Summary of sed Commands
#
#
Begin a comment in a sed script. Valid only as the first character of the
first line. (Some versions allow comments anywhere, but it is better not to
rely on this.) If the first line of the script is #n , sed behaves as if -n had
been specified.
:
:label
Label a line in the script for transfer of control by b or t . label may contain
up to seven characters.
[ /pattern/ ] =
=
Write to standard output the line number of each line addressed by pat-
ter n.
[ address ] a\
text
a
Append text following each line matched by addr ess. If text goes over
mor e than one line, newlines must be “hidden” by preceding them with a
backslash. The text is terminated by the first newline that is not hidden in
this way. The text is not available in the pattern space, and subsequent
commands cannot be applied to it. The results of this command are sent
to standard output when the list of editing commands is finished, regard-
less of what happens to the current line in the pattern space.
Example
$a\
This goes after the last line in the file\
(marked by $). This text is escaped at the\
end of each line, except for the last one.
Alphabetical Summary of sed Commands — a
18 October 2001 15:13
353b
[ address1 [ ,address2 ]] b [ label ]
Transfer control unconditionally to : label elsewher e in script. That is, the
command following the label is the next command applied to the current
line. If no label is specified, control falls through to the end of the script,
so no more commands are applied to the current line.
Example
# Ignore tbl tables; resume script after TE:
/ˆ\.TS/,/ˆ\.TE/b
c
[ address1 [ ,address2 ]] c\
text
Replace (change) the lines selected by the address(es) with text. (See a for
details on text.) When a range of lines is specified, all lines as a group are
replaced by a single copy of text. The contents of the pattern space are, in
ef fect, deleted and no subsequent editing commands can be applied to
the pattern space (or to text).
Example
# Replace first 100 lines in a file:
1,100c\
\
<First 100 names to be supplied>
d
[ address1 [ ,address2 ]] d
Delete the addressed line (or lines) from the pattern space. Thus, the line
is not passed to standard output. A new line of input is read, and editing
resumes with the first command in the script.
Example
# delete all blank lines:
/ˆ$/d
D
[ address1 [ ,address2 ]] D
Delete first part (up to embedded newline) of multiline pattern space cre-
ated by N command and resume editing with first command in script. If
this command empties the pattern space, a new line of input is read, as if
the d command had been executed.
354
18 October 2001 15:13
Chapter 10 – The sed EditorExample
D
[ address1 [ ,address2 ]] g
# Strip multiple blank lines, leaving only one:
/ˆ$/{
N
/ˆ\n$/D
}
g
Paste the contents of the hold space (see h and H) back into the pattern
space, wiping out the previous contents of the pattern space. The Exam-
ple shows a simple way to copy lines.
Example
This script collects all lines containing the word Item: and copies them to
a place marker later in the file. The place marker is overwritten:
/Item:/H
/<Replace this line with the item list>/g
[ address1 [ ,address2 ]] G
G
Same as g , except that a newline and the hold space are pasted to the end
of the pattern space instead of overwriting it. The Example shows a sim-
ple way to “cut and paste” lines.
Example
This script collects all lines containing the word Item: and moves them
after a place marker later in the file. The original Item: lines are deleted.
/Item:/{
H
d
}
/Summary of items:/G
[ address1 [ ,address2 ]] h
h
Copy the pattern space into the hold space, a special temporary buffer.
The previous contents of the hold space are obliterated. You can use h to
save a line before editing it.
Example
# Edit a line; print the change; replay the original
/Unix/{
h
s/.* Unix \(.*\) .*/\1:/
p
→
Alphabetical Summary of sed Commands — h 355
18 October 2001 15:13h
←
x
}
Sample input:
This describes the Unix ls command.
This describes the Unix cp command.
Sample output:
ls:
This describes the Unix ls command.
cp:
This describes the Unix cp command.
H
[ address1 [ ,address2 ]] H
Append a newline and then the contents of the pattern space to the con-
tents of the hold space. Even if the hold space is empty, H still appends a
newline. H is like an incremental copy. See examples under g and G.
i
[ address ] i\
text
Insert text befor e each line matched by addr ess. (See a for details on text.)
Example
/Item 1/i\
The five items are listed below:
l
[ address1 [ ,address2 ]] l
List the contents of the pattern space, showing nonprinting characters as
ASCII codes. Long lines are wrapped.
n
[ address1 [ ,address2 ]] n
Read next line of input into pattern space. The current line is sent to stan-
dard output, and the next line becomes the current line. Control passes to
the command following n instead of resuming at the top of the script.
Example
In the ms macr os, a section header occurs on the line below an .NH
macr o. To print all lines of header text, invoke this script with sed -n :
/ˆ\.NH/{
n
p
}
356
18 October 2001 15:13
Chapter 10 – The sed Editor[ address1 [ ,address2 ]] N
N
Append next input line to contents of pattern space; the new line is sepa-
rated from the previous contents of the pattern space by a newline. (This
command is designed to allow pattern matches across two lines.) Using \n
to match the embedded newline, you can match patterns across multiple
lines. See Example under D.
Examples
Like the Example in n, but print .NH line as well as header title:
/ˆ\.NH/{
N
p
}
Join two lines (replace newline with space):
/ˆ\.NH/{
N
s/\n/ /
p
}
[ address1 [ ,address2 ]] p
p
Print the addressed line(s). Note that this can result in duplicate output
unless default output is suppressed using #n or the -n command-line
option. Typically used before commands that change flow control ( d , n , b )
and might prevent the current line from being output. See Examples under
h, n, and N.
[ address1 [ ,address2 ]] P
P
Print first part (up to embedded newline) of multiline pattern space cre-
ated by N command. Same as p if N has not been applied to a line.
Example
Suppose you have function refer ences in two formats:
function(arg1, arg2)
function(arg1,
arg2)
The following script changes argument arg2 , regardless of whether it
appears on the same line as the function name:
s/function(arg1, arg2)/function(arg1, XX)/
/function(/{
N
s/arg2/XX/
→
Alphabetical Summary of sed Commands — P 357
18 October 2001 15:13P
D
}
P
←
q
[ address ] q
Quit when addr ess is encountered. The addressed line is first written to
the output (if default output is not suppressed), along with any text
appended to it by previous a or r commands.
Examples
Delete everything after the addressed line:
/Garbled text follows:/q
Print only the first 50 lines of a file:
50q
r
[ address ] r file
Read contents of file and append after the contents of the pattern space.
Ther e must be exactly one space between the r and the filename.
Example
/The list of items follows:/r item_file
s
[ address1 [ ,address2 ]] s/pattern/replacement/ [ flags ]
Substitute replacement for patter n on each addressed line. If pattern
addr esses ar e used, the pattern // repr esents the last pattern addr ess spec-
ified. Any delimiter may be used. Use \ within patter n or replacement to
escape the delimiter. The following flags can be specified:
g Replace all instances of patter n on each addressed line, not just the
first instance.
p Print the line if a successful substitution is done. If several successful
substitutions are done, sed prints multiple copies of the line.
w file
Write the line to file if a replacement was done. A maximum of 10 dif-
fer ent files can be opened.
n
358
18 October 2001 15:13
Replace n th instance of patter n on each addressed line. n is any
number in the range 1 to 512, and the default is 1.
Chapter 10 – The sed EditorExamples
s
Her e ar e some short, commented scripts:
# Change third and fourth quote to ( and ):
/function/{
s/"/(/3
s/"/)/4
}
# Remove all quotes on a given line:
/Title/s/"//g
# Remove first colon and all quotes; print resulting lines:
s/://p
s/"//gp
# Change first "if" but leave "ifdef" alone:
/ifdef/!s/if/
if/
[ address1 [ ,address2 ]] t [ label ]
t
Test if successful substitutions have been made on addressed lines, and if
so, branch to the line marked by : label (see b and :). If label is not speci-
fied, control branches to the bottom of the script. The t command is like a
case statement in the C programming language or the various shell pro-
gramming languages. You test each case: when it’s true, you exit the con-
struct.
Example
Suppose you want to fill empty fields of a database. You have this:
ID: 1
ID: 2
ID: 3
Name: greg
Name: dale
Rate: 45
You want this:
ID: 1
ID: 2
ID: 3
Name: greg
Name: dale
Name: ????
Rate: 45
Rate: ??
Rate: ??
Phone: ??
Phone: ??
Phone: ??
You need to test the number of fields already there. Here’s the script
(fields are tab-separated):
#n
/ID/{
s/ID: .* Name: .* Rate: .*/&
Phone: ??/p
t
s/ID: .* Name: .*/&
Rate: ??
Phone: ??/p
t
s/ID: .*/&
Name: ????
Rate: ??
Phone: ??/p
}
Alphabetical Summary of sed Commands — t
18 October 2001 15:13
359w
[ address1 [ ,address2 ]] w file
Append contents of pattern space to file. This action occurs when the
command is encountered rather than when the pattern space is output.
Exactly one space must separate the w and the filename. A maximum of 10
dif ferent files can be opened in a script. This command creates the file if it
does not exist; if the file exists, its contents are overwritten each time the
script is executed. Multiple write commands that direct output to the same
file append to the end of the file.
Example
# Store tbl and eqn blocks in a file:
/ˆ\.TS/,/ˆ\.TE/w troff_stuff
/ˆ\.EQ/,/ˆ\.EN/w troff_stuff
x
[ address1 [ ,address2 ]] x
Exchange the contents of the pattern space with the contents of the hold
space. See h for an example.
y
[ address1 [ ,address2 ]] y/abc/xyz/
Translate characters. Change every instance of a to x, b to y, c to z, etc.
Example
# Change item 1, 2, 3 to Item A, B, C ...
/ˆitem [1-9]/y/i123456789/IABCDEFGHI/
360
18 October 2001 15:13
Chapter 10 – The sed EditorCHAPTER 11
This chapter presents the following topics:
• Conceptual overview
• Command-line syntax
• Patter ns and procedur es
• Built-in variables
• Operators
• Variables and array assignment
• User-defined functions
• Group listing of functions and commands
• Implementation limits
• Alphabetical summary of functions and commands
For more infor mation, see sed & awk, listed in the Bibliography.
Conceptual Over view
awk is a pattern-matching program for processing files, especially when they are
databases. The new version of awk , called nawk , provides additional capabilities. *
Every modern Unix system comes with a version of new awk , and its use is recom-
mended over old awk .
* It really isn’t so new. The additional features were added in 1984, and it was first shipped with System
V Release 3.1 in 1987. Nevertheless, the name was never changed on most systems.
361
18 October 2001 15:15
The awk Prog ramming LanguageDif ferent systems vary in what the two versions are called. Some have oawk and
awk , for the old and new versions, respectively. Others have awk and nawk . Still oth-
ers only have awk , which is the new version. This example shows what happens if
your awk is the old one:
$ awk 1 /dev/null
awk: syntax error near line 1
awk: bailing out near line 1
awk exits silently if it is the new version.
Source code for the latest version of awk , from Bell Labs, can be downloaded start-
ing at Brian Kernighan’s home page: http://cm.bell-labs.com/ ̃bwk. Michael Bren-
nan’s mawk is available via anonymous FTP from ftp://ftp.whidbey.net/pub/br ennan/
mawk1.3.3.tar.gz. Finally, the Free Software Foundation has a version of awk
called gawk , available from ftp://gnudist.gnu.or g/gnu/gawk/gawk-3.0.4.tar.gz. All
thr ee pr ograms implement “new” awk . Thus, refer ences below such as “ nawk only,”
apply to all three. gawk has additional features.
With original awk , you can:
• Think of a text file as made up of records and fields in a textual database.
• Per form arithmetic and string operations.
• Use programming constructs such as loops and conditionals.
• Produce formatted reports.
With nawk , you can also:
• Define your own functions.
• Execute Unix commands from a script.
• Process the results of Unix commands.
• Process command-line arguments more gracefully.
• Work more easily with multiple input streams.
• Flush open output files and pipes (latest Bell Labs awk ).
In addition, with GNU awk ( gawk ), you can:
• Use regular expressions to separate records, as well as fields.
• Skip to the start of the next file, not just the next record.
• Per form mor e power ful string substitutions.
• Retrieve and format system time values.
362
18 October 2001 15:15
Chapter 11 – The awk Programming LanguageCommand-Line Syntax
The syntax for invoking awk has two forms:
awk [options] ’script’ var=value file(s)
awk [options] -f scriptfile var=value file(s)
awk operates on one or more files. If none are specified (or if - is specified), awk
reads from the standard input.
The recognized options ar e:
-Ffs
Set the field separator to fs. This is the same as setting the system variable FS .
Original awk allows the field separator to be only a single character. nawk
allows fs to be a regular expression. Each input line, or record, is divided
into fields by whitespace (blanks or tabs) or by some other user-definable
record separator. Fields are referr ed to by the variables $1 , $2 ,..., $n . $0 refers
to the entire record.
-v var=value
Assign a value to variable var. This allows assignment before the script
begins execution (available in nawk only).
To print the first three (colon-separated) fields of each record on separate lines:
awk -F: ’{ print $1; print $2; print $3 }’ /etc/passwd
Mor e examples are shown in the section “Simple Pattern-Pr ocedure Examples.”
Patter ns and Procedures
awk scripts consist of patterns and procedur es:
pattern { procedure }
Both are optional. If patter n is missing, { pr ocedure } is applied to all lines; if {
pr ocedure } is missing, the matched line is printed.
Patter ns
A patter n can be any of the following:
/regular expression/
relational expression
pattern-matching expression
BEGIN
END
Patter ns and Procedur es
18 October 2001 15:15
363
You can specify a script dir ectly on the command line, or you can store a script in
a scriptfile and specify it with -f . nawk allows multiple -f scripts. Variables can be
assigned a value on the command line. The value can be a literal, a shell variable
( $name ), or a command substitution ( ‘cmd‘ ), but the value is available only after
the BEGIN statement is executed.• Expr essions can be composed of quoted strings, numbers, operators, func-
tions, defined variables, or any of the predefined variables described later in
the section “Built-in Variables.”
• Regular expressions use the extended set of metacharacters and are described
in Chapter 6, Patter n Matching.
• ˆ and $ refer to the beginning and end of a string (such as the fields), respec-
tively, rather than the beginning and end of a line. In particular, these
metacharacters will not match at a newline embedded in the middle of a
string.
• Relational expressions use the relational operators listed in the section “Oper-
ators” later in this chapter. For example, $2 > $1 selects lines for which the
second field is greater than the first. Comparisons can be either string or
numeric. Thus, depending on the types of data in $1 and $2 , awk does either
a numeric or a string comparison. This can change from one record to the
next.
• Patter n-matching expr essions use the operators  ̃ (match) and ! ̃ (don’t
match). See the section “Operators” later in this chapter.
• The BEGIN patter n lets you specify procedur es that take place befor e the first
input line is processed. (Generally, you set global variables here.)
• The END patter n lets you specify procedur es that take place after the last input
record is read.
• In nawk , BEGIN and END patter ns may appear multiple times. The procedur es
ar e merged as if there had been one large procedur e.
Except for BEGIN and END , patter ns can be combined with the Boolean operators ||
(or), && (and), and ! (not). A range of lines can also be specified using comma-
separated patterns:
pattern,pattern
Procedures
Pr ocedures consist of one or more commands, functions, or variable assignments,
separated by newlines or semicolons, and contained within curly braces. Com-
mands fall into five groups:
• Variable or array assignments
• Printing commands
• Built-in functions
• Contr ol-flow commands
• User-defined functions ( nawk only)
364
18 October 2001 15:15
Chapter 11 – The awk Programming LanguageSimple Patter n-Procedure Examples
•
Print first field of each line:
{ print $1 }
•
Print all lines that contain patter n:
/pattern/
•
Print first field of lines that contain patter n:
/pattern/ { print $1 }
•
Select records containing more than two fields:
NF > 2
•
Interpr et input records as a group of lines up to a blank line. Each line is a
single field:
BEGIN { FS = "\n"; RS = "" }
•
Print fields 2 and 3 in switched order, but only on lines whose first field
matches the string “URGENT”:
$1  ̃ /URGENT/ { print $3, $2 }
•
Count and print the number of patter n found:
/pattern/ { ++x }
END { print x }
•
Add numbers in second column and print total:
{ total += $2 }
END { print "column total is", total}
•
Print lines that contain less than 20 characters:
length($0) < 20
•
Print each line that begins with Name: and that contains exactly seven fields:
NF == 7 && /ˆName:/
•
Print the fields of each input record in reverse order, one per line:
{
for (i = NF; i >= 1; i--)
print $i
}
Patter ns and Procedur es
18 October 2001 15:15
365Built-in Var iables
Version Variable Description
awk FILENAME
FS
NF
NR
OFMT Curr ent filename
Field separator (a space)
Number of fields in current record
Number of the current record
Output format for numbers ( "%.6g" ) and for conver-
sion to string
Output field separator (a space)
Output record separator (a newline)
Record separator (a newline)
Entir e input record
n th field in current record; fields are separated by FS
OFS
ORS
RS
$0
$n
nawk
ARGC
ARGV
CONVFMT
ENVIRON
FNR
RLENGTH
RSTART
SUBSEP
gawk
ARGIND
ERRNO
FIELDWIDTHS
IGNORECASE
RT
Number of arguments on command line
An array containing the command-line arguments,
indexed from 0 to ARGC − 1
String conversion format for numbers ( "%.6g" ) (POSIX)
An associative array of environment variables
Like NR , but relative to the current file
Length of the string matched by match( ) function
First position in the string matched by match( ) func-
tion
Separator character for array subscripts ( "\ 034" )
Index in ARGV of current input file
A string indicating the error when a redir ection fails for
getline or if close( ) fails
A space-separated list of field widths to use for split-
ting up the record, instead of FS
When true, all regular expression matches, string com-
parisons, and calls to index( ) ignor e case
The text matched by RS , which can be a regular
expr ession in gawk
Operator s
The following table lists the operators, in order of increasing precedence, that are
available in awk . Note: while ** and **= ar e common extensions, they are not part
of POSIX awk .
Symbol Meaning
= += −= *= /= %= ˆ= **=
?:
|| Assignment
C conditional expression ( nawk only)
Logical OR (short-circuit)
Logical AND (short-circuit)
&&
366
18 October 2001 15:15
Chapter 11 – The awk Programming LanguageMeaning
Array membership ( nawk only)
Match regular expression and negation
Relational operators
Concatenation
Addition, subtraction
Multiplication, division, and modulus (remainder)
Unary plus and minus, and logical negation
Exponentiation
Incr ement and decrement, either prefix or postfix
Field refer ence
(blank)
+ -
* / %
+ - !
ˆ **
++ --
$
Symbol in
 ̃ ! ̃
< <= > >= != ==
Variables and Arra y Assignments
Variables can be assigned a value with an = sign. For example:
FS = ","
Expr essions using the operators + , - , / , and % (modulo) can be assigned to vari-
ables.
Arrays can be created with the split( ) function (see below), or they can simply
be named in an assignment statement. Array elements can be subscripted with
numbers (array [1] , ..., array [ n ] ) or with strings. Arrays subscripted by strings are
called associative arrays. * For example, to count the number of widgets you have,
you could use the following script:
/widget/ { count["widget"]++ }
END
{ print count["widget"] }
Count widgets
Print the count
You can use the special for loop to read all the elements of an associative array:
for (item in array)
process array[item]
The index of the array is available as item , while the value of an element of the
array can be refer enced as array[item] .
You can use the operator in to see if an element exists by testing to see if its index
exists ( nawk only):
if (index in array)
...
This sequence tests that array[index] exists, but you cannot use it to test the value
of the element refer enced by array[index] .
You can also delete individual elements of the array using the delete statement
( nawk only).
* In fact, all arrays in awk ar e associative; numeric subscripts are converted to strings before using them as
array subscripts. Associative arrays are one of awk ’s most powerful features.
Variables and Array Assignments
18 October 2001 15:15
367Escape Sequences
Within string and regular expression constants, the following escape sequences
may be used. Note: The \x escape sequence is a common extension; it is not part
of POSIX awk .
Sequence Meaning Sequence Meaning
\a
\b
\f
\n
\r
\t Alert (bell)
Backspace
For m feed
Newline
Carriage retur n
Tab \v
\\
\nnn
\xnn
\"
\/ Vertical tab
Literal backslash
Octal value nnn
Hexadecimal value nn
Literal double quote (in strings)
Literal slash (in regular expressions)
User-Defined Functions
nawk allows you to define your own functions. This makes it easy to encapsulate
sequences of steps that need to be repeated into a single place, and reuse the
code from anywhere in your program. Note: for user-defined functions, no space
is allowed between the function name and the left parenthesis when the function
is called.
The following function capitalizes each word in a string. It has one parameter,
named input , and five local variables, which are written as extra parameters.
# capitalize each word in a string
function capitalize(input,
result, words, n, i, w)
{
result = ""
n = split(input, words, " ")
for (i = 1; i <= n; i++) {
w = words[i]
w = toupper(substr(w, 1, 1)) substr(w, 2)
if (i > 1)
result = result " "
result = result w
}
return result
}
# main program, for testing
{ print capitalize($0) }
With this input data:
A test line with words and numbers like 12 on it.
This program produces:
A Test Line With Words And Numbers Like 12 On It.
368
18 October 2001 15:15
Chapter 11 – The awk Programming LanguageGroup Listing of awk Functions and
Commands
The following table classifies awk functions and commands.
String
Functions Contr ol Flow
Statements I/O
Processing Time
Functions Program-
ming
atan2 a
cos a
exp
int
log
rand a
sin a
sqrt
srand a gensub b
gsub a
index
length
match a
split
sprintf
sub a
substr
tolower a
toupper a break
continue
do / while a
exit
for
if
return a
while close a
fflush c
getline a
next
nextfile c
print
printf strftime b
systime b delete a
function a
system a
a
b
c
Available in nawk .
Available in gawk .
Available in Bell Labs awk and gawk .
Implementation Limits
Many versions of awk have various implementation limits, on things such as:
• Number of fields per record
• Number of characters per input record
• Number of characters per output record
• Number of characters per field
• Number of characters per printf string
• Number of characters in literal string
• Number of characters in character class
• Number of files open
• Number of pipes open
• The ability to handle 8-bit characters and characters that are all zero (ASCII
NUL)
gawk does not have limits on any of these items, other than those imposed by the
machine architectur e and/or the operating system.
Implementation Limits
18 October 2001 15:15
369
Arithmetic
FunctionsAlphabetical Summary of Functions and
Commands
The following alphabetical list of keywords and functions includes all that are
available in awk , nawk , and gawk . nawk includes all old awk functions and keywords,
plus some additional ones (marked as {N}). gawk includes all nawk functions and
keywords, plus some additional ones (marked as {G}). Items marked with {B} ar e
available in the Bell Labs awk . Items that aren’t marked with a symbol are available
in all versions.
atan2
atan2(y, x)
Retur n the arctangent of y/x in radians. {N}
break
break
Exit from a while , for , or do loop.
close
close(filename-expr)
close(command-expr)
In most implementations of awk , you can have only 10 files open
simultaneously and one pipe. Therefor e, nawk pr ovides a close func-
tion that allows you to close a file or a pipe. It takes as an argument
the same expression that opened the pipe or file. This expression
must be identical, character by character, to the one that opened the
file or pipe; even whitespace is significant. {N}
continue
continue
Begin next iteration of while , for , or do loop.
cos
cos(x)
Retur n the cosine of x, an angle in radians. {N}
delete
delete array[element]
delete array
Delete element fr om array. The brackets are typed literally. The sec-
ond form is a common extension, which deletes all elements of the
array at one shot. {N}
370
18 October 2001 15:15
Chapter 11 – The awk Programming Languagedo
do
statement
while (expr)
Looping statement. Execute statement, then evaluate expr and, if true,
execute statement again. A series of statements must be put within
braces. {N}
exit
Exit from script, reading no new input. The END pr ocedure, if it exists,
will be executed. An optional expr becomes awk ’s retur n value.
exp
exp(x)
Retur n exponential of x (e x ).
fflush( [ output-expr ] )
fflush
Flush any buffers associated with open output file or pipe output-
expr. {B}
gawk extends this function. If no output-expr is supplied, it flushes
standard output. If output-expr is the null string ( "" ), it flushes all
open files and pipes. {G}
for (init-expr; test-expr; incr-expr)
statement
for
C-style looping construct. init-expr assigns the initial value of a
counter variable. test-expr is a relational expression that is evaluated
each time before executing the statement. When test-expr is false, the
loop is exited. incr-expr incr ements the counter variable after each
pass. All the expressions are optional. A missing test-expr is consid-
er ed to be true. A series of statements must be put within braces.
for (item in array)
statement
for
Special loop designed for reading associative arrays. For each ele-
ment of the array, the statement is executed; the element can be ref-
er enced by array [item]. A series of statements must be put within
braces.
Alphabetical Summary of Functions and Commands — for
18 October 2001 15:15
371
exit [ expr ]function
function name(parameter-list) {
statements
}
Cr eate name as a user-defined function consisting of awk statements
that apply to the specified list of parameters. No space is allowed
between name and the left paren when the function is called. {N}
getline
getline [ var ] [ < file ]
or
command | getline [ var ]
Read next line of input. Original awk doesn’t support the syntax to
open multiple input streams. The first form reads input from file; the
second form reads the output of command. Both forms read one
record at a time, and each time the statement is executed, it gets the
next record of input. The record is assigned to $0 and is parsed into
fields, setting NF , NR and FNR . If var is specified, the result is assigned
to var, and $0 and NF ar en’t changed. Thus, if the result is assigned to
a variable, the current record doesn’t change. getline is actually a
function and retur ns 1 if it reads a record successfully, 0 if end-of-file
is encountered, and −1 if it’s otherwise unsuccessful. {N}
gensub
gensub(r, s, h [ , t ] )
General substitution function. Substitute s for matches of the regular
expr ession r in the string t. If h is a number, replace the h th match. If
it is "g" or "G" , substitute globally. If t is not supplied, $0 is used.
Retur n the new string value. The original t is not modified. (Compare
gsub and sub.) {G}
gsub
gsub(r, s [ , t ] )
Globally substitute s for each match of the regular expression r in the
string t. If t is not supplied, defaults to $0 . Retur n the number of sub-
stitutions. {N}
if
if (condition)
statement
[ else
statement ]
If condition is true, do statement(s); otherwise do statement in the
optional else clause. The condition can be an expression using any
of the relational operators < , <= , == , != , >= , or > , as well as the array
membership operator in , and the pattern-matching operators  ̃ and ! ̃
372
18 October 2001 15:15
Chapter 11 – The awk Programming Language(e.g., if ($1  ̃ /[Aa].*/) ). A series of statements must be put within
braces. Another if can directly follow an else in order to produce a
chain of tests or decisions.
index(str, substr)
if
index
Retur n the position (starting at 1) of substr in str, or zer o if substr is
not present in str.
int
int(x)
Retur n integer value of x by truncating any fractional part.
length( [ arg ] )
length
Retur n length of ar g, or the length of $0 if no argument.
log
log(x)
Retur n the natural logarithm (base e) of x.
match
match(s, r)
Function that matches the pattern, specified by the regular expression
r, in the string s, and retur ns either the position in s, wher e the match
begins, or 0 if no occurrences are found. Sets the values of RSTART
and RLENGTH to the start and length of the match, respectively. {N}
next
next
Read next input line and start new cycle through pattern/pr ocedures
statements.
nextfile
nextfile
Stop processing the current input file and start new cycle through
patter n/procedur es statements, beginning with the first record of the
next file. {B} {G}
print [ output-expr [, ...]] [ dest-expr ]
pr int
Evaluate the output-expr and direct it to standard output, followed by
the value of ORS . Each comma-separated output-expr is separated in
the output by the value of OFS . With no output-expr, print $0 .
→
Alphabetical Summary of Functions and Commands — print
18 October 2001 15:15
373Output Redirections
pr int
←
dest-expr is an optional expression that directs the output to a file or
pipe.
> file
Dir ects the output to a file, overwriting its previous contents.
>> file
Appends the output to a file, preserving its previous contents. In
both cases, the file is created if it does not already exist.
| command
Dir ects the output as the input to a Unix command.
Be careful not to mix > and >> for the same file. Once a file has been
opened with > , subsequent output statements continue to append to
the file until it is closed.
Remember to call close() when you have finished with a file or pipe.
If you don’t, eventually you will hit the system limit on the number of
simultaneously open files.
pr intf
printf(format [ , expr-list ] ) [ dest-expr ]
An alternative output statement borrowed from the C language. It can
pr oduce for matted output and also output data without automatically
pr oducing a newline. for mat is a string of format specifications and
constants. expr-list is a list of arguments corresponding to format
specifiers. See pr int for a description of dest-expr.
for mat follows the conventions of the C-language printf(3S) library
function. Here are a few of the most common formats:
%s
%d
%n.mf
%[-]nc
A string.
A decimal number.
A floating-point number; n = total number of digits. m
= number of digits after decimal point.
n specifies minimum field length for format type c,
while - left-justifies value in field; otherwise, value is
right-justified.
Like any string, for mat can also contain embedded escape sequences:
\n (newline) or \t (tab) being the most common. Spaces and literal
text can be placed in the for mat argument by quoting the entire argu-
ment. If there are multiple expressions to be printed, there should be
multiple formats specified.
Example
Using the script:
374
18 October 2001 15:15
Chapter 11 – The awk Programming Language{ printf("The sum on line %d is %.0f.\n", NR, $1+$2) }
pr intf
The following input line:
5
5
pr oduces this output, followed by a newline:
The sum on line 1 is 10.
Generate a random number between 0 and 1. This function retur ns
the same series of numbers each time the script is executed, unless
the random number generator is seeded using srand( ) . {N}
return [ expr ]
retur n
Used within a user-defined function to exit the function, retur ning
value of expr. The retur n value of a function is undefined if expr is
not provided. {N}
sin
sin(x)
Retur n the sine of x, an angle in radians. {N}
split(string, array [ , sep ] )
split
Split string into elements of array array [1] ,...,array [ n ] . The string is
split at each occurrence of separator sep. If sep is not specified, FS is
used. The number of array elements created is retur ned.
sprintf(format [ , expressions ] )
spr intf
Retur n the formatted value of one or more expr essions, using the
specified for mat (see pr intf). Data is formatted but not printed.
sqr t
sqrt(arg)
Retur n squar e root of ar g.
Alphabetical Summary of Functions and Commands — sqrt
18 October 2001 15:15
375
rand
rand()srand
srand( [ expr ] )
Use optional expr to set a new seed for the random number genera-
tor. Default is the time of day. Return value is the old seed. {N}
strftime
strftime( [ format [ ,timestamp ]] )
For mat timestamp according to for mat. Retur n the formatted string.
The timestamp is a time-of-day value in seconds since midnight, Jan-
uary 1, 1970, UTC. The for mat string is similar to that of sprintf . (See
the Example for systime.) If timestamp is omitted, it defaults to the
curr ent time. If for mat is omitted, it defaults to a value that produces
output similar to that of date . {G}
sub
sub(r, s [ , t ] )
Substitute s for first match of the regular expression r in the string t. If
t is not supplied, defaults to $0 . Retur n 1 if successful; 0 otherwise.
{N}
substr
substr(string, beg [, len ] )
Retur n substring of string at beginning position beg and the charac-
ters that follow to maximum specified length len. If no length is
given, use the rest of the string.
system
system(command)
Function that executes the specified command and retur ns its status.
The status of the executed command typically indicates success or
failur e. A value of 0 means that the command executed successfully.
A nonzer o value indicates a failure of some sort. The documentation
for the command you’re running will give you the details.
The output of the command is not available for processing within the
awk script. Use command | getline to read the output of a command
into the script. {N}
systime
systime( )
Retur n a time-of-day value in seconds since midnight, January 1,
1970, UTC. {G}
Example
Log the start and end times of a data-processing program:
376
18 October 2001 15:15
Chapter 11 – The awk Programming LanguageBEGIN {
now = systime()
mesg = strftime("Started at %m/%d/%Y %H:%M:%S", now)
print mesg
systime
}
process data ...
END {
now = systime()
mesg = strftime("Ended at %m/%d/%Y %H:%M:%S", now)
print mesg
}
tolower
tolower(str)
Translate all uppercase characters in str to lowercase and retur n the
new string. * {N}
toupper
toupper(str)
Translate all lowercase characters in str to uppercase and retur n the
new string. {N}
while
while (condition)
statement
Do statement while condition is true (see if for a description of
allowable conditions). A series of statements must be put within
braces.
pr intf Formats
For mat specifiers for printf and sprintf have the following form:
% [ flag ][ width ][ .precision ] letter
The control letter is requir ed. The format conversion control letters are as follows.
Character Description
c
d
i
e
E
f ASCII character
Decimal integer
Decimal integer (added in POSIX)
Floating-point format ([-]d.pr ecision e [+-]dd)
Floating-point format ([-]d.pr ecision E [+-]dd)
Floating-point format ([-]ddd.pr ecision)
* Very early versions of nawk don’t support tolower() and toupper() . However, they are
now part of the POSIX specification for awk , and are included in the SVR4 nawk .
Alphabetical Summary of Functions and Commands
18 October 2001 15:15
377Character Description
g
G
o
s
u
x
X
% e or f conversion, whichever is shortest, with trailing zeros removed
E or f conversion, whichever is shortest, with trailing zeros removed
Unsigned
String
Unsigned
Unsigned
Unsigned
Literal %
octal value
decimal value
hexadecimal number; uses a - f for 10 to 15
hexadecimal number; uses A - F for 10 to 15
The optional flag is one of the following.
Character Description
- Left-justify the formatted value within the field.
Pr efix positive values with a space and negative values with a
minus.
Always prefix numeric values with a sign, even if the value is posi-
tive.
Use an alternate form: %o has a preceding 0 ; %x and %X ar e pr efixed
with 0x and 0X , respectively; %e , %E , and %f always have a decimal
point in the result; and %g and %G do not have trailing zeros
removed.
Pad output with zeros, not spaces. This happens only when the
field width is wider than the converted result.
space
+
#
0
The optional width is the minimum number of characters to output. The result will
be padded to this size if it is smaller. The 0 flag causes padding with zeros; other-
wise, padding is with spaces.
The pr ecision is optional. Its meaning varies by control letter, as shown in this
table.
Conversion
%d ,
%u ,
%e ,
%g ,
%s
%i , %o
%x , %X
%E , %f
%G
378
18 October 2001 15:15
Precision Means
The minimum number of digits to print
The number of digits to the right of the decimal point
The maximum number of significant digits
The maximum number of characters to print
Chapter 11 – The awk Programming LanguagePART III
Te xt For matting
Part III describes the Unix tools for document formatting. These tools are no
longer part of standard SVR4 but are provided in the BSD compatibility packages
that come with SVR4. They do come as a standard part of Solaris (with the excep-
tion of pic ).
Many Unix vendors supply an enhanced set of formatting tools—in some
cases, as an extra cost option.
• Chapter 12, nr off and trof f
• Chapter 13, mm Macros
• Chapter 14, ms Macros
• Chapter 15, me Macros
• Chapter 16, man Macros
• Chapter 17, tr off Prepr ocessors
18 October 2001 15:3818 October 2001 15:38CHAPTER 12
nroff and troff
This chapter presents the following topics:
• Intr oduction
• Command-line invocation
• Conceptual overview
• Default operation of requests
• Group summary of requests
• Alphabetical summary of requests
• Escape sequences
• Predefined number registers
• Special characters
Introduction
nroff and troff ar e Unix programs for formatting text files. nroff is designed to
for mat output for line printers and letter-quality printers; you can also display the
output on your screen. troff is designed for typesetting and laser printers. The
same commands work for both programs; nroff simply ignores commands it can’t
implement.
nroff and troff ar e not part of standard SVR4 but are included in the compatibil-
ity packages. It is this version that is documented here. In addition, we make refer-
ences to ditroff , or device-independent troff , which is a later version of troff .
For the most part, ditroff works the same as troff ; wher e ther e ar e distinctions,
the original troff is referr ed to as otroff . The Solaris troff is the device-indepen-
dent version and is a standard part of the Solaris distribution.
381
18 October 2001 15:19Some Unix vendors include a vendor-specific version of nroff / troff . Others don’t
include them at all. Various enhanced packages are also available, such as sqtroff
fr om SoftQuad or groff fr om the Free Software Foundation. * These packages
include additional requests or escape sequences. For completely accurate informa-
tion, you should consult the text-processing manuals that come with your specific
version of Unix.
Finally, if the checknr pr ogram is available, you should use it on your troff docu-
ments. Note: the device-independent version of troff is 8-bit clean. You may not
be so lucky if your system only supplies otroff .
Command-Line Invocation
nroff and troff ar e invoked from the command line as follows:
nroff [options] [files]
troff [options] [files]
Many of the options are the same for both formatters.
nroff/troff Options
-Fdir
Search for font tables in directory dir.
-i
Read standard input after files ar e pr ocessed.
-mname
Pr epend a macr o file to input files. Historically, one of /usr/lib/tmac/
tmac. name or /usr/share/lib/tmac/tmac. name wer e the locations of the
macr os for name. Solaris uses /usr/share/lib/tmac/ name. The actual loca-
tion and filename(s) vary among differ ent Unix systems.
-nN First output page has page number N.
-olist
Print pages contained only in the comma-separated list. Page ranges can be
specified as n–m, - m (first page through m), or n - (n thr ough end of file).
-raN
Set register a to N. The register a is restricted to one-character names.
-sN Stop every n pages. This allows changing a paper cassette. Resume by press-
ing Return (in nroff ) or by pressing the start button on the typesetter (in
troff ).
* groff in particular is worth noting; it has numerous useful extensions over standard troff and is very
stable. (See http://www.gnu.or g).
382
18 October 2001 15:19
Chapter 12 – nrof f and trof f-Tname
Pr epar e output designed for printer or typesetter name. For device names,
see your specific documentation or a local expert.
-uN The font in position 3 is overstruck N times. Typically used to adjust the
weight of the bold font.
-z
Discard output except messages generated by .tm request ( otroff only).
nroff-Only Options
When justifying output lines, space words equally (using terminal resolution
instead of full space increments).
-h Hasten output by replacing eight horizontal spaces with a tab.
-q Invoke simultaneous input/output of .rd requests.
-e
troff-Only Options
-a For mat a printable ASCII approximation. Useful for finding page counts with-
out producing printed output.
-f Don’t stop the typesetter when formatting is done ( otroff only).
-N Run as nroff instead of as troff (r ecent versions of ditroff only).
Examples
Run chap1 thr ough the tbl pr eprocessor, then format the result using the mm
macr os, with register N set to 5 (sets the page-numbering style), etc.:
tbl chap1 | troff -mm -rN5 | spooler &
For mat chap2 using the ms macr os; the first page is 7, but print only pages 8–10,
15, and 18 through the end of the file:
nroff -ms -n7 -o8-10,15,18- chap2 | col > chap2.txt &
Conceptual Over view
This sections provides a brief overview of how to prepar e input for nroff and
troff . It presents the following topics:
• Requests and macros
• Common requests
• Specifying measurements
• Requests that cause a line break
• Embedded formatting controls
Conceptual Overview
18 October 2001 15:19
383Requests and Macros
For matting is specified by embedding brief codes (called requests) into the text
source file. These codes act as directives to nroff and troff when they run. For
example, to center a line of text, type the following code in a file:
.ce
This text should be centered.
When formatted, the output appears centered:
This text should be centered.
Ther e ar e two types of formatting codes:
• Requests, which provide the most elementary instructions
• Macr os, which are predefined combinations of requests
Requests, also known as primitives, allow direct control of almost any feature of
page layout and formatting. Macros combine requests to create a total effect. In a
sense, requests are like atoms, and macros are like molecules.
All nroff / troff requests are two-letter lowercase names. Macros are usually upper-
or mixed-case names.
See Chapter 13, mm Macros, Chapter 14, ms Macros, Chapter 15, me Macros, and
Chapter 16, man Macros, for more infor mation on the standard macro packages.
Common Requests
The most commonly used requests are:
.ad
.br
.bp
.ce
.de
.ds
.fi
.ft
.in
.ls
.ll
.na
.ne
.nf
.nr
.po
.ps
.so
.sp
.ta
.ti
.vs
For example, a simple macro could be written as follows:
.
.de
.sp
.in
.ta
.ps
.vs
.ft
.br
.ne
.nf
..
384
18 October 2001 15:19
Ps
.5
1i
10n +10n
8
10
CW
3
\"
\"
\"
\"
\"
\"
\"
\"
\"
\"
\"
\"
Ps macro - show literal text display
Define a macro named "Ps"
Space down half a line
Indent one inch
Set new tabstops
Use 8-point type
Use 10-point vertical spacing
Use constant width font
Break line (.ne begins count on next line)
Keep 3 lines together
No-fill mode (output lines as is)
End macro definition
Chapter 12 – nrof f and trof fSpecifying Measurements
With some requests, the numeric argument can be followed by a scale indicator
that specifies a unit of measurement. The valid indicators and their meanings are
listed in the following table. Note that all measurements are inter nally converted to
basic units (this conversion is shown in the last column). A basic unit is the small-
est possible size on the printer device. The device resolution (e.g., 600 dots per
inch) determines the size of a basic unit. Also, T specifies the current point size,
and R specifies the device resolution.
Meaning Equivalent
Unit # of Basic Units
c
i Centimeter
Inch R / 2.54
R
m
n
p
P
u
v Em
En
Point
Pica
Basic unit
Vertical line space
Default 0.394 inches
6 picas or 72
points
T points
0.5 em
1/72 inch
1/6 inch
None
R × T / 72
R × T / 144
R / 72
R /6
1
(Curr ent value in basic units)
It is worth noting that all numbers in nroff / troff ar e stor ed inter nally using inte-
gers. This applies even to apparently fractional values in commands such as:
.sp .5
which spaces down one-half of the current vertical spacing.
An “em” is the width of the letter “m” in the current font and point size. An “en” is
the width of the letter “n” in the current font and point size. Note that in nroff , an
“em” and an “en” are the same—the width of one character.
You can specify a scale indicator for any of the requests in the following table,
except for .ps , which always uses points. If no unit is given, the default unit is
used. (The second column lists the scale indicators as described in the previous
table.) For horizontally oriented requests, the default unit is ems. For vertically ori-
ented requests, the default is usually vertical lines.
Request Default Scale Request Default Scale
.ch
.dt
.ie
.if
.in
.ll
.lt
.mc v
v
u
u
m
m
m
m .pl
.po
.ps
.rt
.sp
.sv
.ta
.ti v
v
p
v
v
v
m
m
Conceptual Overview
18 October 2001 15:19
385
Scale
IndicatorRequest Default Scale Request Default Scale
.ne
.nr v
u .vs
.wh p
v
Requests That Cause a Line Break
A line break occurs when nroff / troff writes the current output line, even if it is
not completely filled. Most requests can be interspersed with text without causing
a line break in the output. The following requests cause a break:
.bp
.br
.ce
.cf
.fi
.fl
.in
.nf
.sp
.ti
If you need to prevent these requests from causing a break, begin them with the
“no break” control character (normally ’ ) instead of a dot ( . ). For example, .sp
takes effect right away, but ’sp waits until the output line is completely filled.
Only then does it add a line space.
Embedded For matting Controls
In addition to requests and macros, which are written on their own separate lines,
you may also have formatting controls embedded within your text lines. These
typically provide the following capabilities:
General formatting
Considerable formatting control is available, such as switching fonts ( \f ),
changing point sizes ( \s ), computing widths ( \w ), and many other things. For
example:
This text is in \fIitalic\fR, but this is in roman.
This text is \s-2VERY SMALL\s0 but this text is not.
Special characters
Pr edefined special typesetting characters, such as the bullet symbol \(bu (•),
the left hand \(lh ( ☞), and the right hand \(rh (☞).
Strings
User-defined sequences of characters, like macros, but usable inline. For
example:
.\" define a shorthand for UNIX
.ds UX the \s-1UNIX\s0 Operating System
...
Welcome to \*(UX.
While \*(UX may appear daunting at first,
it is immensely powerful. ...
Number registers
Like variables in programming languages, number registers store numeric val-
ues that can be printed in a range of formats (decimal, roman, etc.). They can
be set to auto-increment or auto-decrement, and are particularly useful when
writing macro packages, for managing automatic numbering of headings,
footnotes, figures, and so on. For example:
386
18 October 2001 15:19
Chapter 12 – nrof f and trof f.nr Cl 0 1 \" Chapter Level
.de CH
.bp
\\n+(Cl. \\$1 \\$2 \\$3
..
This creates a macro that uses register Cl as the “chapter level.” The first
thr ee arguments to the macro become the chapter title. The extra backslashes
ar e needed inside the macro definition.
Later sections in this chapter describe the predefined special characters, strings and
number registers, and all of the escape sequences that are available.
Default Operation of Requests
envir onment, and those that can are listed in Table 12-1. The second column lists
the initial or default value in effect before the request is used. If no initial value
applies, a hyphen (–) is used. The third column shows the effect if a request’s
optional argument is not used. Here, a hyphen is used if the request doesn’t
accept an argument or if the argument is requir ed.
Table 12−1: Requests That Affect the Default Environment
Request Initial Value If No Argument Descr iption
.ad Justify Justify Adjust margins.
.af Lowercase arabic – Assign a format to a register.
.am – End call with .. Append to a macro.
.bd Of f – Embolden font.
.c2 ’ ’ Set no-break control
character.
.cc . . Set control character.
.ce Of f Center one line Center lines.
.ch – Tur n of f trap Change trap position.
.cs Of f – Set constant-width spacing.
.cu Of f One line Continuous underline/
italicize.
.da – End the diversion Divert text and append to a
macr o.
.de – End macro with .. Define a macro.
.di – End the diversion Divert text to a macro.
.dt – Tur n of f trap Set a diversion trap.
.ec \ \ Set escape character.
.eo On – Turn off escape character.
Default Operation of Requests
18 October 2001 15:19
387
nroff / troff initializes the formatting environment. For example, unless you reset
the line length, nroff / troff uses 6.5 inches. Most requests can change the defaultTable 12−1: Requests That Affect the Default Environment (continued)
Request Initial Value If No Argument Descr iption
.ev 0 Pr evious
envir onment Change environment (push
down).
.fc Of f Of f Set field delimiter and pad
character.
.fi Fill – Fill lines.
.fp 1=R – Mount font (on positions
1–4).
2=I
3=B
4=S
.ft Roman Previous font Set font.
.hc \% \% Set hyphenation character.
.hy Mode 1 Mode 1 Set hyphenation mode.
.ig – End with .. Suppr ess (ignor e) text in
output.
.in 0 Previous indent Indent.
.it – Tur n of f trap Set a trap for input line
counting.
.lc . None Set leader character.
.lg Of f ( nroff ) On Ligatur e mode.
On ( troff )
.ll 6.5 inches Pr evious line
length Set line length.
.ls Single-space Previous mode Set line spacing.
.lt 6.5 inches Pr evious title
length Set length of title.
.mc – Tur n of f Set the margin character.
.mk – Inter nal Mark vertical position.
.na Adjust – Don’t adjust margins.
.ne – One vertical line Keep lines on same page if
ther e’s room.
.nf Fill – Don’t fill lines.
.nh On – Turn off hyphenation.
.nm Of f Of f Line-numbering mode.
.nn – One line Don’t number next N lines.
.ns Space mode – Enable no-space mode.
.nx – End of file Go to a file.
388
18 October 2001 15:19
Chapter 12 – nrof f and trof fTable 12−1: Requests That Affect the Default Environment (continued)
Request Initial Value If No Argument Descr iption
.pc % Of f Set page character.
.pl 11 inches 11 inches Set page length.
.pn Page 1 – Set page number.
.po 0 ( nroff ); 26/27
inch ( otroff ) Pr evious of fset Change page offset.
.ps 10 Pr evious point
size Set point size.
.rd – Ring bell Read from the terminal.
.rt – Inter nal Retur n to marked vertical
place.
.sp – One vertical line Output blank spacing.
.ss 12/36 em Ignor ed Set character spacing.
.sv – One vertical line Save (store) spacing.
.ta 8 en ( nroff ); 1/2
inch ( troff ) – Define tab settings.
.tc – – Set tab repetition character.
.ti 0 – Indent next line.
.tm – Newline Print a message, then
continue.
.tr – – Translate pairs of characters
on output.
.uf Italic Italic Set font for underlining.
.ul 0 One line Underline/italicize.
.vs 1/6 inch ( nroff );
12 points ( troff ) Pr evious value Set vertical spacing for lines.
1 inch ( ditroff )
Note: the canonical refer ence for nroff / troff is Bell Labs Computing Science Tech-
nical Report #54, Troff User’s Manual, by J.F. Ossanna and B.W. Ker nighan. It is
available in PostScript from http://cm.bell-labs.com/cm/cs/cstr/54.ps.gz. You should
read it if you plan to do any serious work in nroff / troff (such as writing or modi-
fying macro packages). This document explains the ideas of diversions, environ-
ments, fields, registers, strings, and traps.
Default Operation of Requests
18 October 2001 15:19
389
Comments in nroff / troff begin with \" . Lines beginning with . that contain an
unknown request are ignor ed. In general, don’t put leading whitespace on your
text lines. This causes a break, and nroff and troff honors the leading whitespace
literally.Group Summary of Requests
As an aid to finding the right request for a particular task, the 85 nroff / troff
requests are listed below by subject.
Character Output
.cu
.lg
.tr
.uf
.ul
Continuous underline/italicize.
Ligatur e mode.
Translate characters.
Set font for underlining.
Underline/italicize.
Font and Character Size
.bd
.cs
.fp
.ft
.ps
.ss
Embolden font.
Set constant-width spacing.
Mount font (on positions 1–4).
Set font.
Set point size.
Set character spacing.
Conditional Processing
.el
.ie
.if
Else portion of if-else.
If portion of if-else.
If statement.
Customizing n/troff Requests
.c2
.cc
.ec
.eo
.hc
.pc
Set no-break control character.
Set control character.
Set escape character.
Turn off escape character.
Set hyphenation character.
Set page character.
Hor izontal Positioning
.in
.ll
.lt
.po
.ti
.tl
Indent.
Set line length.
Set length of title.
Change page offset.
Indent next line.
Specify three-part title.
Hyphenation
.hw
.hy
.nh
Set hard-coded hyphenation.
Set hyphenation mode.
Turn off hyphenation.
Diagnostic Output
.fl
.ig
.lf
.mc
.pm
.tm Print a message, then abort.
Flush output buffer.
Suppr ess (ignor e) text in output.
Set line number and filename.
Set the margin character.
Print name and size of macros.
Print a message, then continue.
390 Chapter 12 – nrof f and trof f
.ab
18 October 2001 15:19
Input/Output Switching
.cf
.ex
.nx
.pi
.rd
.so
.sy
Copy raw file to output.
Exit from nroff / troff .
Go to a file.
Pipe output to a Unix command.
Read from the terminal.
Go to a file, then retur n.
Execute a Unix command.Line Numbering
.nm
.nn
Line-numbering mode.
Don’t number lines.
Ta bs
.fc
.lc
.ta
.tc
Set a field delimiter and a pad character.
Set leader character.
Define tab settings.
Set tab character.
Macro and String Processing
.am
.as
.ch
.da
.de
Number Register s
.af
.nr
.rr
Assign a format to a register.
Define a number register.
Remove a number register.
Te xt Adjustments
.ad
.br
.ce
.fi
.na
.nf
Adjust margins.
Br eak the output line.
Center lines.
Fill lines.
Don’t adjust margins.
Don’t fill lines.
.di
.ds
.dt
.em
.ev
.it
.rm
.rn
.wh
Append to a macro.
Append to a string.
Change trap position.
Divert text; append to a macro.
Define a macro.
Divert text to a macro.
Define a string.
Set a diversion trap.
Set the ending macro.
Change environment.
Set trap for input line counting.
Remove macro, request, or string.
Rename macro, request, or string.
Set a page trap.
Vertical Spacing
.ls
.ns
.os
.rs
.sp
.sv
.vs
Line spacing (e.g., single-spaced).
Enable no-space mode.
Output vertical space from .sv .
Restor e spacing mode.
Output blank spacing.
Save (store) spacing.
Set vertical spacing for lines.
Pagination
.bp
.mk
.ne
.pl
.pn
.rt
Begin a new page.
Mark vertical position.
Keep lines on same page if there’s room.
Set page length.
Set page number.
Retur n to marked vertical place.
Gr oup Summary of Requests
18 October 2001 15:19
391Alphabetical Summary of Requests
.a b
.ab [ text ]
Abort and print text as message. If text is not specified, the message User
Abort is printed.
.ad
.ad [ c ]
Adjust output lines according to format c. Fill mode must be on (see .fi).
With no argument, same as .ad 1 . The current adjustment mode is stored
in register .j , with the following values: 0= l , 1= b , 3= c , 5= r (see .na).
Values for c
b
n
c
l
r
.af
Lines
Lines
Lines
Lines
Lines
are
are
are
are
are
justified.
justified.
center ed.
flush left.
flush right.
.af r c
Assign format c to register r.
Values for c
1
001
i
I
a
A
0, 1, 2, etc.
000, 001, 002, etc.
Lowercase roman numerals.
Uppercase roman numerals.
Lowercase alphabetic.
Uppercase alphabetic.
Example
Paginate front matter using the ms macr os:
.af PN i
392
18 October 2001 15:19
Chapter 12 – nrof f and trof f
Set page number register PN to i.am xx [ yy ]
.am
Take the requests (etc.) that follow and append them to the definition of
macr o xx ; end the append at call of . yy (or .. , if yy is omitted).
.as
.as xx string
Append string to string register xx. string may contain spaces and is ter-
minated by a newline. An initial quote ( " ) is ignor ed.
.bd [ s ] f n
.bd
Overstrike characters in font f n times. If s is specified, overstrike charac-
ters in special font n times when font f is in effect.
.bp [ n ]
.bp
Begin new page. Number next page n.
.br
.br
Br eak to a newline (output partial line).
.c2
.c2 c
Use c (instead of ’ ) as the no-break control character.
.cc
.cc c
Use c (instead of . ) as the control character to introduce requests and
macr os.
.ce [ n ]
.ce
Center next n lines (default is 1); if n is 0, stop centering. n applies only
to lines containing output text. Blank lines don’t count.
.cf
.cf file
Copy contents of file into output and don’t interpret ( ditroff only).
Alphabetical Summary of Requests — .cf
18 October 2001 15:19
393.ch
.ch xx [ n ]
Change trap position for macro xx to n. If n is absent, remove the trap.
.cs
.cs f n m
Use constant spacing for font f. Constant character width is n/36 ems. If m
is given, the em is taken to be m points.
Example
.cs CW 18
.cu
Squeeze spacing of constant-width font
.cu [ n ]
Continuous underline (including interword spaces) on next n lines. If n is
0, stop underlining. Use .ul to underline visible characters only. Under-
line font can be switched in troff with .uf request. In troff , .cu and .ul
pr oduce italics (you must use a macro to underline).
.da
.da [ xx ]
Divert following text and append it to macro xx. If no argument, end the
diversion.
.de
.de xx [ yy ]
Define macro xx. End definition at call of . yy (or .. , if yy is omitted).
.di
.di [ xx ]
Divert following text into a newly defined macro xx. If no argument, end
the diversion.
.ds
.ds xx string
Define xx to contain string. An initial quote ( " ) is ignor ed.
.dt
.dt n xx
Install diversion trap at position n, within diversion, to invoke macro xx.
394
18 October 2001 15:19
Chapter 12 – nrof f and trof f.ec [ c ]
.ec
Set escape character to c. Default is \ .
.el
.el
Else portion of if-else (see .ie below).
.em
.em xx
.eo
.eo
Turn escape character mechanism off. All escape characters are printed lit-
erally.
.ev [ n ]
.e v
Change environment to n. For example, many requests that affect hori-
zontal position, hyphenation, or text adjustment are stor ed in the current
envir onment. If n is omitted, restor e pr evious envir onment. The initial
value of n is 0, and 0 ≤ n ≤ 2. You must retur n to the previous environ-
ment by using .ev with no argument, or you will get a stack overflow.
( ditroff simply ignores an invalid argument and issues a warning.)
.ex
.ex
Exit from the formatter and perfor m no further text processing. Typically
used with .nx for form-letter generation.
.fc
.fc a b
Set field delimiter to a and pad character to b.
.fi
.fi
Turn on fill mode, the inverse of .nf . Default is on.
Alphabetical Summary of Requests — .fi
18 October 2001 15:19
395
Set end macro to be xx. xx is executed automatically when all other out-
put complete..fl
.fl
Flush output buffer. Useful for interactive debugging.
.fp
.fp n f
Assign font f to position n. n ranges from 1 to 4 in otroff and from 1 to
99 in ditroff .
Examples
.fp 7 CW
.fp 8 CI
.fp 9 CB
.ft
\" position 7 is constant width
\" position 8 is constant italic
\" position 9 is constant bold
.ft f
Change font to f, wher e f is a one- or two-character font name, or a font
position assigned with .fp . Similar to escape sequence \f .
.hc
.hc [ c ]
Change input hyphenation-indication character to c. Default is \% .
.hw
.hw words
Specify hyphenation points for wor ds (e.g., .hw spe-ci-fy ). There is a
limit of around 128 total characters for the total list of wor ds.
.hy
.hy n
Turn hyphenation on (n ≥ 1) or off (n = 0). See also .nh.
Values for n
1
2
4
8
14
396
18 October 2001 15:19
Hyphenate whenever necessary.
Don’t hyphenate last word on page.
Don’t split off first two characters.
Don’t split off last two characters.
Use all three restrictions.
Chapter 12 – nrof f and trof f.ie [ ! ] condition anything
.el anything
.ie
If portion of if-else. If condition is true, do anything. Otherwise do any-
thing following .el request. .ie / .el pairs can be nested. Syntax for condi-
tion is described under .if.
Example
If first argument isn’t 2, columns are 1.8 inches wide; otherwise, columns
ar e 2.5 inches wide:
.ie !’\\$1’2’ .MC 1.8i 0.2i
.el .MC 2.5i 0.25i
.if
If condition is true, do anything. The presence of an ! negates the condi-
tion. If anything runs over more than one line, it must be delimited by \{
and \} .
Conditions
o
e
n
t
"str1"str2"
expr
True if the page number is odd.
True if the page number is even.
True if the processor is nroff .
True if the processor is troff .
True if str1 is identical to str2. Often used to test the
value of arguments passed to a macro.
True if the value of expression expr is greater than
zer o.
Expressions
Expr essions typically contain number register interpolations and can use
any of the following operators:
+ -
/ *
%
< >
<= >=
= ==
!
&
:
Addition, subtraction
Multiplication, division
Modulo
Less than, greater than
Less than or equal, greater than or equal
Equal
Logical negation
Logical AND
Logical OR
Note: expressions are evaluated left to right; there is no operator prece-
dence. Parentheses may be supplied to force a particular evaluation order.
→
Alphabetical Summary of Requests — .if
18 October 2001 15:19
397
.if [ ! ] condition anything.if
←
Example
Inside a macro definition, set the spacing and print the second argument.
(The extra backslashes are necessary in \\$2 . One backslash is stripped
of f when the macro is first read, so the second one is needed for it to be
evaluated correctly when the macro is executed.)
.if t .nr PD 0.5v \" Set spacing between ms paragraphs
.if !"\\$2"" \{ \" If arg 2 is non null, print it in bold
\fB\\$2\fP\}
.ig
.ig [ yy ]
Ignor e following text, up to line beginning with . yy (default is .. , as with
.de ). Useful for commenting out large blocks of text or macro definitions.
.in
.in [[ ± ] n ]
Set indent to n or increment indent by ±n. If no argument, restor e pr evi-
ous indent. Current indent is stored in register .i . Default scale is ems.
.it
.it n xx
Set trap for input-line count, so as to invoke macro xx after n lines of
input text have been read.
.lc
.lc c
Set leader repetition character (value for \a ) to c instead of . (dot).
.lf
.lf n filename
Set the line number and filename for subsequent error messages to n and
filename (r ecent versions of ditroff only). Modifies registers .c and .F .
.lg
.lg n
Turn ligatur e mode on if n is absent or nonzero.
398
18 October 2001 15:19
Chapter 12 – nrof f and trof f.ll [[ ± ] n ]
.ll
Set line length to n or increment line length by ±n. If no argument,
restor e pr evious line length. Current line length is stored in register .l .
Default value is 6.5 inches.
.ls [ n ]
.ls
Set line spacing to n. If no argument, restor e pr evious line spacing. Initial
value is 1.
Example
Pr oduce double-spaced output
.lt [ n ]
.lt
Set title length to n (default scale is ems). If no argument, restor e pr evious
value.
.mc [ c ] [ n ]
.mc
Set margin character to c and place it n spaces to the right of margin. If c
is missing, turn margin character off. If n is missing, use previous value.
Initial value for n is .2 inches in nroff and 1 em in troff .
This command is usually used for producing “change bars” in documents.
See dif fmk in Chapter 2, Unix Commands.
.mk [ r ]
.mk
Mark current vertical place in register r. Retur n to mark with .rt or
.sp|\nr .
.na
.na
Do not adjust margins. Current adjustment mode is stored in register .j .
See also .ad.
.ne
.ne n
If n lines do not remain on this page, start a new page.
Alphabetical Summary of Requests — .ne
18 October 2001 15:19
399
.ls 2.nf
.nf
Do not fill or adjust output lines. See also .ad and .fi.
.nh
.nh
Turn hyphenation off. See also .hy.
.nm
.nm [ n m s i ]
Number output lines (if n ≥ 0), or turn numbering off (if n = 0). ±n sets
initial line number; m sets numbering interval; s sets separation of num-
bers and text; i sets indent of text. Useful for code segments, poetry, etc.
See also .nn.
.nn
.nn n
Do not number next n lines, but keep track of numbering sequence,
which can be resumed with .nm +0 . See also .nm.
.nr
.nr r n [ m ]
Assign value n to number register r and optionally set auto-increment to
m.
Examples
Set the “box width” register to line length minus indent:
.nr BW \n(.l-\n(.i
Set page layout values for ms macr os:
.nr LL 6i
.nr PO ((8.25i-\n(LLu)/2u)
.nr VS \n(PS+2
Line length
Page offset
Vertical spacing
In groff , auto-incr ement a footnote-counter register:
.nr footcount 0 1
Reset to zero on each page
Note: inside a macro definition, \n should be \\n .
400
18 October 2001 15:19
Chapter 12 – nrof f and trof f.ns
.ns
Turn on no-space mode. See also .r s.
.nx
.nx file
Switch to file and do not retur n to current file. See also .so.
.os
.os
Output saved space specified in previous .sv request.
Use c (instead of % ) as the page number character within nroff / troff cod-
ing.
.pi
.pi command
Pipe the formatter output through a Unix command, instead of placing it
on standard output ( ditroff and nroff only). Request must occur before
any output.
Example
.pi /usr/bin/col
Pr ocess nr off output with col
.pl [[ ± ] n ]
.pl
Set page length to n or increment page length by ±n. If no argument,
restor e default. Current page length is stored in register .p . Default is 11
inches.
.pm
.pm
Print names and sizes of all defined macros.
.pn [[ ± ] n ]
.pn
Set next page number to n or increment page number by ±n. Curr ent
page number is stored in register % .
Alphabetical Summary of Requests — .pn
18 October 2001 15:19
401
.pc
.pc c.po
.po [[ ± ] n ]
Of fset text a distance of n fr om left edge of page or else increment the
curr ent of fset by ±n. If no argument, retur n to previous offset. Current
page offset is stored in register .o .
.ps
.ps n
Set point size to n ( troff only, accepted but ignored by nroff ). Current
point size is stored in register .s . Default is 10 points.
.rd
.rd [ prompt ]
Read input from terminal, after printing optional pr ompt.
.r m
.rm xx
Remove request, macro or string xx.
.r n
.rn xx yy
Rename request, macro or string xx to yy.
.r r
.rr r
Remove register r. See also .nr.
.r s
.rs
Restor e spacing (disable no-space mode). See .ns.
.r t
.rt [ ±n ]
Retur n (upward only) to marked vertical place, or to ±n fr om top of page
or diversion. See also .mk.
.so
.so file
Switch out to file, then retur n to current file; that is, read the contents of
another file into the current file. See also .nx.
402
18 October 2001 15:19
Chapter 12 – nrof f and trof f.sp
.sp n
Leave n blank lines. Default is 1. You may use any vertical value, with an
appr opriate unit specifier, for n.
.ss
.ss n
Set space-character size to n/36 em (no effect in nroff ).
.sv
.sv n
.sy command [ args ]
.sy
Execute Unix command with optional arguments ( ditroff only).
Example
Search for the first argument; accumulate in a temp file:
.sy sed -n ’s/\\$1/Note: &/p’ list >> /tmp/notesfile
(Note the extra backslash in \\$1 . This example occurs inside a macro
definition. One backslash is stripped off when the macro is first read, so
the second one is needed for it to be evaluated correctly when the macro
is executed.)
.ta n [ t ] [ + ] m [ t ] ...
.ta
Set tab stops at positions n, m, etc. If t is not given, tab is left-adjusting.
Use a + to move relative to the previous tab stop.
Values for t
L
R
C
Left adjust
Right adjust
Center
.tc
.tc c
Define tab repetition character as c (instead of whitespace). nroff / troff
uses c when expanding tabs. For example, you might use .tc . when for-
matting a table of contents.
Alphabetical Summary of Requests — .tc
18 October 2001 15:19
403
Save n lines of space; output saved space with .os ..ti
.ti [[ ± ] n ]
Temporary indent. Indent the next output line by n or increment the cur-
rent indent by ±n for the next output line. Default scale is ems.
Example
.in
.ti
The
.in
.tl
10
-5
first line of this paragraph sticks out by 5 ems ...
-10
.tl ’l’c’r’
Specify left, center ed, or right title. Title length is specified by .lt , not
.ll . Use % to get the page number, for example, .tl ’’- % -’’ .
.tm
.tm text
Terminal message. Print text on standard error. Useful for debugging, as
well for producing indexes and cross refer ences.
.tr
.tr ab ...
Translate character a (first of a pair) to b (second of pair).
Example
Pr oduce uppercase and later restor e. Useful for title macros:
.tr aAbBcCdDeEfFgGhHiIjJkKlLmM
.tr aabbccddeeffgghhiijjkkllmm
.uf
Et cetera
Et cetera
.uf f
Set underline font to f (to be switched to by .ul or .cu ); default is italics.
.ul
.ul [ n ]
Underline (italicize in troff ) next n input lines. Do not underline inter-
word spaces. Use .cu for continuous underline. Underline font can be
switched in troff with .uf request. However, you must use a macro to
actually underline in troff .
404
18 October 2001 15:19
Chapter 12 – nrof f and trof f.vs [ n ]
.vs
Set vertical line spacing to n. If no argument, restor e pr evious spacing.
Curr ent vertical spacing is stored in register .v . Default is 1/6 inch.
.wh n [ xx ]
.wh
The “when” request. When position n is reached, execute macro xx; neg-
ative values are calculated with respect to the bottom of the page. If xx is
not supplied, remove any trap(s) at that location. (A trap is the position
on the page where a given macro is executed.) Two traps can be at the
same location if one is moved over the other with .ch . They cannot be
placed at the same location with .wh .
Escape Sequences
Sequence Effect
\\
\e Pr event or delay the interpretation of \.
Printable version of the current escape character (usu-
ally \ ).
 ́ (acute accent); equivalent to \(aa .
‘ (grave accent); equivalent to \(ga .
– (minus sign in the current font).
Period (dot).
Unpaddable space-size space character.
Concealed (ignored) newline.
Digit-width space.
1/6-em narrow space character (zero width in nroff ).
1/12-em half-narrow space character (zero width in
nroff ).
Nonprinting, zero-width character.
Transpar ent line indicator.
Beginning of comment.
Interpolate macro argument 1 ≤ n ≤ 9.
Default optional hyphenation character.
Character named xx. See the later section “Special
Characters.”
Interpolate string x or xx.
Noninterpr eted leader character.
Bracket-building function.
Make next line continuous with current.
Character named abcd ( ditroff only).
Forward (down) 1/2-em vertical motion (1/2 line in
nroff ).
\’
\‘
\-
\.
\space
\newline
\0
\|
\ˆ
\&
\!
\"
\$n
\%
\(xx
\*x or \*(xx
\a
\b’abc ... ’
\c
\C’abcd’
\d
Escape Sequences
18 October 2001 15:19
405Sequence Effect
\D’l x,y’ Draw a line from current position by deltas x,y
( ditroff only).
Draw circle of diameter d with left edge at current
position ( ditroff only).
Draw ellipse with horizontal diameter d1 and vertical
diameter d2, with left edge at current position ( ditroff
only).
Draw arc counterclockwise from current position, with
center at x1,y1 and endpoint at x1+x2,y1+y2 ( ditroff
only).
Draw spline from current position through the speci-
fied coordinates ( ditroff only).
Change to font named x or xx or to position n. If x is
P , retur n to the previous font.
For mat of number register x or xx, suitable for use
with .af
Local horizontal motion; move right n or, if n is nega-
tive, move left.
Set character height to n points, without changing
width ( ditroff only).
Mark horizontal input place in register x.
Draw horizontal line of length n (optionally with c).
Draw vertical line of length n (optionally with c).
Interpolate number register x or xx.
Interpolate number register x or xx, applying auto-
incr ement.
Interpolate number register x or xx, applying auto-
decr ement.
Character number n in the current font ( ditroff only).
Overstrike characters a, b, c ...
Br eak and spread output line.
Reverse 1-em vertical motion (reverse line in nroff ).
Change point size to n or increment by n. For exam-
ple, \s0 retur ns to previous point size.
Just like \s , but allow unambiguous two-character
point sizes (recent ditroff only).
Slant output n degr ees to the right. Negative values
slant to the left. A value of zero tur ns of f slanting
( ditroff only).
Noninterpr eted horizontal tab.
Reverse (up) 1/2-em vertical motion (1/2 line in
nroff ).
Local vertical motion; move down n, or, if n is nega-
tive, move up.
Interpolate width of string.
Extra line-space function (n negative provides space
befor e, n positive provides after).
\D’c d’
\D’e d1 d2’
\D’a x1 y1 x2 y2’
\D’ ̃ x1 y1 x2 y2 ... ’
\fx or \f(xx or \fn
\gx or \g(xx
\h’n’
\H’n’
\kx
\l’nc’
\L’nc’
\nx , \n(xx
\n+x , \n+(xx
\n-x , \n-(xx
\N’n’
\o’abc ... ’
\p
\r
\sn , \s±n
\s(nn , \s±(nn
\S’n’
\t
\u
\v’n’
\w’string’
\x’n’
406
18 October 2001 15:19
Chapter 12 – nrof f and trof fSequence Effect
\X’text’
\zc
\{
\}
\x Output text as a device control function ( ditroff only).
Print c with zero width (without spacing).
Begin multiline conditional input.
End multiline conditional input.
x, any character not listed above.
Predefined Register s
Ther e ar e two types of predefined registers: read-only and read-write. These are
all accessed via the \n escape sequence, even though some of them actually retur n
string values.
Read-Only Reg isters
.$
$$
.A
.F
.H
.L
.R
.T
.V
.a
.b
.c
.d
.f
.h
.i
.j
.k
.l
.n
.o
.p
.s
.t
.u
.v
.w
Number of arguments available at the current macro level.
Pr ocess ID of troff pr ocess ( ditroff only).
Set to 1 in troff , if -a option used; always 1 in nroff .
Name of the current input file (recent ditroff only).
Available horizontal resolution in basic units.
Curr ent line spacing (set by .ls ) value (recent ditroff only).
Number of unused number registers (recent ditroff only).
Set to 1 in nroff , if -T option used; always 0 in otroff ; in ditroff , the
string \*(.T contains the value of -T .
Available vertical resolution in basic units.
Post-line extra line space most recently utilized using \x’n’ .
Emboldening level (recent ditroff only).
Number of lines read from current input file.
Curr ent vertical place in current diversion; equal to register nl when
ther e is no diversion.
Curr ent font as number (1 to 4 in otroff ; 1 to 99 in ditroff ).
Text baseline high-water mark on current page or diversion.
Curr ent indent.
Curr ent adjustment mode.
Curr ent output horizontal position.
Curr ent line length.
Length of text portion on previous output line.
Curr ent page offset.
Curr ent page length.
Curr ent point size.
Distance to the next trap.
Equal to 1 in fill mode and 0 in no-fill mode.
Curr ent vertical line spacing.
Width of previous character.
Pr edefined Registers
18 October 2001 15:19
407Reserved version-dependent register.
Reserved version-dependent register.
Name of current diversion.
.x
.y
.z
Read-Wr ite Reg isters
Curr ent page number.
Character type (set by \w function).
Width (maximum) of last completed diversion.
Height (vertical size) of last completed diversion.
Curr ent day of the week (1 to 7).
Curr ent day of the month (1 to 31).
Curr ent horizontal place on input line.
Output line number.
Curr ent month (1 to 12).
Vertical position of last printed text baseline.
Depth of string below baseline (generated by \w func-
tion).
Height of string above baseline (generated by \w func-
tion).
Years since 1900. a
%
ct
dl
dn
dw
dy
hp
ln
mo
nl
sb
st
yr
a
Yes, there’s a potential Y2K problem here. This will be 100 in 2000.
Special Character s
This section lists the following special characters:
• Characters that reside on the standard fonts
• Miscellaneous characters
• Bracket-building symbols
• Mathematics symbols
• Greek characters
The characters in the first table below are available on the standard fonts. The
characters in the remaining tables are available only on the special font.
Table 12−2: Characters on the Standard Fonts
Input Char Character Name
’ ’ Close quote
‘ ‘ Open quote
\(em — Em-dash (width of “m”)
\(en – En-dash (width of “n”)
408
18 October 2001 15:19
Chapter 12 – nrof f and trof fTable 12−2: Characters on the Standard Fonts (continued)
Input Char Character Name
\− − Minus in current font
− − Hyphen
\(hy − Hyphen
\(bu • Bullet
\(ru _ Rule
\(14 1 4 ⁄ 1/4
\(12 1 2 ⁄ 1/2
\(34 3 4 ⁄ 3/4
\(fi fi fi ligatur e
\(fl fl fl ligatur e
\(ff ff ff ligatur e
\(Fi ffi ffi ligatur e
\(Fl ffl ffl ligatur e
\(de ° Degr ee
\(dg † Dagger
\(fm ′ Foot mark
\(ct ¢ Cent sign
\(rg ® Register ed
\(co © Copyright
Squar e
\(sq
Table 12−3: Miscellaneous Characters
Input Char Character Name
\(sc § Section
\(aa  ́ Acute accent
\ ́  ́ Acute accent
\(ga ‘ Grave accent
\‘ ‘
Grave accent
Underrule
\(ul
\(-> → Right arrow
\(<- ← Left arrow
\(ua ↑ Up arrow
\(da ↓ Down arrow
‡ Double dagger
Box rule
\(br
\(dd
Special Characters
18 October 2001 15:19
409Table 12−3: Miscellaneous Characters (continued)
Input
Char
Character Name
\(rh ☞ Right hand
\(lh ☞ Left hand
Circle
\(ci
Table 12−4: Bracket-Building Symbols
Input Char Character Name
\(lt  Left top of big curly bracket
\(lk  Left center of big curly bracket
\(lb  Left bottom of big curly bracket
\(rt  Right top of big curly bracket
\(rk  Right center of big curly bracket
\(rb  Right bottom of big curly bracket
\(lc  Left ceiling (left top) of big square bracket
\(bv  Bold vertical
\(lf  Left floor (left bottom) of big square bracket
\(rc  Right ceiling (right top) of big square bracket
\(rf  Right floor (right bottom) of big square bracket
Table 12−5: Mathematics Symbols
Input Char Character Name
\(pl + Math plus
\(mi − Math minus
\(eq = Math equals
\(** ∗ Math star
\(sl / Slash (matching backslash)
\(sr √ Squar e root
Root en extender
\(rn
\(>= ≥ Gr eater than or equal to
\(<= ≤ Less than or equal to
\(== ≡ Identically equal
\( ̃ ̃ ≈ Appr oximately equal
\(ap  ̃ Appr oximates
\(!= ≠ Not equal
\(mu × Multiply
\(di ÷ Divide
410
18 October 2001 15:19
Chapter 12 – nrof f and trof fTable 12−5: Mathematics Symbols (continued)
Char Character Name
\(+− ± Plus-minus
\(cu ∪ Cup (union)
\(ca ∩ Cap (intersection)
\(sb ⊂ Subset of
\(sp ⊃ Superset of
\(ib ⊆ Impr oper subset
\(ip ⊇ Impr oper superset
\(if ∞ Infinity
\(pd ∂ Partial derivative
\(gr ∇ Gradient
\(no ¬ Not
\(is ∫ Integral sign
\(pt ∝ Pr oportional to
\(es ∅ Empty set
\(mo ∈ Member of
Input
Or
\(or
Greek Character s
Characters with equivalents as uppercase English letters are available on the stan-
dard fonts; otherwise, the characters in Table 12-6 exist only on the special font.
Table 12−6: Gr eek Characters
Input Char Char Name Input Char Char Name
\(*a α alpha \(*A A ALPHA
\(*b β beta \(*B B BETA
\(*g γ gamma \(*G Γ GAMMA
\(*d δ delta \(*D δ DELTA
\(*e ε epsilon \(*E E EPSILON
\(*z ζ zeta \(*Z Z ZETA
\(*y η eta \(*Y H ETA
\(*h θ theta \(*H Θ THETA
\(*i ι iota \(*I I IOTA
\(*k κ kappa \(*K K KAPPA
\(*l λ lambda \(*L Λ LAMBDA
\(*m μ mu \(*M M MU
Special Characters
18 October 2001 15:19
411Table 12−6: Gr eek Characters (continued)
Input Char Char Name Input Char Char Name
\(*n ν nu \(*N N NU
\(*c ξ xi \(*C Ξ XI
\(*o ο omicr on \(*O O OMICRON
\(*p π pi \(*P Π PI
\(*r ρ rho \(*R P RHO
\(*s σ sigma \(*S Σ SIGMA
\(ts ς ter minal sigma \(*t τ tau \(*T T TAU
\(*u υ upsilon \(*U Υ UPSILON
\(*f φ phi \(*F Φ PHI
\(*x χ chi \(*X X CHI
\(*q ψ psi \(*Q Ψ PSI
\(*w ω omega \(*W Ω OMEGA
412
18 October 2001 15:19
Chapter 12 – nrof f and trof fCHAPTER 13
mm Macros
This chapter presents the following topics:
Alphabetical summary of the mm macr os
• Predefined string names
• Number registers
• Other reserved names
• Sample document
•
Alphabetical Summary of mm Macros
.1C
.1C
Retur n to single-column format.
.2C
.2C
Start two-column format.
.AE
.AE
End abstract (see .AS).
413
18 October 2001 15:21.AF
.AF [ company name ]
Alter nate for mat for first page. Change first-page “Subject/Date/From” for-
mat. If argument is given, other headings are not affected. No argument
suppr esses company name and headings.
.AL
.AL [ type ] [ indent ] [ 1 ]
Initialize numbered or alphabetized list. Specify list type, and indent of
text. If third argument is 1 , spacing between items is suppressed. Mark
each item in list with .LI ; end list with .LE . Default is numbered listing.
Default text indent is specified in register Li .
Type
1
A
a
I
i
.AS
Arabic numbers
Uppercase letters
Lowercase letters
Roman numerals, uppercase
Roman numerals, lowercase
.AS [ type ] [ n ]
Start abstract of specified type, indenting n spaces. Used with .TM and .RP
only. End with .AE .
Type
1
2
3
.AT
Abstract on cover sheet and first page
Abstract only on cover sheet
Abstract only on Memorandum for File cover sheet
.AT title
Author’s title appears after author’s name in formal memoranda.
.AU
.AU name [ init ] [ loc ] [ dept ] [ ext ] [ room ]
Author’s name and other information (up to nine arguments) supplied at
beginning of formal memoranda.
414
18 October 2001 15:21
Chapter 13 – mm Macros.AV
.AV name
Appr oval signatur e line for name. Closing macro in for mal memoranda.
.B [ barg ] [ parg ] ...
.B
Set bar g in bold (underline or overstruck in nroff ) and par g in previous
font; up to six arguments.
.BE
.BE
End bottom block and print after footnotes (if any), but before footer.
See .BS.
.BI [ barg ] [ iarg ]
.BI
.BL [ indent ] [ 1 ]
.BL
Initialize bullet list. Specify indent of text. Default indent is 3 and is spec-
ified in register Pi . If second argument is 1 , suppr ess blank line between
items.
.BR [ barg ] [ rarg ]
.BR
Set bar g in bold (underline or overstruck in nroff ) and rar g in roman;
up to six arguments.
.BS
.BS
Begin block of text to be printed at bottom of page, after footnotes (if
any), but before footer. End with .BE .
.CS [ pgs ] [ other ] [ tot ] [ figs ] [ tbls ] [ ref ]
.CS
Cover-sheet information supplied for formal memoranda. The arguments
repr esent the counts of the respective items that are nor mally automati-
cally computed. You may provide a value to override the computed one.
Alphabetical Summary of mm Macros — .CS
18 October 2001 15:21
415
Set bar g in bold (underline or overstruck in nroff ) and iar g in italics; up
to six arguments..DE
.DE
End static display started with .DS or floating display started with .DF .
.DF
.DF [ type ] [ mode ] [ rindent ]
Start floating display. That is, if the amount of space requir ed to output
text exceeds the space remaining on the current page, the display is
saved for the next page, while text following the display is used to fill
the current page. (See also registers De and Df .) Default type is no indent;
default mode is no-fill. rindent is the amount by which to shorten the
line length in order to bring text in from the right margin. End display
with .DE .
Type
L or 0
I or 1
C or 2
CB or 3
No indent (default).
Indent standard amount.
Center each line individually.
Center as a block.
Mode
N or 0
F or 0
.DL
No-fill mode (default).
Fill mode.
.DL [ indent ] [ 1 ]
Initialize dashed list. Specify indent of text. Default indent is 3 and is
specified in register Pi . If second argument is 1 , suppr ess blank line
between items.
.DS
.DS [ type ] [ mode ] [ rindent ]
Start static display. That is, if the display doesn’t fit in the remaining
space on the page, a page break occurs, placing the display at the top of
the next page. See .DF about type, mode, and rindent. End display with
.DE .
.EC
.EC [ caption ] [ n ] [ flag ]
Equation caption. Arguments optionally override default numbering,
wher e flag deter mines use of number n. See .EQ.
416
18 October 2001 15:21
Chapter 13 – mm MacrosFlag
0
1
2
.EC
n is a prefix to number (the default).
n is a suffix.
n replaces number.
.EF [ ’left’center’right’ ]
.EF
Print three-part string as even page footer; parts are left-justified, cen-
ter ed, and right-justified at bottom of every even page.
.EH [ ’left’center’right’ ]
.EH
Print three-part string as even page header; parts are left-justified, cen-
ter ed, and right-justified at top of every even page.
.EN
.EN
End equation display. See .EQ.
.EQ [ text ]
.EQ
Start equation display to be processed by eqn , using text as label (see
.EC). End with .EN . See Chapter 17, tr off Prepr ocessors, for more infor ma-
tion on eqn .
.EX [ caption ] [ n ] [ flag ]
.EX
Exhibit caption. Arguments optionally override default numbering, where
flag deter mines use of number n.
Flag
0
1
2
n is a prefix to number (the default).
n is a suffix.
n replaces number.
.FC [ text ]
.FC
Use text for formal closing.
Alphabetical Summary of mm Macros — .FC
18 October 2001 15:21
417.FD
.FD [ n ] [ 1 ]
Set default footnote format to n, as described in the next table. With a
second argument of 1 , footnote numbering starts over at 1 each time a
first-level heading is encountered.
.FE
Value Hyphenation Adjust Text Indent Label Justification
0
1
2
3
4
5
6
7
8
9
10
11 Of f
On
Of f
On
Of f
On
Of f
On
Of f
On
Of f
On On
On
Of f
Off
On
On
Of f
Off
On
On
Of f
Off On
On
On
On
Off
Of f
Of f
Off
On
On
On
On Left
Left
Left
Left
Left
Left
Left
Left
Right
Right
Right
Right
.FE
End footnote. See .FS.
.FG
.FG [ title ] [ n ] [ flag ]
Figur e title follows. Arguments optionally override default numbering,
wher e flag deter mines use of number n.
Flag
0
1
2
.FS
n is a prefix to number (the default).
n is a suffix.
n replaces number.
.FS [ c ]
Start footnote using c as indicator. Default is numbered footnote. End
with .FE .
.H
.H n [ heading ] [ suffix ]
Print a numbered heading at level n, wher e n is from 1 to 7. The
optional suf fix is appended to the heading, and may be used for footnote
418
18 October 2001 15:21
Chapter 13 – mm Macrosmarks or other text that should not appear in the Table of Contents. See
any of the following sections for more infor mation.
.H
Number Register s
Ej
Hb
Hc
Hi
Hs
Hu
Page eject.
Br eak after heading.
Center ed heading.
Type of first paragraph after heading.
Space after heading.
Unnumber ed headings.
Str ings
HF
HP
Font control.
Point size.
Macros
Heading mark.
Unnumber ed headings.
User-supplied macros invoked during output of
header.
.HC [ c ]
.HM
.HU
.HX , .HY , .HZ
.HC
Use character c as hyphenation indicator.
.HM [ H1 ] ... [ H7 ]
.HM
Set the heading mark style for the seven levels of headings. Each heading
can be arabic ( 1 or 001 ), roman ( i or I ), or alphabetic ( a or A ).
.HU
.HU heading
Unnumber ed heading follows. Same as .H except that no heading mark
is printed (see number register Hu ).
.HX
.HX dlevel rlevel text
User-supplied exit macro executed before printing the heading.
→
Alphabetical Summary of mm Macros — .HX
18 October 2001 15:21
419.HX ← The derived level dlevel is equal to the real level rlevel if .H is invoked by
the user. If .HU is used, dlevel is equal to the value of the Hu register, and
rlevel is zero. In both cases, text is the actual heading text.
.HY .HY dlevel rlevel text
User-supplied exit macro executed in middle of printing the heading. See
.HX for information about dlevel, rlevel, and text.
.HZ
.HZ dlevel rlevel text
User-supplied macro executed after printing the heading. See .HX for
infor mation about dlevel, rlevel, and text.
.I
.I [ iarg ] [ parg ]
Set iar g in italics (underline in nroff ) and par g in previous font. Up to
six arguments.
.IB
.IB [ iarg ] [ barg ]
Set iar g in italics (underline in nroff ) and bar g in bold. Up to six argu-
ments.
.IR
.IR [ iarg ] [ rarg ]
Set iar g in italics (underline in nroff ) and rar g in roman. Up to six argu-
ments.
.LB
.LB n m pad type [ mark ] [ LI-space ] [ LB-space ]
List beginning. Allows complete control over list format. Begin each list
item in the list with .LI ; end the list with .LE :
n Text indent.
m Mark indent.
pad
Padding associated with mark.
type
If 0, use the specified mark. If nonzer o, and mark is 1 , A , a , I , or i ,
the list is automatically numbered or alphabetically sequenced. In
this case, type contr ols how mark is displayed. For example, if
mark is currently 1 , type has the following results.
420
18 October 2001 15:21
Chapter 13 – mm MacrosType Result
1
2
3
4
5
6 1.
1)
(1)
[1]
<1>
{1}
.LB
mark
Symbol or text to label each list entry. mark can be null (creates
hanging indent); a text string; or 1 , A , a , I , or i to create an automati-
cally numbered or lettered list. See .AL.
LI-space
Number of blank lines to output between each following .LI macr o.
Default is 1.
LB-space
Number of blank lines to output by .LB macr o itself. Default is 0.
.LC
Clear list level up to n.
.LE [ 1 ]
.LE
End item list started by .AL , .BL , .DL , .LB , .ML , or .VL . An argument of 1
pr oduces a line of whitespace (.5v) after the list.
.LI [ mark ] [ 1 ]
text
.LI
Item in list. List must be initialized (see .AL, .BL, .DL, .LB, .ML, and .VL)
and then closed using .LE . If mark is specified, it replaces the mark set
by the list-initialization macro. If mark is specified along with second
argument of 1 , the mark is prefixed to the current mark.
.ML mark [ indent ] [ 1 ]
.ML
Initialize list with specified mark, which can be one or more characters.
Specify indent of text (default is one space wider than mark). If third
argument is 1 , omit space between items in list.
Alphabetical Summary of mm Macros — .ML
18 October 2001 15:21
421
.LC [ n ].MT
.MT [ type ] [ title ]
Specify memorandum type and title. Contr ols for mat of formal memo-
randa and must be specified after other elements, such as .TL , .AF , .AU ,
.AS , and .AE . User-supplied title is prefixed to page number.
Type
0
1
2
3
4
5
string
.ND
No type.
Memorandum for file (default).
Pr ogrammer’s notes.
Engineer’s notes.
Released paper.
Exter nal letter.
string is printed.
.ND date
New date. Change date that appears in formal memoranda.
.NE
.NE
Notation end. See .NS.
.nP
.nP
Number ed paragraphs with double-line indent at start of paragraph. See
also .P.
.NS
.NS [ type ]
Notation start. Used with .MT 1 and .AS 2 / .AE (memorandum for file) to
specify note for cover sheet. Otherwise used at end of formal memo-
randa. Specify notation type.
Type
0
1
2
3
4
5
6
7
422
18 October 2001 15:21
Copy to (the default).
Copy (with attention) to.
Copy (without att.) to.
Att.
Atts.
Enc.
Encs.
Under Separate Cover.
Chapter 13 – mm Macros8
9
10
11
12
13
string
Letter to.
Memorandum to.
Copy (with atts.) to.
Copy (without atts.) to.
Abstract Only to.
Complete Memorandum to.
Copy string to.
.OF [ ’left’center’right’ ]
.NS
.OF
Print three-part string as odd page footer; parts are left-justified, centered,
and right-justified at bottom of every odd page.
.OH [ ’left’center’right’ ]
.OH
Print three-part string as odd page header; parts are left-justified, cen-
ter ed, and right-justified at top of every odd page.
.OK
Other keywords. Specify topic to appear on cover sheet of formal memo-
randa. Up to nine arguments.
.OP
.OP
Force an odd page.
.P [ type ]
.P
Start new paragraph. A paragraph type can be specified, overriding
default. Various registers can be set to control default formats:
Paragraph type for document (default is 0).
Amount of indent (default is 3n).
Spacing between paragraphs (default is one line of white space).
Set this to 1 to produce numbered paragraphs.
Pt
Pi
Ps
Np
Type
0
1
2
Left-justified (the default).
Indented.
Indented except after displays ( .DE ), lists ( .LE ), and
headings ( .H ).
Alphabetical Summary of mm Macros — .P
18 October 2001 15:21
423
.OK [ topic ].PF
.PF [ ’left’center’right’ ]
Print three-part string as page footer; parts are left-justified, centered, and
right-justified at bottom of every page. Use \\\\nP in string to obtain
page number. See also .EF and .OF.
.PH
.PH [ ’left’center’right’ ]
Print three-part string as page header; parts are left-justified, centered,
and right-justified at top of every page. Use \\\\nP in string to obtain
page number. See also .EH and .OH.
.PM
.PM [ type ]
Pr oprietary marking on each page.
Type
P
N
.PX
Private.
Notice.
.PX
Page-heading user exit. Invoked after restoration of default environment.
See .TP.
.R
.R
Retur n to roman font (end underlining or overstriking in nroff ).
.RB
.RB [ rarg ] [ barg ]
Set rar g in roman and bar g in bold. Up to six arguments.
.RD
.RD [ prompt ]
Read input from terminal, supplying optional pr ompt.
.RF
.RF
End of refer ence text. See also .RS.
424
18 October 2001 15:21
Chapter 13 – mm Macros.RI [ rarg ] [ barg ]
.RI
Set rar g in roman and bar g in italics. Up to six arguments.
.RL [ indent ] [ 1 ]
.RL
Initialize refer ence list, essentially a numbered list with number set within
brackets ( [ ] ). Specify indent of text; the default is set through register
Li . If second argument is 1 , omit space between list items.
.RP [ counter ] [ skip ]
.RP
Pr oduce refer ence page.
Counter
Reset the refer ence counter (default).
Do not reset the refer ence counter.
0
1
Skip
0
1
2
3
Put on a separate page (default).
Do not issue a following .SK .
Do not issue a preceding .SK .
Do not issue either a preceding or following .SK .
.RS [ strname ]
.RS
Start automatically numbered refer ence. End with .RF . If provided, use
str name as a troff string in which to save the refer ence number sur-
rounded by brackets and appropriate line motions. This allows referring
to the refer ence again from text further on in the document.
Example
J. Programmer\*(Rf
.RS W1
.I "Whizprog \- The Be All and End All Program,"
J. Programmer, Wizard Corp, April 1, 1999.
.RF
describes the design of
.IR whizprog .
The second chapter\*(W1
presents
an especially insightful analysis. ...
Alphabetical Summary of mm Macros — .RS
18 October 2001 15:21
425.S
.S [[ ± ] n ] [[ ± ] m ]
Set point size to n and vertical spacing to m ( troff only). Alternatively,
either argument can be specified by incrementing or decrementing the
curr ent value ( C ), default value ( D ), or previous value ( P ). Default point
size is 10; default vertical spacing is 12.
.SA
.SA [ n ]
Set right margin justification to n. Defaults are no justification for nroff ,
justification for troff .
Values for n
0
1
.SG
No justification.
Justification.
.SG [ typist ] [ 1 ]
Add typist to Author’s name on the signature line. (The Author’s name is
obtained from the .AU macr o.) With a second argument of 1 , the author’s
location, department etc. are placed on the same line as the name of the
first author, instead of on the line with the last author’s name.
.SK
.SK n
Skip n pages. Similar to a .bp request.
.SM
.SM x [ y ] [ z ]
Reduce a string by one point. Multiple arguments are concatenated, with
one of them reduced in size, as described in this table.
# of Arguments
One
Two
Thr ee
426
18 October 2001 15:21
Action
Reduce size of first string by one point.
Reduce size of first string by one point.
Reduce size of middle string by one point.
Chapter 13 – mm Macros.SP [ n ]
.SP
Output n blank vertical spaces. The spacing requests of two consecutive
.SP macr os do not accumulate.
.TB [ title ] [ n ] [ flag ]
.TB
Supply table title. Arguments optionally override default numbering,
wher e flag deter mines use of number n.
Flag
0
1
2
n is a prefix to number (default).
n is a suffix.
n replaces number.
.TC [ slevel ] [ spacing ] [ tlevel ] [ tab ] [ head1 ] ...
.TC
Generate table of contents in format specified by arguments. The levels
of headings that are saved for table of contents are deter mined by setting
the Cl register.
slevel sets the levels of headings that have spacing before them. spacing
sets the amount of spacing. Default is 1; first-level headings have a blank
line before them.
tlevel and tab af fect the location of the page number. Heading levels less
than or equal to tlevel ar e output with page numbers at the right margin;
otherwise, the heading and page number are separated by two spaces. If
page numbers are at the right margin, and if tab is 0, a leader is output
using dots; otherwise, spaces are used.
.TE
.TE
End table. See .TS.
.TH [ N ]
.TH
End table header. Must be used with a preceding .TS H . Use N to sup-
pr ess table headers until a new page.
Alphabetical Summary of mm Macros — .TH
18 October 2001 15:21
427.TL
.TL [ charge [ file ]]
text
Supply title for formal memoranda. char ge and file ar e the “charging
case” and “filing case” for the memorandum; not too useful outside the
Bell System.
.TM
.TM [ n ]
Supply number n for technical memoranda.
.TP
.TP
Page top macro, invoked automatically at the beginning of a new page.
Executed in environment in which heading is output. See also .PH.
.TS
.TS [ H ]
Start table to be processed by tbl . Use H to put a table header on all
pages. End table header with .TH . End table with .TE . See Chapter 17 for
mor e infor mation on tbl .
.TX
.TX
User-supplied macro executed before table-of-contents titles.
.TY
.TY
User-supplied macro executed before table-of-contents header.
.VL
.VL n [ m ] [ 1 ]
Initialize variable item list. Used to produce indented or labeled para-
graphs. Indent text n spaces and indent mark m spaces. If third argument
is 1 , omit space between list items. Begin each item with .LI , specifying
a label for each item; end list with .LE .
.VM
.VM [ n ] [ m ]
Vertical margin. Add n lines to top margin and m lines to bottom.
428
18 October 2001 15:21
Chapter 13 – mm Macros.WC [ x ]
.WC
Change column or footnote width to x.
Values for x
FF
-FF
WD
-WD
WF
-WF
All footnotes same as first.
Turn off FF mode. Normal default mode.
Wide displays.
Use default column mode.
Wide footnotes.
Turn off WF mode.
Predefined String Names
Bullet; same as \(bu .
List of indents for table-of-contents levels.
Curr ent date, unless overridden. Month, day, year (e.g., January 1, 2000).
Em dash string (em dash in troff and a double hyphen in nroff ).
Footnote number generator.
Fonts used for each level of heading (1 = roman, 2 = italic, 3 = bold).
Point size used for each level of heading.
Title set for “LIST OF EQUATIONS.”
Title set for “LIST OF FIGURES.”
Title set for “LIST OF TABLES.”
Title set for “LIST OF EXHIBITS.”
SCCS release and level of mm.
Refer ence number generator.
Title for “REFERENCES.”
Trademark string. Places the letters “TM” in a smaller point size, one-half line
above the text it follows.
Number Register s Used in mm
Table 13-1 lists mm’s number registers. A dagger (†) next to a register name indi-
cates that the register can be set only from the command line or before the mm
macr o definitions are read by the formatter. Any register having a single-character
name can be set from the command line with the -r option.
Number Registers Used in mm
18 October 2001 15:21
429
BU
Ci
DT
EM
F
HF
HP
Le
Lf
Lt
Lx
RE
Rf
Rp
TmTable 13−1: mm Number Registers
Register Description
A† If set to 1, omit technical memorandum headings and provide spaces
appr opriate for letterhead (see .AF macr o).
Au Omit author information on first page (see .AU macr o).
C† Flag indicating type of copy (original, draft, etc.).
Cl Level of headings saved for table of contents (see .TC macr o).
Default is 2.
Cp If set to 1 (default), list of figures and tables appear on same page as
table of contents. Otherwise, they start on a new page.
D† If set to 1, use debug mode (mm continues even after encountering
nor mally fatal errors). Default is 0.
De If set to 1, eject page after each floating display. Default is 0.
Df Set format of floating displays (see .DF macr o).
Ds Set space used before and after static displays.
E† Font for Subject/Date/From. 0 (bold, the default) or 1 (roman).
Ec Equation counter, incr emented for each .EC macr o.
Ej Heading level for page eject before headings. Default is 0 and no
eject.
Eq If set to 1, place equation label at left margin. Default is 0.
Ex Exhibit counter, incr emented for each .EX macr o.
Fg Figur e counter, incr emented for each .FG macr o.
Fs Vertical spacing between footnotes.
H1 ... H7 Heading counters for levels 1 to 7, incremented by .H macr o of
corr esponding level or by .HU macr o if at level given by register Hu .
Registers H2 to H7 ar e reset to 0 by any .H (or .HU ) macr o at a lower-
number ed level.
Hb Level of heading for which break occurs before output of body text.
Default is 2.
Hc Level of heading for which centering occurs. Default is 0.
Hi Type of indent after heading. Values are 0 (left-justified), 1 (indented,
the default), 2 (indented except after .H , .LC , .DE ).
Hs Level of heading for which space after heading occurs. Default is 2.
Ht Numbering type of heading: 1 (single) or 0 (concatenated, the
default).
Hu Set level of heading at which unnumbered headings occur. Default is
2.
Hy If set to 1, enable hyphenation. Default is 0.
L† Set length of page. Default is 66v.
430
18 October 2001 15:21
Chapter 13 – mm MacrosTable 13−1: mm Number Registers (continued)
Register Description
Le Flag to print list of equations after table of contents: 0 (don’t print,
the default) or 1 (print).
Lf Like Le , but for list of figures.
Li Default indent of lists. Default is 6n for nroff and 5n for troff .
Ls Set spacing between items in nested lists. Default is 6 (spacing
between all levels of list).
Lt Like Le , but for list of tables.
Lx Like Le , but for list of exhibits.
N† Set page-numbering style:
All pages get header (the default)
1 Header printed as footer on page 1
2 No header on page 1
3 Section-page as footer
4 No header unless .PH has been invoked
5 Section-page and section-figure as footer
Np Set numbering style for paragraphs: 0 (unnumbered, the default) or 1
(number ed).
O Of fset of page. For nroff , value is unscaled number repr esenting
character positions; default is 9 (.75i). For troff , value is scaled;
default is .5i.
Oc Set numbering style for pages in table of contents: 0 (lowercase
roman, the default) or 1 (arabic).
Of Set separator for figure number in captions. 0 (use period, the
default); 1 (use hyphen).
P Curr ent page number.
Pi
Amount of indent for paragraph. Default is 5n for nroff and 3n for
troff .
Ps Amount of spacing between paragraphs. Default is 3v.
Pt Paragraph type. Values are 0 (left-justified, the default), 1 (indented),
2 (indented except after .H , .LC , .DE ).
Pv Suppr ess “PRIVATE” header by setting to 0 (default).
Rf Refer ence counter, incr emented for each .RS .
S† Default point size for troff . Default is 10. Vertical spacing is \nS+2 .
Si
Standard indent for displays. Default is 5n for nroff and 3n for
troff .
T† Type of nroff output device. Sets registers for specific devices.
Tb Table counter, incr emented for each .TB .
Number Registers Used in mm
18 October 2001 15:21
431
0Table 13−1: mm Number Registers (continued)
Register Description
U† Style of nroff underlining for .H and .HU . If not set, use continuous
underline; if set, don’t underline punctuation and whitespace. Default
is 0.
W† Width of page (line and title length). Default is 6i.
Other Reserved Macro and String Names
In mm, the only macro and string names you can safely use are names consisting
of a single lowercase letter, or two-character names whose first character is a low-
ercase letter and whose second character is anything but a lowercase letter. Of
these, only c2 and nP ar e alr eady used.
Sample Document
.ND "April 1, 1999"
.TL
Whizprog \- The Be All and End All Program
.AF "Wizard Corp."
.ds XX "012 Binary Road, Programmer’s Park, NJ 98765-4321"
.AU "J. Programmer" "" XX
.AT "Coder, Extraordinaire"
.\" Abstract
.AS 1
This memorandum discusses the design and
implementation of
.I whizprog ,
the next generation of really
.B cool
do-it-all programs.
.AE
.\" Released paper
.MT 4
.H 1 Requirements
.P
The following requirements were identified. ...
.H 1 Analysis
.P
Here is what we determined. ...
.H 1 Design
.P
After much popcorn, we arrived at the
following design. ...
.H 1 Implementation
.P
432
18 October 2001 15:21
Chapter 13 – mm MacrosAfter more popcorn and lots of Jolt Cola, we
implemented
.I whizprog
using ...
.H 1 Conclusions
.P
We’re ready to blow the socks off the market!
.SG
.CS
Sample Document
18 October 2001 15:21
433CHAPTER 14
ms Macros
This chapter presents the following topics:
• Alphabetical summary of ms macr os
• Number registers for page layout
• Reserved macro and string names
• Reserved number register names
• Sample document
Alphabetical Summary of ms Macros
.1C
.1C
Retur n to single-column format after .2C or .MC . The .1C macr o causes a
page break.
.2C
.2C
Start two-column format. Return to single-column with .1C .
.AB
.AB
Begin abstract in cover sheet. End abstract with .AE .
434
18 October 2001 15:22
Chapter 14 – ms Macros.AE
.AE
End abstract begun with .AB .
.AI
.AI
name
address
Print name, address, etc. of author’s institution. Generally follows .AU in a
cover sheet sequence; may be repeated up to nine times for multiple
author/institution pairs.
.AU
.AU
name
Print author’s name. Generally follows .TL and precedes .AI in a cover
sheet sequence; may be repeated up to nine times for multiple authors.
.B [ text ] [ text2 ]
.B
Print text in boldface. If text2 is provided, concatenate it with text, but in
the previous font. If no arguments are supplied, equivalent to .ft 3 or .ft
B .
Enclose following text in a box. End box with .B2 .
.B2
.B2
End boxed text (started with .B1 ).
.BD
.BD
Start block display. Text is output exactly as it appears in the source file,
center ed ar ound the longest line. Same as .DS B . End with .DE .
.BX
.BX word
Surr ound wor d in a box. Usually doesn’t work for more than one word at
a time, due to problems with filling. To box more than one word, separate
each with an unpaddable space ( \ space).
Alphabetical Summary of ms Macros — .BX
18 October 2001 15:22
435
.B1
.B1.CD
.CD
Start centered display. Each line in the display is individually centered.
Same as .DS C . End with .DE .
.DA
.DA
Print today’s date as the center footer of each page.
.DE
.DE
End displayed text started with .DS .
.DS
.DS [ type ]
Start displayed text. End with .DE .
Type
B
C
I
L
.EN
Left-justified block, centered; see .BD.
Center ed display; see .CD.
Indented display (the default); see .ID.
Left-center ed display; see .LD.
.EN
End equation display started with .EQ .
.EQ
.EQ
Start equation display to be processed by eqn . End with .EN . See Chapter
17, tr off Prepr ocessors, for more infor mation on eqn .
.FS
.FS
Start footnote. Text of footnote follows on succeeding lines. End with .FE .
.FE
.FE
End footnote started with .FS .
436
18 October 2001 15:22
Chapter 14 – ms Macros.I [ text ] [ text2 ]
.I
Print text in italics. If text2 is provided, concatenate it with text, but in the
pr evious font. If no arguments are supplied, equivalent to .ft 2 or .ft I .
.ID
.ID
Start indented display. Text is output exactly as it is in the source file, but
indented 8 ens. Same as .DS I . End with .DE .
.IP
.IP label n
Indent paragraph n spaces with hanging label. .RS and .RE can be used
for nested indents.
.KE
.KE
End static keep started with .KS or floating keep started with .KF .
.KF
.KF
Begin floating keep. End with .KE . That is, if the amount of space requir ed
to output the text exceeds the space remaining on the current page, the
keep is saved for the next page, while text following the display is used to
fill the current page.
.KS
.KS
Start keep. End with .KE . Enclosed text stays on same page. If text won’t
fit on current page, a page break occurs.
.LD
.LD
Start left-justified display. Block is centered, but individual lines are left
justified in the block. Same as .DS L . End with .DE .
.LG
.LG
Incr ease type size by two points ( troff only). Restore nor mal type with
.NL .
Alphabetical Summary of ms Macros — .LG
18 October 2001 15:22
437.LP
.LP
Start block paragraph. Interparagraph spacing is determined by register PD .
Default is .5v in troff and 1 line in nroff .
.MC
.MC cw gw
Start multicolumn mode, with column-width cw and gutter width gw. The
macr o generates as many columns as can fit in the current line length.
Retur n to single-column mode with .1C .
.ND
.ND date
Supply the date, instead of using the current date. See also .DA.
.NH
.NH [ n ]
heading text
Number ed section heading; level n of the section number is automatically
incr emented.
.NL
.NL
Restor e default type size ( troff only). Used after .LG or .SM .
.PP
.PP
Start standard indented paragraph. Size of paragraph indent is stored in
register PI (default is 5 ens).
.QE
.QE
End quoted paragraph started by .QS . .QS / .QE is similar to .QP .
.QP
.QP
Begin quoted paragraph: indented on both sides, with blank lines above
and below, and (in troff ) with the type size reduced by 1 point.
438
18 October 2001 15:22
Chapter 14 – ms Macros.QS
.QS
Begin quoted paragraph, retaining current point size and vertical spacing.
End with .QE .
.R
.R
Retur n to the roman font; essentially equivalent to .ft R .
.RE
.RE
End one level of relative indent started with .RS .
.RP
.RP
Initiate title page for a “released paper.”
.RS
.RS
Right shift. Increase relative indent one level. End with .RE . Often used
with .IP .
Print a signature line.
.SH
.SH
heading text
Unnumber ed section heading. See also .NH.
.SM
.SM
Change to smaller type size ( troff only). Restore nor mal type with .NL .
.TE
.TE
End table to be processed by tbl . See .TS.
Alphabetical Summary of ms Macros — .TE
18 October 2001 15:22
439
.SG
.SG.TH
.TH
End of table header. Must be used with a preceding .TS H .
.TL
.TL
multiline title
Title line(s) for cover sheet. A multiline title can be specified, ended by
the next macro (usually .AU in the cover sheet sequence).
.TS
.TS [ H ]
Start table to be processed by tbl . Use H to put a table header on all
pages (end table header with .TH ). End table with .TE . See Chapter 17 for
mor e infor mation on tbl .
.UL
.UL
Underline following text, even in troff .
Number Register s for Page Layout
Name Meaning Default
CW
FL
FM
GW
HM
LL
LT
PD
PI
PO
PS
QI
VS Column width
Footnote length
Bottom margin
Intercolumn gap
Top margin
Line length
Title length
Paragraph spacing
Paragraph indent
Page offset
Point size
Quotation indent
Vertical line spacing 7/15 of line length
11/12 of line length
1 inch
1/15 of line length
1 inch
6 inches
6 inches
.3v
5 ens
1 inch
10 points
5 ens
12 points
Reser ved Macro and String Names
The following macro and string names are used by the ms package. Avoid using
these names for compatibility with the existing macros. An italicized n means that
the name contains a numeral (generally the interpolated value of a number regis-
ter).
440
18 October 2001 15:22
Chapter 14 – ms Macros,
1C
B
C2
DY
FA
FS
In
LP
ND
QE
Rn
SM
TM
WB
.]
2C
B1
CA
EE
FE
FV
IP
LT
NH
QF
RP
SN
TQ
WH
:
AB
B2
CC
EG
FF
FX
IZ
MC
NL
QP
RS
SY
TR
WT
[.
AE
BB
CF
EL
FG
FY
KD
ME
NP
QS
RT
TA
TS
XF
[c
AI
BG
CH
EM
FJ
HO
KF
MF
OD
R
S0
TC
TT
XK
[o
An
BT
CM
EN
FK
I
KJ
MH
OK
R3
S2
TD
TX
XP
ˆ
AT
BX
CT
En
FL
IE
KS
MN
PP
RA
S3
TE
UL
‘
AU
C
DA
EQ
FN
IH
LB
MO
PT
RC
SG
TH
US
 ̃
AX
C1
DW
EZ
FO
IM
LG
MR
PY
RE
SH
TL
UX
Reser ved Number Register Names
The following number register names are used by the ms package. An italicized n
means that the name contains a numeral (generally the interpolated value of
another number register).
AJ
EF
H3
IP
KM
MM
PD
QI
TK
YE
AV
FC
H4
IR
L1
MN
PE
QP
TN
YY
BC
FL
H5
IS
LE
NA
PF
RO
TQ
ZN
BD
FM
HM
IT
LL
NC
PI
SJ
TV
BE
FP
HT
IX
LT
ND
PN
ST
TY
BH
GA
I0
In
MC
NQ
PO
T.
TZ
BQ
GW
IF
Jn
MF
NS
PQ
TB
VS
BW
H1
IK
KG
MG
NX
PS
TC
WF
nT
CW
H2
IM
KI
ML
OJ
PX
TD
XX
When you’re writing your own macros, the safest bet is to use mixed-case letters
for macro names. (Using uppercase letters could conflict with reserved ms names,
and using lowercase letters could conflict with troff requests.)
Sample Document
.ND April 1, 1999
.\" Released paper
.RP
.TL
Whizprog \- The Be All and End All Program
.AU
J. Programmer
.AI
Sample Document
18 October 2001 15:22
441Wizard Corp.
012 Binary Road
Programmer’s Park, NJ 98765-4321
USA
.\" Abstract
.AB
This memorandum discusses the design and
implementation of
.I whizprog ,
the next generation of really
.B cool
do-it-all programs.
.AE
.NH
Requirements
.PP
The following requirements were identified. ...
.NH
Analysis
.PP
Here is what we determined. ...
.NH
Design
.PP
After much popcorn, we arrived at the
following design. ...
.NH
Implementation
.PP
After more popcorn and lots of Jolt Cola,
we implemented
.I whizprog
using ...
.NH
Conclusions
.PP
We’re ready to blow the socks off the market!
.SG
442
18 October 2001 15:22
Chapter 14 – ms MacrosCHAPTER 15
me Macros
This chapter presents the following topics:
• Alphabetical summary of me macr os
• Predefined strings
• Predefined number registers
• Sample document
Alphabetical Summary of me Macros
Retur n to single-column format. See .2c.
.2c
.2c
Enter two-column format. Force a new column with .bc ; end two-column
mode with .1c .
.ar
.ar
Set page number in arabic.
443
18 October 2001 15:23
m
M
.1c
.1c.b
.b w x
Set w in bold and x in previous font.
.(b
.(b type
Begin block keep. End with .)b .
Type
C
F
L
.)b
Center ed block keep.
Filled block keep.
Left-justified block keep.
.)b
End block keep started with .(b .
.ba
.ba n
Set the base indent to n.
.bc
.bc
Begin column; used after .2c .
.bi
.bi w x
Set w in bold italics and x in previous font.
.bl
.bl n
Leave n lines of whitespace. Equivalent to .sp n inside a block.
.bu
.bu
Begin paragraph marked by a bullet.
444
18 October 2001 15:23
Chapter 15 – me Macros.bx
.bx w x
Set w in a box and x immediately outside the box.
.+c
.+c title
Begin chapter with title.
.$c
.$c title
Begin numbered chapter with title.
.$C
.$C keyword n title
User-definable macro. Called by .$c , supplying keywor d (e.g., “Chapter” or
“Appendix”), chapter or appendix number (n), and title.
.(c
.(c
Begin centered block. End with .)c .
.)c
.)c
End centered block started with .(c .
.(d
.(d
.)d
.)d
End delayed text. Print text with .pd .
.ef ’l’c’r ’
.ef
Print three-part footer on all even pages. Parts are left-justified, centered,
and right-justified at bottom of every even page.
Alphabetical Summary of me Macros — .ef
18 October 2001 15:23
445
m
M
Begin delayed text. End with .)d ..eh
.eh ’l’c’r ’
Print three-part header on all even pages. Parts are left-justified, centered,
and right-justified at top of every even page.
.EN
.EN
End equation display started with .EQ .
.ep
.ep
End this page and print footnotes.
.EQ
.EQ format title
Start equation display to be processed by eqn , using output for mat and
having title printed on the right margin next to the equation. End with .EN .
See Chapter 17, tr off Prepr ocessors, for more infor mation on eqn .
Format
C
I
L
.$f
Center ed.
Indented.
Left-justified.
.$f
Call to print footer.
.(f
.(f
Begin text for footnote. End with .)f .
.)f
.)f
End footnote text started with .(f .
.fo
.fo ’l’c’r ’
Print three-part footer on all pages. Parts are left-justified, centered, and
right-justified at bottom of every page.
446
18 October 2001 15:23
Chapter 15 – me Macros.GE
.GE
End a picture created by gremlin . Must be used with a preceding .GS .
Recent versions of me only.
.GF
.GF
End a picture created by gremlin , and “flyback” to the initial vertical posi-
tion. Must be used with a preceding .GS . Recent versions of me only.
.GS [ flag ]
.GS
Start a picture created by gremlin . Must be used with a following .GE or
.GF . Recent versions of me only. ( gremlin is a picture-drawing tool similar
to pic that was developed at UCB.) The default action is to center the pic-
tur e.
Values for flag
L
R
Place the picture next to the left margin.
Place the picture next to the right margin.
.$H
.$H
Nor mally undefined macro, called immediately before printing text on a
page. Can be used for column headings, etc.
.$h
.$h
Call to print header.
Print three-part heading on all pages. Parts are left-justified, centered, and
right-justified at top of every page.
.hl
.hl
Draw a horizontal line equal to the width of page.
.hx
.hx
Don’t print headings and footers on next page.
Alphabetical Summary of me Macros — .hx
18 October 2001 15:23
447
m
M
.he
.he ’l’c’r’.i
.i w x
Set w in italics (underline in nroff ) and x in previous font.
.IE
.IE
End a picture created by ideal . Must be used with a preceding .IS . Recent
versions of me only.
.IF
.IF
End a picture created by ideal , and “flyback” to the initial vertical posi-
tion. Must be used with a preceding .IS . Recent versions of me only.
.IS
.IS
Start a picture created by ideal . Must be used with a following .IE or .IF .
Recent versions of me only. ( ideal is a picture-drawing tool similar to pic
that was developed at Bell Labs.)
.ip
.ip label n
Indent paragraph n spaces with hanging label.
.ix
.ix [ ±n ]
Indent but don’t break the line. Equivalent to ’in n.
.(l
.(l type
Begin list. End with .)l .
Type
C
F
L
.)l
Center ed list
Filled list
Left-justified list
.)l
End list started with .(l .
448
18 October 2001 15:23
Chapter 15 – me Macros.ll
.ll +n
Set line length to +n (all environments). This is a macro, not the nroff /
troff .ll request.
.lo
.lo
Load a locally defined set of macros (usually /usr/lib/me/local.me ). (Not
in recent versions.)
.lp
.lp
Begin block paragraph (left-justified).
.m1
.m1 n
Set n spaces between top of page and heading.
.m2
.m2 n
Set n spaces between heading and first line of text.
.m3
.m3 n
Set n spaces between footer and text.
.m4
.m4 n
m
M
Set n spaces between footer and bottom of page.
.n1
.n1
Number lines in margin beginning with 1.
.n2
.n2 n
Number lines in margin beginning with n; stop numbering if n is 0.
Alphabetical Summary of me Macros — .n2
18 October 2001 15:23
449.np
.np
Begin a numbered paragraph. Current number is accessed via \n($p .
.of
.of ’l’c’r’
Print three-part footer on all odd pages. Parts are left-justified, centered,
and right-justified at bottom of every odd page.
.oh
.oh ’l’c’r’
Print three-part header on all odd pages. Parts are left-justified, centered,
and right-justified at top of every odd page.
.$p
.$p title n d
Print section heading with specified title, section number n, and depth of
section d.
.$0
.$0 title n d
Called automatically after every call to .$p . Nor mally undefined, but may
be used to put every section title automatically into table of contents, or
for some similar function.
.$n
.$n
These are traps called just before printing a section of depth n (n is 1–6).
Called from .$p .
.pa
.pa [ ±n ]
Equivalent to .bp .
.pd
.pd
Print delayed text, indicated by .(d and .)d .
450
18 October 2001 15:23
Chapter 15 – me Macros.PE
.PE
End a picture created by pic . Must be used with a preceding .PS . Recent
versions of me only.
.PS
.PS vert indent
Start a picture created by pic . Must be used with a following .PE . Recent
versions of me only.
vert is the amount of vertical space to provide for the picture, and indent
is how far from the left margin to place the picture.
.pp
.pp
Begin indented paragraph.
.q
.q w x
Surr ound w with double quotes and x immediately outside the quotes.
.(q
.(q
Begin major quote. End with .)q .
.)q
.)q
End major quote started with .(q .
Set w in roman font and x in previous font.
.rb
.rb w x
Set w in bold and x in previous font.
.re
.re
Reset tabs to every 0.5 inch (in troff ) or to every 0.8 inch (in nroff ).
Alphabetical Summary of me Macros — .re
18 October 2001 15:23
451
m
M
.r
.r w x.ro
.ro
Set page number in roman numerals.
.$s
.$s
Separate footnotes with a 1.5-inch horizontal line.
.sh
.sh
Begin numbered section heading.
.sk
.sk
Leave next page blank. Like the troff .bp request.
.sm
.sm small reg
Concatenate small and reg, with small set one point smaller in size. Recent
versions of me only.
.sx
.sx +n
Begin a paragraph at level n.
.sz
.sz n
Set character point size to n, with line spacing set proportionally.
.TE
.TE
End table. See .TS.
.TH
.TH
End table header. Must be used with a preceding .TS H .
452
18 October 2001 15:23
Chapter 15 – me Macros.th
.th
Initialize for a thesis. (Not in recent versions.)
.tp
.tp
Initialize for a title page.
.TS [ H ]
.TS
Start table to be processed by tbl . Use H to put a table header on all pages
(end table header with .TH ). End table with .TE . See Chapter 17 for more
infor mation on tbl .
.u
.u w x
Underline w and set x in previous font.
.uh
.uh title
Begin unnumbered section heading using title.
.(x
.(x
Begin index entry. End with .)x .
.)x [ page ] [ author ]
.)x
End index entry started with .(x . Print index with .xp .
m
M
The arguments are optional. If page is “_” (an underscore), the page num-
ber for this index entry is omitted. Otherwise, page is the page number to
use instead of the one that is automatically calculated.
The second argument is printed right-justified at the end of the entry; it
might be used for the author’s name, for example. If author is specified,
page must be too: use \n% to get the current page number.
.xl
.xl n
Set the line length to n (curr ent envir onment only). (This is actually the
nroff / troff inter nal .ll request.)
Alphabetical Summary of me Macros — .xl
18 October 2001 15:23
453.xp
.xp
Print index. See also .(x and .)x.
.(z
.(z
Begin floating keep.
.)z
.)z
End floating keep.
.++
.++ type header
Define the section of the paper being entered. Specify a type with a
header title string.
Type
A
AB
B
C
P
RA
RC
Appendix.
Abstract.
Bibliography.
Chapter.
Pr eliminary section (table of contents, etc.).
Appendix, with page numbers reset to 1.
Chapter, with page numbers reset to 1.
Predefined Strings
Items marked with a dagger (†) appear in more recent versions of the me macr os.
You will need to double-check them on your system.
*
#
[
]
<
>
–
dw
mo
td
lq Footnote number, incr emented by .)f macr o
Delayed text number
Superscript; move up and shrink type size
Undo superscript
Subscript; move down and shrink type size
Undo subscript
3/4 em dash
Day of week, as a word
Month, as a word
Today’s date, in the form January 20, 1999 .
Left quote mark
454 Chapter 15 – me Macros
18 October 2001 15:23rq
$n †
’ †
‘ †
qa †
qe †
, †
: †
ˆ †
o †
v †
{ †
} †
 ̃ †
Right quote mark
Section name
Acute accent
Grave accent
For all
Ther e exists
Cedilla
Umlaut
Car et
° ). Usage is A\*o .
Circle (e.g., for Scandinavian A
v
Inverted “v” for Czech e . Usage is e\*v .
Begin superscript
End superscript
Tilde
Predefined Number Register s
Items marked with a dagger (†) appear in more recent versions of the me macr os.
You will need to double-check them on your system.
Section depth
First section number
Second section number
Third section number
Fourth section number
Fifth section number
Sixth section number
Relative vertical spacing in displays
Curr ent column number
Delayed text number
Footnote number
Paragraph base indent
Column width
Number of columns in effect
Number ed paragraph number
Column indent
Relative vertical spacing in text
Display (block) indent
Bottom title margin
Display (block) pre/post spacing
Block keep threshold
Curr ent chapter number
Display font
Equation pre/post space
m
M
$0 †
$1 †
$2 †
$3 †
$4 †
$5 †
$6 †
$V †
$c
$d
$f
$i †
$l
$m
$p
$s
$v †
bi
bm
bs
bt †
ch
df †
es †
Pr edefined Number Registers
18 October 2001 15:23
455ff †
fi †
fm
fp †
fs
fu †
hm
ii
pf
pi
po †
pp
ps
qi
qp
qs
sf †
si †
so †
sp †
ss †
tf
tm
tp
xs
xu †
zs
Footnote font
Footnote indent (first line only)
Footer margin
Footnote point size
Footnote prespace
Footnote undent (from right margin)
Header margin
Indented paragraph indent
Paragraph font
Paragraph indent
Simulated page offset
Paragraph point size
Paragraph prespace
Quote indent (also shortens line)
Quote point size
Quote pre/post space
Section title font
Relative base indent per section depth
Additional section title offset
Section title point size
Section prespace
Title font
Top title margin
Title point size
Index entry prespace
Index undent (from right margin)
Floating keep pre/post space
Sample Document
.tp
.(l C
Whizprog \- The Be All and End All Program
.sp
by
.sp
.ce 2
J. Programmer
Wizard Corp.
.)l
.+c Abstract
This memorandum discusses the design and
implementation of
.i whizprog ,
the next generation of really
.b cool
do-it-all programs.
.+c "The Whole Story"
.sh 1 Requirements
456
18 October 2001 15:23
Chapter 15 – me Macros.pp
The following requirements were identified. ...
.sh 1 Analysis
.pp
Here is what we determined. ...
.sh 1 Design
.pp
After much popcorn, we arrived at the
following design. ...
.sh 1 Implementation
.pp
After more popcorn and lots of Jolt Cola, we
implemented
.i whizprog
using ...
.+c "Conclusion"
.pp
We’re ready to blow the socks off the market!
m
M
Sample Document
18 October 2001 15:23
457CHAPTER 16
man Macros
This chapter presents the following topics:
• Alphabetical summary of the man macr os
• Predefined strings
• Names used internally by the man macr os
• Sample document
Alphabetical Summary of man Macros
As many as six arguments may be given for all the macros that change fonts or
pr oduce a heading. Use double quotes around multiple words to get longer head-
ings.
The .TS , .TE , .EQ , and .EN macr os ar e not defined by the man macr os. But
because nroff and troff ignor e unknown requests, you can still use them in your
manpages; tbl and eqn work with no problems.
.B
.B [ text ...]
Set the arguments in the bold font, with a space between each argument.
If no arguments are supplied, the next input line is set in bold.
.BI
.BI barg iarg ...
Set alternating bar g in bold and iar g in italic, with no intervening spaces.
458
18 October 2001 15:24
Chapter 16 – man Macros.BR barg rarg ...
.BR
Set alternating bar g in bold and rar g in roman, with no intervening
spaces.
.DT
.DT
Reset the tab stops to their defaults, every 1/2 inch.
.HP [ indent ]
tag text
.HP
Start a paragraph with a “hanging” indent, one where a tag sits out to the
left side. The optional indent is how far to indent the paragraph. The tag
text follows on the next line. See the example under .TP.
.I [ text ...]
.I
Set the arguments in the italic font, with a space between each argument.
If no arguments are supplied, the next input line is set in italic.
.IB iarg barg ...
.IB
Set alternating iar g in italic and bar g in bold, with no intervening spaces.
.IP tag [ indent ]
.IP
Start a paragraph with a hanging indent, one where a tag sits out to the
left side. Unlike .HP and .TP , the tag is supplied as an argument to the
macr o. The optional indent is how far to indent the paragraph.
Example
1.
first point is ...
2.
second point is ...
.IP
The
.IP
The
.IR iarg rarg ...
.IR
Set alternating iar g in italic and rar g in roman, with no intervening
spaces.
Alphabetical Summary of man Macros — .IR
18 October 2001 15:24
459.IX
.IX text
Index macro. Solaris only; intended for SunSoft internal use.
.LP
.LP
Start a new paragraph. Just like .PP .
.P
.P
Start a new paragraph. Just like .PP .
.PD
.PD [ distance ]
Set the interparagraph spacing to distance. With no argument, reset it to
the default. Most useful to get multiple tags for a paragraph.
Example
Show that two options do the same thing.
.PP
.I Whizprog
accepts the following options.
.TP \w’\fB\-\ˆ\-help\fP’u+3n
.PD 0
.B \-h
.TP
.PD
.B \-\ˆ\-help
Print a helpful message and exit.
.PP
.PP
Start a new paragraph. This macro resets all the defaults, such as point
size, font, and spacing.
.RB
.RB rarg barg ...
Set alternating rar g in roman and bar g in bold, with no intervening
spaces.
460
18 October 2001 15:24
Chapter 16 – man Macros.RE
.RE
End a relative indent. Each .RE should match a preceding .RS . See .RS for
an example.
.RI rarg iarg ...
.RI
Set alternating rar g in roman and iar g in italic, with no intervening
spaces.
.RS [ indent ]
.RS
Start a relative indent. Each successive .RS incr eases the indent. The
optional indent is how far to indent the following text. Each .RS should
have an accompanying .RE .
Example
.PP
There are a number of important points to remember.
.RS
.IP 1.
The first point is ...
.IP 2.
The second point is ...
...
.RE
Forget these at your own risk!
.SB arg ...
.SB
Set arguments in bold, using a smaller point size, separated by spaces.
.SH arg ...
.SH
Section header. Start a new section, such as NAME or SYNOPSIS . Use double
quotes around multiple words for longer headings.
.SM
Set arguments in roman, using a smaller point size, separated by spaces.
.SS arg ...
.SS
Subsection header. Start a new subsection. Use double quotes around
multiple words for longer headings.
Alphabetical Summary of man Macros — .SS
18 October 2001 15:24
461
.SM arg ....TH
.TH title section date ...
Title heading. This is the first macro of a manpage, and sets the header
and footer lines. The title is the name of the manpage. The section is the
section the manpage should be in (a number, possibly followed by a let-
ter). The date is the date the manpage was last updated. Differ ent systems
have differ ent conventions for the remaining arguments to this macro. For
Solaris, the fourth and fifth arguments are the left-page footer and the
main (center) header.
Example
.TH WHIZPROG 1L "April 1, 1999"
.SH NAME
whizprog \- do amazing things
...
.TP
.TP [ indent ]
tag text
Start a paragraph with a hanging indent, one where a tag sits out to the
left side. The optional indent is how far to indent the paragraph. The tag
text follows on the next line. See also the example under .PD.
Example
.TP
1.
The
.TP
2.
The
.2i
first point is ...
.2i
second point is ...
Predefined Strings
The following strings are predefined; of these, only R and S ar e documented.
String Effect in trof f Ef fect in nrof f
\*(lq
\*(rq
\*(PN
\*(R
\*(S ‘‘ (‘ ‘)
’’ (’ ’) "
"
462
18 October 2001 15:24
Curr ent page number Curr ent page number
\(rg (®) (Reg.)
Restor e default point size Restor e default point size
Chapter 16 – man MacrosInter nal Names
The Solaris man macr os use a number of macro, string, and number register
names that begin with ] , } , and ) . Such names should be avoided in your own
files.
The number registers D , IN , LL , P , X , d , m , and x ar e used internally by the Solaris
man macr os. Using .nr D 1 befor e calling the .TH macr o generates pages with dif-
fer ent even and odd footers. *
Sample Document
.TH WHIZPROG 1 "April 1, 1999"
.SH NAME
whizprog \- do amazing things
.SH SYNOPSIS
.B whizprog
[
.I options
] [
.I files
\&... ]
.SH DESCRIPTION
.I Whizprog
is the next generation of really
.B cool
do-it-all programs. ...
.SH OPTIONS
.PP
.I Whizprog
accepts the following options.
.TP \w’\fB\-\ˆ\-level\fP’u+3n
.PD 0
.B \-h
.TP
.PD
.B \-\ˆ\-help
Print a helpful message and exit.
.TP
.BI \-\ˆ\-level " level"
Set the level for the
.B \-\ˆ\-stun
option.
.TP
.B \-\ˆ\-stun
Stun the competition, or other beings, as needed. ...
.SH SEE ALSO
.IR "Whizprog \- The Be All and End All Program" ,
by J. Programmer.
.PP
.IR wimpprog (1)
.SH FILES
.B /dev/phaser
.br
* This information was gleaned by examining the actual macros. It is not documented, so Your Mileage
May Vary.
Sample Document
18 October 2001 15:24
463.B /dev/telepath
.SH CAVEATS
.PP
There are a number of important points to remember.
.RS
.IP 1.
Use
.B \-\ˆ\-help
to get help.
.IP 2.
Use
.B \-\ˆ\-stun
with care. ...
.RE
Forget these at your own risk!
.SH BUGS
The
.B \-\ˆ\-stun
option currently always uses
.BR "\-\ˆ\-level 10" ,
making it rather dangerous.
.SH AUTHOR
J. Programmer,
.B jp@wizard-corp.com
464
18 October 2001 15:24
Chapter 16 – man MacrosCHAPTER 17
troff Pre processor s
This chapter is divided into the following four sections, each covering a differ ent
pr eprocessor of the nroff / troff for matting system:
• The tbl pr eprocessor
• The eqn pr eprocessor
• The pic graphics language prepr ocessor
• The refer pr eprocessor
Each of these prepr ocessors translates code into nroff / troff requests and escape
sequences. They process information only between delimiting macros: other input
text is left alone. Usually, one or more of these prepr ocessors ar e invoked as part
of a command pipeline to format a file:
$ pic file | tbl | eqn | troff options | spooler
On multiuser systems, it is typical to have a general-purpose shell script for for-
matting. You would then select various command-line options to specify which (if
any) prepr ocessors to include in your particular format command. However, you
can also invoke the prepr ocessors individually. This is useful for confirming that
syntax is correct or for determining where it fails. For example, the command:
$ tbl file
In SVR4, these commands are part of the BSD compatibility package and are
found in /usr/ucb . On Solaris, with the exception of pic , they are a standard part
of the system and are found in /usr/bin . The GNU version of troff ( groff , see
http://www.gnu.or g) comes with versions of tbl , eqn , pic , and refer .
465
18 October 2001 15:28
takes input between each .TS / .TE macr o pair and converts it to tbl code. All other
input is passed through to the output unchanged.tbl
tbl is a prepr ocessor for formatting tables in nroff / troff . When used in a com-
mand pipeline, tbl should precede eqn . This makes output processing more effi-
cient. tbl has the following command-line syntax:
tbl [options] [files]
The canonical refer ence for tbl is Tbl — A Pr ogram to Format Tables, by L.L.
Cherry and M.E. Lesk, in UNIX Programmer’s Manual, Tenth Edition, Volume 2,
AT&T Bell Laboratories, M.D. McIlroy and A.G. Hume editors, Holt Rinehart &
Winston, 1990. This paper may be downloaded from http://cm.bell-labs.com/cm/cs/
doc/76/tbl.ps.gz.
Options
-me Pr epend the me macr os to the front of files .
-mm Pr epend the mm macr os to the front of files .
-ms Pr epend the ms macr os to the front of files .
-TX Pr oduce output using only full vertical line motions. This is useful when for-
matting with nroff or when printing to a device that does not support frac-
tional line motion. (This option is not on Solaris tbl .)
General Coding Scheme
In a text file, coding for tbl might look like this:
.TS H
options;
format1
format2.
Column Titles
.TH
Item1
Item2
Item1
Item2
.TE
Item3
Item3 ...
Successful processing of a table by tbl depends largely on the header lines, which
consist of one line listing the options and one or more for mat lines. Each field of
the table input must be separated by a tab or the designated tab symbol, with each
row typed entirely on a single line unless a field is enclosed by the text block
symbols T{ and T} .
tbl Macros
.TS
.TE
.TS H
466
18 October 2001 15:28
Start table.
End table.
Used when the table continues onto more than one page. Used with .TH
to define a header that prints on every page.
Chapter 17 – trof f Pr eprocessorsWith .TS H , end the header portion of the table.
Continue table with new format line(s).
.TH
.T&
Options
Options affect the entire table. Options can be separated by commas or spaces,
but the line must end with a semicolon.
center
expand
blank
box
doublebox
allbox
tab(x)
linesize n
delim xy
Center with current margins.
Flush with current right and left margins.
Flush with current left margin (the default).
Enclose table in a box.
Enclose table in two boxes.
Enclose each table entry in a box.
Define the tab symbol to be x instead of a tab.
Set type size of lines or rules (e.g., from box ) to n points.
Recognize x and y as the eqn delimiters.
Format
The format line affects the layout of individual columns and rows of the table.
Each line contains a key letter for each column of the table. The column entries
should be separated by spaces, and the format section must end with a period.
Each line of format corresponds to one line of the table, except for the last, which
corr esponds to all following lines up to the next .T& , if any.
Ke y letter s
c
l
r
n
a
s
ˆ
Center.
Flush left.
Flush right.
Align numerical entries.
Align alphabetic subcolumns.
Horizontally span previous column entry across this column.
Vertically span (center) entry from previous row down through this row.
Ke y modifier s
These must follow a key letter.
Boldface.
Italics.
Font x.
Point size n.
Vertical line spacing, in points. Applies only to text blocks.
b
i
fx
pn
vn
tbl
18 October 2001 15:28
467Begin any corresponding vertically spanned table entry (i.e., from ˆ ) at
the top line of its range.
Equal-width columns.
Minimum column width. Also used with text blocks. n can be given in
any acceptable troff units.
Amount of separation (in ens) between columns (default is 3).
Separate columns with a single vertical line. Typed between key letters.
Separate columns with a double vertical line. Typed between key letters.
Separate rows with a single horizontal line. Used in place of a key letter.
Separate rows with a double horizontal line. Used in place of a key letter.
t
e
w(n)
n
|
||
_
=
Data
The data portion includes both the heading and text of the table. Each table entry
must be separated by a tab character. In the description below, ➟ repr esents the
tab character.
troff requests may be used (such as .sp n, .na , etc.).
.xx
\
\ˆ
_ or =
\$_ or \$=
\_
\Rx
...➟ T{
T} ➟...
As last character in a line, combine following line with current
line (hide newline).
Span table entry that is above this row, bringing it down to be
vertically centered.
As the only character in a line, extend a single or double hori-
zontal line the full width of the table.
Extend a single or double horizontal line the full width of the
column.
Extend a single horizontal line the width of the column’s con-
tents.
Print xs as wide as the column’s contents.
Start text block as a table entry. Must end a line. Necessary
when a line of text is input over more than one line, or it will
span more than one line of output.
End text block. Must begin a line.
A tbl Example
Input:
.TS
center box linesize(6) tab(@);
cb s s.
Horizontal Local Motions
_
.T&
ci | ci s
ci | ci s
ci | ci | ci
c | l s.
Function@Effect in
\ˆ@_
468
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessors\ˆ@troff@nroff
_
\eh’n’@Move distance N
\e(space)@Unpaddable space-size space
\e0@Digit-size space
_
.T&
c | l | l.
\e|@1/6 em space@ignored
\eˆ@1/12 em space@ignored
.TE
Result:
Hor izontal Local Motions
Ef fect in
Function
tr off
nroff
\h’n’
Move distance N
\(space)
Unpaddable space-size space
\0
Digit-size space
\|
1/6 em space
ignor ed
\ˆ
1/12 em space
ignor ed
eqn
eqn is a prepr ocessor designed to facilitate the typesetting of mathematical equa-
tions. Use neqn with nroff . eqn has the following command-line syntax:
eqn [options] [files]
The canonical refer ence for eqn is Typesetting Mathematics—User’s Guide, by L.L.
Cherry and B.W. Ker nighan, in UNIX Programmer’s Manual, Tenth Edition, Vol-
ume 2, AT&T Bell Laboratories, M.D. McIlroy and A.G. Hume editors, Holt Rine-
hart & Winston, 1990. This paper may be downloaded from http://cm.bell-
labs.com/cm/cs/doc/74/eqn.ps.gz.
Options
-dxy
Use x and y as start and stop delimiters; same as specifying the eqn dir ective
delim xy.
-fn Change to font n ; same as the gfont dir ective.
-pn Reduce size of superscripts and subscripts by n points. If -p is not specified,
-sn Reduce the point size by n points; same as the gsize dir ective.
-Tdev
For mat output to device dev. The default value comes from the TYPESETTER
envir onment variable. Not available with neqn . (This option is not on Solaris
eqn .)
eqn
18 October 2001 15:28
469
the default reduction is 3 points.eqn Macros
.EQ
.EN
Start typesetting mathematics.
End typesetting mathematics.
Use the checkeq command to check for unmatched macro pairs. (Not all systems
have it, though.)
Mathematical Character s
The character sequences below are recognized and translated as shown:
Character Translation Character Translation
>=
<=
==
!=
+-
->
<-
<<
>>
inf
partial
half
prime ≥
≤
≡
≠
±
→
←
<<
>>
∞
∂
1 ⁄ 2
′ approx
nothing
cdot
times
del
grad
...
,...,
sum
int
prod
union
inter ≈
.
×
∇
∇
...
,...,
Σ
∫
Π
∪
∩
Mathematical Text
Digits, parentheses, brackets, punctuation marks, and the following mathematical
words are printed out in roman font:
sin
sinh
and
max
log
Re
cos
cosh
if
min
ln
Im
tan
tanh
for
lim
exp
arc
det
Greek Character s
Gr eek letters can be printed in uppercase or lowercase. To obtain Greek letters,
simply spell them out. Some uppercase Greek letters are not supported because
they can be specified by a roman equivalent (e.g, A for alpha, B for beta).
470
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessorsName Character Name Character
alpha
beta
gamma
delta
epsilon
zeta
eta
theta
iota
kappa
lambda
mu
nu
xi
omicr on
pi
rho
sigma α
β
γ
δ
ε
ζ
η
θ
ι
κ
λ tau
upsilon
phi
chi
psi
omega
GAMMA
DELTA
THETA
LAMBDA
XI
PI
SIGMA
UPSILON
PHI
PSI
OMEGA τ
υ
π
χ
ψ
ω
μ
ν
ξ
ο
π
ρ
σ
Γ
∆
Θ
Λ
Ξ
Π
Σ
Υ
Φ
Ψ
Ω
Diacr itical Marks
Several keywords are available to mark the tops of characters. eqn centers a mark
at the correct height. bar and under span the necessary length.
Character Translation
x
x
x
x
x
x
x
x ẋ
ẍ
x̂
x̃
→
x
↔
x
x̄
x _
dot
dotdot
hat
tilde
vec
dyad
bar
under
Ke ywords Recognized by eqn
above
back n
bold
ccol
Separate the pieces of a pile or matrix column.
Move backwards horizontally n 1/100s of an em.
Change to bold font.
Center-align a column of a matrix.
eqn
18 October 2001 15:28
471
In addition to character names and diacritical marks, eqn recognizes the following
keywords.cpile
define
delim xy
down n
fat
font x
from
fwd n
gfont x
gsize n
italic
lcol
left
lineup
lpile
mark
matrix
ndefine
over
pile
rcol
right
roman
rpile
size n
sqrt
sub
sup
tdefine
to
up n
 ̃
ˆ
{ }
"..."
Make a centered pile (same as pile ).
Cr eate a name for a frequently used string.
Define two characters to mark the left and right ends of an eqn equation
to be printed inline. Use delim off to turn off delimiters.
Move down n 1/100s of an em.
Widen the current font by overstriking it.
Change to font x, wher e x is the name or number of a font.
Used in summations, integrals, and similar constructions to signify the
lower limit.
Move forward horizontally n 1/100s of an em.
Set a global font x for all equations.
Set a global size for all equations.
Change to italic font.
Left-justify a column of a matrix.
Cr eate big brackets, big braces, big bars, etc.
Line up marks in equations on differ ent lines.
Left-justify the elements of a pile.
Remember the horizontal position in an equation. Used with lineup .
Cr eate a matrix.
Cr eate a definition that takes effect only when neqn is running.
Make a fraction.
Make a vertical pile with elements centered above each other.
Right-adjust a column of a matrix.
Cr eate big brackets, big braces, big bars, etc. Must have a matching left .
Set following constant in roman.
Right-justify the elements of a pile.
Change the size of the font to n.
Take the square root of the following equation element.
Start a subscript.
Start a superscript.
Make a definition that applies only to eqn .
Used in summations, integrals, and similar constructions to signify the
upper limit.
Move up n 1/100s of an em.
Force extra space into the output.
Force a space one-half the size of the space forced by  ̃ .
Force eqn to treat an element as a unit.
A string within quotes is not subject to alterations by eqn .
Precedence
If you don’t use braces, eqn per forms operations in the order shown in this list,
reading from left to right.
472
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessorsdyad
tilde
fwd
fat
size
over
vec
hat
back
roman
sub
from
under
dot
down
italic
sup
to
bar
dotdot
up
bold
sqrt
These operations group to the left:
over
sqrt
left
right
All others group to the right.
eqn defines a language for writing mathematics. Thus, there is a grammar with
rules about how to group and order items within the equation. See the Bell Labs
memorandum for the full story.
eqn Examples
Input:
.EQ
delim %%
.EN
%sum from i=0 to inf c sup i ̃= ̃lim from {m -> inf}
sum from i=0 to m c sup i%
.EQ
delim off
.EN
Result:
∞
m
c i = lim Σ c i
Σ
m→ ∞ i=0
i=0
Input:
.EQ
x  ̃= ̃ left [ { -b  ̃+- ̃ sqrt {b sup 2 -  ̃4ac} }
over 2a right ]
.EN
Result:
 − b ± √
 
b 2 − 4ac 
x = 

2a


pic is a graphics language program that facilitates the drawing of simple
flowcharts and diagrams. pic of fers dozens of ways to draw a picture, not only
because of the many abbreviations it allows, but because pic tries to combine the
language of geometry with English. For example, you can specify a line by its
pic
18 October 2001 15:28
473
picdir ection, magnitude, and starting point, yet you can often achieve the same effect
by simply stating, “from ther e to ther e.”
pic has the following command-line syntax:
pic [files]
Full descriptions of primitive objects in pic can be ended by starting another line,
or with the semicolon character (;). A single primitive description can be contin-
ued on the next line, however, by ending the first with a backslash character ( \ ).
Comments may be placed on lines beginning with the pound sign ( # ).
Solaris does not have pic .
The canonical refer ence for pic is Bell Labs Computing Science Technical Report
#116, by B.W. Ker nighan. This paper may be downloaded from http://cm.bell-
labs.com/cm/cs/cstr/116.ps.gz. That document describes a newer version of pic
with more featur es than what is described here, but such features may not be uni-
versally available. You should read it if you plan to do any serious work in pic .
pic Macros
.PS [ h [ w ]]
.PS < file
.PE
.PF
Start pic description. h and w, if specified, are the desired height and
width of the picture; the full picture can expand or contract to fill this
space.
Read contents of file in place of current line.
End pic description.
End pic description and retur n to vertical position before matching
.PS .
troff requests or macros embedded in the body of a picture description are
passed through unchanged. They are assumed to make sense at that point. Be
car eful not to use requests or macros that generate any horizontal or vertical
motion.
Dec larations
At the beginning of a pic description, you may declare a new scale, and declare
any number of variables. pic assumes you want a 1-to-1 scale, where units are
inches by default. You can declare a dif ferent scale, i.e., centimeters, by declaring:
scale = 2.54
You may use variables instead of numbers in a description; pic substitutes the vari-
able’s value. Instead of:
line right n
you may use a variable, for example, a , by declaring at the top of the description:
a = n
474
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessorsYou may then write:
line right a
Variable names must begin with a lowercase letter. The rest of the name may con-
sist of uppercase or lowercase letters, digits, and underscores. Variables retain their
values from picture to pictur e.
Pr imitives
pic recognizes several basic graphical objects, or primitives. These primitives are
specified by the following keywords:
arc
arrow
box
circle
ellipse
line
move
spline
"text"
Syntax
Primitives may be followed by relevant options. Options are discussed later in this
section.
arc [ cw ] [ options ]
arrow [ options ]
box [ options ]
circle [ options ]
ellipse [ options ]
line [ options ]
move [ options ]
spline [ options ]
"text"
A fraction of a circle (default is 1/4 of a circle). The cw option
specifies a clockwise arc; default is counter-clockwise.
Draw an arrow. Essentially the same as line -> .
Draw a box.
Draw a circle.
Draw an ellipse.
Draw a line.
A change of position in the drawing. Essentially, an invisible
line.
A smooth curve, with the feature that a then option results in
a gradual (sloped) change in direction. In other words, when
drawing a path using line , you get sharp corners each time
the path changes direction. With a spline , you instead get a
smooth curve.
Text centered at current point.
Options
right [ n ]
left [ n ]
up [ n ]
down [ n ]
The direction of the primitive; default is the direction
in which the previous description had been heading.
Cr eate diagonal motion by using two directions on the
option line. Each direction can be followed by a speci-
fied length n.
pic
18 October 2001 15:28
475
The options below are grouped by function. Note that at , with , and from specify
points. Points may be expressed as Cartesian coordinates or with respect to previ-
ous objects.rad n
diam n Cr eate the primitive using radius or diameter n.
ht n
wid n Cr eate the primitive using height or width n. For an
arr ow, line, or spline, height and width refer to arrow-
head size.
same Cr eate the primitive using the same dimensions speci-
fied for the most recent matching primitive.
at point Center the primitive at point.
Designate the part of the primitive to be at point (e.g.,
with .part at point
top , or a cor ner).
from point1 to point2
->
<-
<-> Draw the primitive from point1 to point2.
Dir ect the arrowhead forward.
Dir ect the arrowhead backward.
Dir ect the arrowhead both ways.
chop n m Chop n fr om beginning of primitive and m fr om end.
With only one argument, the same value is chopped
fr om both ends. With no arguments, chop a default
amount (usually circlerad ).
dotted
dashed
invis Draw the primitive using lines that are dotted, dashed,
or invisible. (An invisible object still occupies space in
the output.) Default is solid lines.
then ... Continue primitive in a new direction. Relevant only to
lines, splines, moves, and arrows. Can be placed
befor e or after any text.
"text" Center the text over the center point of the object. The
options for text described in the next section may also
be used.
Te xt
Text must be placed within quotes. To break the line, break into two (or more)
sets of quotes. Text always appears centered within the object, unless given one of
the following arguments:
ljust
rjust
above
below
476
18 October 2001 15:28
Text
Text
Text
Text
appears
appears
appears
appears
flush left, vertically centered.
flush right, vertically centered.
above the center.
below the center.
Chapter 17 – trof f Pr eprocessorsObject Blocks
Several primitives can be combined to make a complex object (for example, an
octagon). This complex object can be treated as a single object by declaring it as a
block:
Object: [
description
.
.
.
]
Brackets are used as delimiters. Note that the object is declared as the name of a
place, and hence it must begin with a capital letter.
Macros
The same sequence of commands can be repeated by using macros. The syntax is:
define sequence %
description
.
.
.
%
Her e the percent sign ( % ) is the delimiter, but you can use any character that isn’t
in the description.
Macr os can take parameters, expressed in the definition as $1 thr ough $9 . Invoke
the macro with the syntax:
sequence(value1,value2,...)
Positioning
In a pic description, the first action begins at (0,0) unless otherwise specified with
coordinates. Thus, as objects are placed above and left of the first object, the point
(0,0) moves down and right on the drawing.
All points are ultimately translated by the formatter into x- and y-coordinates. You
may therefor e refer to a specific point in the picture by incr ementing or decre-
menting the coordinates. For example:
2nd ellipse + (.5,0)
This refers to the position 1/2 inch to the right of the center of the second ellipse.
last box.x
pic
18 October 2001 15:28
477
The x- and y-coordinates of an object are the point where the center of the object
is placed. You may refer to the x- and y-coordinates of an object by placing .x or
.y at the end. For example:refers to the x-coordinate of the most recent box drawn. You can refer to some of
the object’s physical attributes in a similar way:
x-coordinate of object’s center.
y-coordinate of object’s center.
Height of object.
Width of object.
Radius of object.
One of the object’s corners. Corners are described below.
.x
.y
.ht
.wid
.rad
.corner
Unless otherwise positioned, each object begins at the point where the last object
left off. However, if a command (or sequence of commands) is set off by curly
braces ( { } ), pic then retur ns to the position before the first brace.
Positioning between objects
Ther e ar e two ways to refer to a previous object.
•
Refer to it by order. For example:
1st box
3rd box
last box
2nd last box
•
Declar e it with a name, in initial caps, on its declaration line. For example:
Line1: line 1.5 right from last box.sw
To refer to a point between two objects, or between two points on the same
object, you may write:
fraction of the way between first.position and second.position
or (abbreviated):
fraction <first.position, second.position>
Cor ners
When you refer to a previous object, pic assumes you mean the object’s center
unless you specify a corner. To specify a corner, use either of these forms:
.corner of object
object.corner
For example:
.sw of last box
last box.sw
478
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessorsValid corners can be specified as any of the following:
n
s
e
w
ne
nw
se
sw
t
b
r
l
start
end
North
South
East
West
Northeast
Northwest
Southeast
Southwest
Top (same as n )
Bottom (same as s )
Right (same as e )
Left (same as w )
Point where drawing of object began
Point where drawing of object ended
You may also refer to the following parts of an object:
upper right
upper left
lower right
lower left
Expressions
Expr essions may be used anywhere pic needs a numeric value (such as when
specifying coordinates or amounts of motion). Expressions consist of numeric con-
stants, variables, and operators.
pic recognizes the following operators.
+
-
*
/
%
ˆ
Addition
Subtraction
Multiplication
Division
Modulus (remainder after division)
Exponentiation
Default Values
Various system variables control the default dimensions of objects. You can change
these defaults by typing a description line of the form:
variable = value
pic
18 October 2001 15:28
479Variable Default Variable Default
arcrad
arrowwid
arrowht
boxwid
boxht
circlerad
dashwid
ellipseht 0.25
0.05
0.1
0.75
0.5
0.25
0.05
0.5 ellipsewid
linewid
lineht
movewid
moveht
scale
textht
textwid 0.75
0.5
0.5
0.5
0.5
1
0
0
pic Examples
Input:
.PS
define smile %
a = $1
circle radius a at 0,0
arc cw radius a*.75 from a*.5,-a*.25 to -a*.5,-a*.25
"\(bu" at a*.33,a*.25
"\(bu" at a*-.33,a*.25
%
smile(.5)
.PE
Result:
•
Input (from CSTR #116):
.PS
ellipse "document"
arrow
box "PIC"
arrow
box "TBL/EQN" "(optional)" dashed
arrow
box "TROFF"
arrow
ellipse "typesetter"
.PE
480
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessors
•Result:
document
PIC
TBL/EQN
(optional)
TROFF
typesetter
refer
Along with several associated commands, refer is a prepr ocessor for managing a
database of bibliographic refer ences. The database is kept in a separate file, and
short refer ences within a document are replaced by an expanded formal version.
The alphabetical command summary at the end of this section lists the usage and
options for refer and the other commands that work with bibliographic databases.
refer is not supplied with SVR4, but it is a standard part of Solaris.
Bibliog raphic Entries
Bibliographic databases are text files, with each entry separated from the next by
one or more blank lines. Within an entry, each field consists of a key letter (given
as % letter) and associated value. Values may continue onto subsequent lines, end-
ing at the next line that starts with a % . For example:
%T
%A
%J
%V
%P
%D
5-by-5 Palindromic Word Squares
M.D. McIlroy
Word Ways
9
199-202
1976
Except for %A (the author), fields should only be supplied once. Irrelevant or inap-
plicable fields should not be provided.
Meaning
%A
%B
%C
%D
%E
%F
%G
%H
%I
%J
%K
%L
%M Author’s name
Book containing article
City (place where published)
Date of publication
Editor of book containing article
Footnote number or label (supplied by refer )
Gover nment order number
Header commentary, printed before refer ence
Issuer (publisher)
Jour nal containing article
Keywords to use in locating refer ence
Label field used by refer -k
Bell Labs Memorandum
Key
refer
18 October 2001 15:28
481Key Meaning
%N
%O
%P
%Q
%R
%S
%T
%V
%X
%Y , %Z Number within volume
Other commentary, printed at end of refer ence
Page number(s)
Corporate or Foreign Author (unreversed)
Report, paper, or thesis (unpublished)
Series title
Title of article or book
Volume number
Abstract (used by roffbib , not refer )
Ignor ed by refer
General Coding Scheme
In a document, use of refer might look like this:
Palindromes are fun.
Very large ones can be used to impress your friends.
Palindromic word squares
.[
%A McIlroy
.]
are even more amazing,
and should be reserved for impressing your boss.
...
.SH REFERENCES
.[
$LIST$
.]
The document shown here uses refer ’s collection mode ( -e ), where all the refer-
ences are printed at the end of the document, instead of at each place they are ref-
er enced.
Alphabetical Summary of Commands
addbib
addbib [ options ] database
Interactively add bibliography records to database.
Options
-a
Don’t prompt for an abstract.
-p file
Use file as the prompting “skeleton.” Each line should be a
pr ompt, a tab, and then the key letter to write.
482
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessorsindxbib
indxbib files
Cr eate an inverted index for refer bibliographic database files. These
ar e then used by lookbib and refer .
Generated files
For each original file x, indxbib cr eates four new files.
The
The
The
The
x .ia
x .ib
x .ic
x .ig
entry file
posting file
tag file
refer ence file
lookbib
lookbib database
Search a bibliographic database created by indxbib . lookbib pr ompts
with a > sign for keywords and prints all records matching the key-
word. If none are found, only another > pr ompt appears. While look-
bib works without the inverted index files created by indxbib , such
operation is slower. See also addbib and indxbib.
refer [ options ] files
refer
Pr ocess files for bibliographic refer ences. Input is passed through to
the output unchanged, except for lines bracketed by .[ and .] . Such
lines are taken to be refer ences to citations kept in a separate
database. Based on the keywords provided between the brackets,
refer generates troff .ds commands that define strings containing
the relevant pieces of information. It then generates calls to macros
that can format the refer ences appr opriately. The ms and me macr o
packages contain macro definitions for use with refer . The line right
befor e the call to .[ will have a suitable string appended to its end to
indicate the use of a refer ence. Using the -e option, refer ences can be
gather ed for placement at the end as a group.
Options
-a [ n ]
Reverse the first n author names (i.e., last name first). With no
n, all names are reversed.
Bar e mode. Do not add inline refer ences to the text.
-b
-clist
Capitalize, with SMALL CAPS , those fields whose letters are given
in list.
→
refer — refer
18 October 2001 15:28
483refer
-e
←
Collect refer ences for output at the end. Refer ences to the same
source are only printed once. The refer ences ar e printed when
these lines are encounter ed:
.[
$LIST$
.]
-kc Instead of numbered refer ences, use labeled refer ences, wher e
the data supplied is from field % c in the database. The default is
%L .
-l [ m [ ,n ]]
Instead of numbered refer ences, use labeled refer ences, wher e
the label is generated based on the senior (first) author’s last
name, and the year of publication. If supplied, m and n indicate
how many letters from the author’s last name and the last n dig-
its of the year. Otherwise, the full name and year are used.
-n
Do not search the default file (found in /usr/lib/refer/papers ).
-p refsfile
Use refsfile as a list of refer ences.
-skeylist
Sort refer ences based on the fields listed in keylist. This implies
-e . Each letter may be followed by a number, indicating how
many of that field is to be used. A + is equivalent to infinity.
The default is -sAD , which sorts on the senior author and date.
Example
Sort on all authors, and then the date; use mybib for refer ences.
refer -sA+D -p mybib thesis.ms | tbl | eqn | troff -ms - | lp
roffbib
roffbib [ options ] [ files ]
Print a bibliographic database. roffbib is a shell script that processes
the named files (or standard input if no files) thr ough refer and prints
the results as a bibliography. By default, the bibliography is formatted
using nroff , use the -Q option to use troff instead.
roffbib accepts the following nroff / troff options and simply passes
them to the formatter: -e , -h , -m , -n , -o , -q , -r , -s , and -T . See Chap-
ter 12, nr off and trof f, for more details.
Options
-H header
Set the “header” (title) to header. The default is BIBLIOGRAPHY .
(This option is in the script, but is not documented.)
484
18 October 2001 15:28
Chapter 17 – trof f Pr eprocessors-Q Use troff instead of nroff . The page offset is set to one inch.
-V Typeset for Versatec printer/plotter. While documented in the
manpage, this option is not in the script.
-x For mat abstracts or comments in the %X field of a bibliographic
refer ence. Useful for annotated bibliographies. refer does not
use the %X field.
roffbib
Example
Sort a database and print it to a PostScript printer:
sortbib refs | roffbib -Q -x | /usr/lib/lp/postscript/dpost | lp
sortbib [ option ] files
sor tbib
Sort one or more bibliographic databases. Typically used for printing
with roffbib . Up to 16 databases may be sorted. Records may not
exceed 4096 bytes in length.
Option
-s keys
Sort on the given keys. The first four keys influence the sort; the
rest are ignor ed. Letters in keys corr espond to the key letters in
bibliography entries. Append a + to a letter to sort completely
by that key before moving to the next.
Examples
Sort by authors first, then by date:
sortbib -sA+D myrefs | ...
Sort by author, title, and date:
sortbib -sATD myrefs | ...
refer
18 October 2001 15:28
48518 October 2001 15:28PART IV
Software Development
The Unix operating system earned its reputation by providing an unexcelled envi-
ronment for software development. SCCS, RCS, and make ar e major contributors to
the efficiency of this environment. SCCS and RCS allow multiple versions of a
source file to be stored in a single archival file. make automatically updates a group
of interrelated programs.
• Chapter 18, The Source Code Control System
• Chapter 19, The Revision Control System
• Chapter 20, The make Utility
18 October 2001 15:3918 October 2001 15:39CHAPTER 18
The Sour ce Code Control System
This chapter presents the following topics:
• Intr oduction
• Overview of commands
• Basic operation
• Identification keywords
• Data keywords
• Alphabetical summary of commands
• sccs and pseudo-commands
Note: SCCS users who are mor e familiar with RCS may benefit from the “Conver-
sion Guide for SCCS Users” in Chapter 19, The Revision Control System, which lists
SCCS commands and their RCS equivalents.
For more infor mation, see Applying RCS and SCCS, listed in the Bibliography.
Introduction
The Source Code Control System (SCCS) lets you keep track of each revision of a
document, avoiding the confusion that often arises from having several versions of
one file online. SCCS is particularly useful when programs are enhanced, but the
original version is still needed.
All changes to a file are stor ed in a file named s. file , which is called an SCCS file.
Each time a file is “entered” into SCCS, SCCS notes which lines have been changed
or deleted since the most recent version. From that information, SCCS can regener-
ate the file on demand. Each set of changes depends on all previous sets of
changes.
18 October 2001 15:31
489Each set of changes is called a delta and is assigned an SCCS identification string
(sid ). The sid consists of either two components: release and level numbers (in
the form a . b) or of four components: the release, level, branch, and sequence
numbers (in the form a . b . c . d). The branches and sequences are for situations
when two on-running versions of the same file are recorded in SCCS. For example,
delta 3.2.1.1 refers to release 3, level 2, branch 1, sequence 1.
Over view of Commands
SCCS commands fall into several categories.
Basic Setup and Editing
Cr eate new SCCS files and change their parameters.
Retrieve versions of SCCS files.
Cr eate a new version of an SCCS file (i.e., append a new delta).
Cancel a get operation; don’t create a new delta.
admin
get
delta
unget
Fixing Deltas
Change the comment associated with a delta.
Combine consecutive deltas into a single delta.
Remove an accidental delta from an SCCS file.
cdc
comb
rmdel
Infor mation
help
prs
prt
sact
what
Print a command synopsis or clarify diagnostic messages.
Print portions of SCCS files in a specified format.
For mat and print the contents of one or more SCCS files. Solaris
only.
Show editing activity on SCCS files.
Search for all occurrences of the pattern get substitutes for %Z% ,
and print the following text.
Compar ing Files
sccsdiff
val
Show the differ ences between any two SCCS files.
Validate an SCCS file.
Basic Operation
This section outlines the steps to follow when using SCCS:
490
18 October 2001 15:31
Chapter 18 – The Source Code Control System• Creating an SCCS file
• Retrieving a file
• Creating new releases and branches
• Recording changes
• Caveats
Creating an SCCS File
The admin command with the -i option creates and initializes SCCS files. For
example:
admin -ich01 s.ch01
cr eates a new SCCS file and initializes it with the contents of ch01 , which becomes
delta 1.1. The message “No id keywords (cm7)” appears if you do not specify any
keywords. In general, “id keywords” refer to variables in the files that are replaced
with appropriate values by get , identifying the date and time of creation, the ver-
sion retrieved, etc. A listing of identification keywords occurs later in this chapter.
Once the s.ch01 file is created, the original ch01 file can be removed, since it can
be easily regenerated with the get command.
Retr ieving a File
The get command can retrieve any version of a file from SCCS. Using the example
above, you can retrieve ch01 by entering:
get -e s.ch01
and the messages:
1.1
new delta 1.2
272 lines
may appear. This indicates that you are “getting” delta 1.1, and the resulting file
has 272 lines of text. When the file is reenter ed into the SCCS file s.ch01 with the
delta command, its changes are delta 1.2.
The -e option indicates to SCCS that you intend to make more changes to the file
and then reenter it into SCCS. Without this option, you will receive the file with
read-only permissions. The -e option, besides releasing the file with read-write
per missions, also creates a file p.ch01 , which records information that is used by
SCCS when the file is retur ned.
Creating New Releases and Branches
The -r option to get tells SCCS what release and level number you want, but if no
level is specified, it defaults to the highest level available. With the command:
18 October 2001 15:31
491
Basic Operationget -r3.2 ch01
delta 3.2 is the release. However, the command:
get -r3 ch01
retur ns the highest-numbered level in release 3, for example, 3.8 . With the -r
option omitted, get defaults to the highest release, highest level—in other words,
the latest version.
When major changes are in stor e for a file, you may want to begin a new release
of the file by “getting” the file with the next highest release number. For example,
if the latest release of a file is 3.2, and you want to start release 4, enter:
get -e -r4 ch01
You receive the message:
3.2
new delta 4.1
53 lines
If you want to make a change to an older version of the same file, you can enter:
get -e -r2.2 ch01
and receive the message:
2.2
new delta 2.2.1.1
121 lines
You have now created a new branch from the trunk, stemming from version 2.2.
Changes in this delta will not affect those in the trunk deltas, i.e., 2.3, 3.1, etc.
Recording Changes
Once changes have been made to the SCCS file, retur n it to SCCS with:
delta s.ch01
You are prompted for comments on the changes. The delta command then does
its own get and uses diff to compare the new version of the file with the most
recent version. It then prints messages giving the new release number and the
number of lines that were inserted, deleted, and unchanged.
Caveats
Her e ar e some things to bear in mind when using SCCS:
• You can’t store binary data in an SCCS file. Solaris SCCS allows it by encod-
ing the file using uuencode .
• SCCS doesn’t preserve the execute bit from the file permissions of files
checked into it. This is important particularly for shell scripts: you have to
explicitly make them executable after retrieving them from SCCS. This should
be automated using make .
492
18 October 2001 15:31
Chapter 18 – The Source Code Control System•
Using ID keywords (see the next section) in your printf (3S) format strings can
lead to disaster. Find some indirect way to generate these strings for printing.
Identification Keywords
The following keywords may be used in an SCCS file. A get command expands
these keywords to the value described.
%A%
Shorthand for providing what strings for program files:
%A% = %Z%%Y% %M% %I%%Z%
%B%
%C%
%D%
%E%
%F%
%G%
%H%
%I%
%L%
%M%
%P%
%Q%
%R%
%S%
%T%
%U%
%W%
%Y%
%Z%
Branch number
Curr ent line number, intended for identifying where err or occurr ed
Curr ent date (YY/MM/DD)
Date newest applied delta was created (YY/MM/DD)
SCCS filename
Date newest applied delta was created (MM/DD/YY)
Curr ent date (MM/DD/YY)
sid of the retrieved text ( %R%.%L%.%B%.%S% )
Level number
Module name (filename without s. pr efix)
Fully qualified SCCS filename
Value of string, as defined by admin -fq string
Release number
Sequence number
Curr ent time (HH:MM:SS)
Time newest applied delta was created (HH:MM:SS)
Another shorthand like %A% ; %W% = %Z%%M% tab %I%
Module type, as defined by admin -ft type
String recognized by what ; that is, @(#)
Data Keywords
Data keywords specify which parts of an SCCS file are to be retrieved and output
using the -d option of the prs command.
:A:
:B:
:BD:
:BF:
:C:
:CB:
:D:
:Dd:
:Dg:
:DI:
:DL:
For m of what string
Branch number
Body
Branch flag
Comments for delta
Ceiling boundary
Date delta created ( :Dy:/:Dm:/:Dd: )
Day delta created
Deltas ignored (sequence number)
Sequence number of deltas ( :Dn:/:Dx:/:Dg: )
Delta line statistics ( :Li:/:Ld:/:Lu: )
18 October 2001 15:31
493
Data Keywords:Dm:
:Dn:
:DP:
:Ds:
:DS:
:Dt:
:DT:
:Dx:
:Dy:
:F:
:FB:
:FD:
:FL:
:GB:
:I:
:J:
:KF:
:KV:
:L:
:Ld:
:Li:
:LK:
:Lu:
:M:
:MF:
:MP:
:MR:
:ND:
:P:
:PN:
:Q:
:R:
:S:
:T:
:Th:
:Tm:
:Ts:
:UN:
:W:
:Y:
:Z:
494
18 October 2001 15:31
Month delta created
Deltas included (sequence number)
Pr edecessor delta sequence number
Default sid
Delta sequence number
Delta information
Delta type
Deltas excluded (sequence number)
Year delta created
SCCS filename
Floor boundary
File descriptive text
Flag list
Gotten body
SCCS ID string (sid) ( :R:.:L:.:B:.:S: )
Joint edit flag
Keyword error/war ning flag
Keyword validation string (not on Solaris.)
Level number
Lines deleted by delta
Lines inserted by delta
Locked releases
Lines unchanged by delta
Module name
Modification Request validation flag
Modification Request validation program name
Modification Request numbers for delta
Null delta flag
User name of programmer who created delta
SCCS file pathname
User-defined keyword
Release number
Sequence number
Time delta created ( :Th:::Tm:::Ts: )
Hour delta created
Minutes delta created
Seconds delta created
User names
A for m of what string ( :Z::M:\t:I: )
Module type flag
what string delimiter ( @(#) )
Chapter 18 – The Source Code Control SystemAlphabetical Summary of SCCS Commands
File arguments to SCCS commands can be either filenames or directory names.
Naming a directory processes all the files in that directory, with nonapplicable and
unr eadable files ignored. (Unreadable files produce an error message.) If in place
of a file argument a dash (–) is entered, the command reads the names of files to
pr ocess fr om standard input, one on each line.
Use the form yy [mm [dd [hh [mm [ss ] ] ] ] ] for commands that accept times and
dates. Values left out default to the highest valid value. Furthermor e, Solaris treats
years from 69 to 99 as being in the 20th century, while years between zero and 68
ar e in the 21st.
On Solaris, all SCCS commands reside in /usr/ccs/bin . To use these commands,
be sure to add this directory to your PATH envir onment variable.
admin [ options ] files
admin
Add files to SCCS or change options of SCCS files.
Options
-a [ user | groupid ]
Assign user or gr oupid per mission to make deltas; a ! befor e
user or gr oupid denies permission. If no list is given, anyone has
per mission.
-b
Encode the file contents as binary data. Files that contain ASCII
NUL or other control characters, or that do not end in a newline,
ar e automatically treated as binary files and encoded. This
option is typically used together with -i . Solaris only.
-dflag
Delete flag pr eviously set with -f . Applicable flags ar e:
b
cn
dn
fn
i [ string ]
j
llist
mname
n
qstring
ttype
Enable the -b option in a get command; this allows
branch deltas.
Set highest release to n (default is 9999).
Set get ’s default delta number to n.
Set lowest release to n (default is 1).
Tr eat “No id keywords (ge6)” as a fatal error. string, if
pr esent, forces a fatal error if keywords do not exactly
match string. Solaris does not allow you to supply a
string.
Allow multiple concurrent get s.
Releases in list cannot accept changes; use the letter a
to specify all releases.
Substitute %M% keyword with module name.
Cr eate a null delta from which to branch.
Substitute %Q% keyword with string.
Substitute %Y% keyword with module type.
Alphabetical Summary of SCCS Commands — admin
18 October 2001 15:31
495
→v [ prog ]
admin
←
Force delta command to prompt for modification
request numbers as the reason for creating a delta. Run
pr ogram pr og to check for valid numbers.
-e [ user | groupid ]
Per mission to make deltas is denied to each user or gr oupid.
-fflag
Set flag (see -d above).
-h
Check an existing SCCS file for possible corruption.
-i [ file ]
Cr eate a new SCCS file using the contents of file as the initial
delta. If file is omitted, use standard input. This option implies
the -n option.
-m [ list ]
Insert list of modification request numbers as the reason for cre-
ating the file.
-n
Cr eate a new SCCS file that is empty.
-rn . n
Set initial delta to release number n . n. Default is 1.1. Can only
be used with -i .
-t [ file ]
Replace SCCS file description with contents of file. If file is miss-
ing, the existing description is deleted.
-y [ text ]
Insert text as comment for initial delta (valid only with -i or -n ).
-z
cdc
Recompute the SCCS file checksum and store in first line. The
file should be verified first; see val.
cdc -rsid [ options ] files
Change the delta comments of the specified sid (SCCS ID) of one or
mor e SCCS files.
Options
-m [list]
Add the list of modification request numbers (use a ! before any
number to delete it). -m is useful only when admin has set the v
flag for file. If -m is omitted, the terminal displays MRs? as an
input prompt.
496
18 October 2001 15:31
Chapter 18 – The Source Code Control System-y [ string ]
cdc
Add string to the comments for the specified delta. If -y is omit-
ted, the terminal displays comments? as an input prompt.
Example
For delta 1.3 of file s.prog.c , add modification numbers x01-5 and
x02-8, and then add comments:
$ cdc -r1.3 s.prog.c
MRs? x01-5 x02-8
comments? this went out to review
comb [ options ] files
comb
Reduce the size of the specified SCCS files. This is done by pruning
selected deltas and combining those that remain, thereby reconstruct-
ing the SCCS file. The default behavior prunes all but the most recent
delta in a particular branch and keeps only those ancestors needed to
pr eserve the tree structure. comb pr oduces a shell script on standard
output. Actual reconstruction of the SCCS files is done by running the
script.
Options
-clist
Pr eserve only those deltas whose SCCS IDs are specified in the
comma-separated list. Use a hyphen (–) to supply a range; e.g.,
1.3,2.1-2.5 .
-o
Access the reconstructed file at the release number of the delta
that is created, instead of at the most recent ancestor. This option
may change the tree structure.
-psid
In reconstructing file, discard all deltas whose SCCS identification
string is older than sid.
-s
Generate a shell script that calculates how much the file will be
reduced in size. -s is useful as a preview of what comb does
when actually run.
delta [ options ] files
delta
Incorporate changes (add a delta) to one or more SCCS files. delta
stor es changes made to a text file retrieved by get -e and then
edited. delta nor mally removes the text file.
Alphabetical Summary of SCCS Commands — delta
18 October 2001 15:31
497
→delta
←
Options
-d
Use diff instead of bdiff to find the changes. Solaris only.
-glist
Ignor e deltas whose SCCS IDs (version numbers) are specified in
the comma-separated list. Use – to supply a range; e.g.,
1.3,2.1-2.5 .
-m [ list ]
Supply a list of modification request numbers as reasons for cre-
ating new deltas. -m is useful only when admin has set the v flag
for file. If -m is omitted, the terminal displays MRs? as an input
pr ompt.
-n Do not remove the edited file (extracted by get -e ) after execu-
tion of delta .
-p Print a diff -style listing of delta changes to file.
-rSID
Delta version number that identifies file. -r is needed only when
mor e than one version of an SCCS file is being edited simultane-
ously.
-s
Suppr ess printing of new SID and other delta information.
-y [ string ]
Insert string as a comment describing why the delta was made. If
-y is omitted, the terminal displays comments? as an input prompt.
get
get [ options ] files
Retrieve a text version of an SCCS file. The retrieved text file (also
called the g-file) has the same name as the SCCS file but drops the s.
pr efix. For each SCCS file, get prints its version number and the num-
ber of lines retrieved. See the previous section, “Identification Key-
words”, for a list of keywords that can be placed in text files.
Options
-an Retrieve delta sequence number n ; not very useful (used by
comb ).
-b
Cr eate new branch (use with -e ).
-cdate
Retrieve a version that includes only those changes made before
date. date is a series of two-digit numbers indicating the year,
followed by an optional month, day, hour, minute, and second.
Nonnumeric characters can be used as field separators; they are
essentially ignored.
498
18 October 2001 15:31
Chapter 18 – The Source Code Control System-e Retrieve a text file for editing; this is the most commonly used
option. Implies -k .
-g Suppr ess the text and just retrieve the SCCS ID (version number),
typically to check it.
get
-Gname
Save retrieved text in file name (default is to drop the s. pr efix).
Solaris only.
-ilist
Incorporate into the retrieved text file any deltas whose SCCS IDs
(version numbers) are specified in the comma-separated list. Use
a hyphen (–) to supply a range (e.g., 1.3,2.1-2.5 ).
Do not expand ID keywords to their values; use in place of -e to
regenerate (overwrite) a text file that was ruined during editing.
-k
-l [ p ]
Cr eate a delta summary (saved to a file or, with -lp , displayed on
standard output).
-m Pr ecede each text line with the SCCS ID of the delta it relates to.
-n Pr ecede each text line with the %M% keyword (typically the name
of the text file).
-p Write retrieved text to standard output instead of to a file.
-r [ sid ]
Retrieve SCCS ID (version number) sid. With no sid, retrieve the
latest version or the version specified by the d flag in the SCCS
file.
-s Suppr ess nor mal output (show error messages only).
-t Retrieve the top (most recent) version of a release.
-wstring
Replace the %W% keyword with string ; %W% is the header label
used by what .
-xlist
Exclude the list of deltas from the retrieved text file; the inverse
of -i .
Examples
Retrieve file prog.c for editing; a subsequent delta cr eates a branch at
version 1.3:
get -e -b -r1.3 s.prog.c
Retrieve file prog.c ; contents will exclude changes made after 2:30
p.m. on June 1, 1990 (except for deltas 2.6 and 2.7, which are
included):
Alphabetical Summary of SCCS Commands — get
18 October 2001 15:31
499
→get -c’90/06/01 14:30:00’ -i’2.6,2.7’ s.prog.c
get
←
Display the contents of s.text.c (all revisions except 1.1 – 1.7):
get -p -x1.1-1.7 s.text.c
help
help [ commands | error_codes ]
Online help facility to explain SCCS commands or error messages.
With no arguments, help pr ompts for a command name or an error
code. To display a brief syntax, supply the SCCS command name. To
display an explanation of an error message, supply the code that
appears after an SCCS error message. The help files usually reside in
/usr/ccs/lib .
Err or messages produced by aborted SCCS commands are of the
for m:
ERROR filename: message (code)
The code is useful for finding out the nature of your error. To do this,
type:
help code
Example
When everything else fails, try this:
help stuck
pr s
prs [ options ] files
Print formatted information for one or more SCCS files.
Options
-a
Include information for all deltas, including removed ones.
-cdate
Cutof f date used with -e or -l (see get for format of date).
-d [ format ]
Specify output for mat by supplying text and/or SCCS keywords.
See the previous section, “Data Keywords,” for a list of valid key-
words. Use \t and \n in the for mat to create a tab and newline,
respectively.
-e
500
18 October 2001 15:31
With -r , list data for deltas earlier than or including sid ; with -c ,
list data for deltas not newer than date.
Chapter 18 – The Source Code Control System-l
Like -e , but later than or including sid or date.
pr s
-r [ sid ]
Specify SCCS ID sid; default is the most recent delta.
Example
The following command:
prs -d"program :M: version :I: by :P:" -r s.yes.c
might produce this output:
program yes.c version 2.4.6 by daniel
prt [ options ] files
pr t
Solaris only. Format and print the contents of one or more SCCS files.
By default, prt prints the delta table (i.e., the version log). The
sccsfile (4) manpage describes the contents of SCCS files in detail.
Options
-a Display entries for all deltas, including removed ones.
-b Print the body of the SCCS file.
-cdate
Exclude entries that are prior to date. Each entry is printed as a
single line, preceded by the name of the file. This makes it pos-
sible to easily sort multiple version logs.
-d Print delta table entries. This is the default action.
-e Print everything. This option implies -d , -i , -f , -t , and -u .
-f Print the flags for each SCCS file.
-i Print the SIDs of included, excluded, and ignored deltas.
-rdate
Exclude deltas that are newer than date.
-s Print only the first line (the statistics) of each delta table.
-t Print the SCCS file’s descriptive text.
-u Print the usernames and/or numerical group IDs of users that are
allowed to make changes.
-y [ sid ]
Exclude deltas that are older than sid. If no delta in the table
matches sid, print the entire table. With no sid, print information
for the current delta.
18 October 2001 15:31
501
Alphabetical Summary of SCCS Commands — prtrmdel
rmdel -r sid files
Remove a delta from one or more SCCS files, wher e sid is the SCCS
ID. The delta must be the most recent in its branch, and it cannot be
checked out for editing.
sact
sact files
For the specified SCCS files, report which deltas are about to change
(i.e., which files are curr ently being edited via get -e but haven’t yet
been updated via delta ). sact lists output in five fields: SCCS ID of
the current delta being edited, SCCS ID of the new delta to create,
user who issued the get -e , and the date and time it was issued.
sccsdif f
sccsdiff -rsid1 -rsid2 [ options ] files
Report differ ences between two versions of an SCCS file. sid1 and
sid2 identify the deltas to be compared. This command invokes
bdiff , which in turn calls diff . Solaris sccsdiff calls diff , not bdiff .
Options
-p
Pipe output through pr .
-sn Use file segment size n (n is passed to bdiff ).
unget
unget [ options ] files
Cancel a previous get -e for one or more SCCS files. If a file is being
edited via get -e , issuing delta pr ocesses the edits (creating a new
delta), whereas unget deletes the edited version (preventing a new
delta from being made).
Options
-n
Do not remove file retrieved with get -e .
-rsid
The SCCS ID of the delta to cancel; needed only if get -e is
issued more than once for the same SCCS file.
-s
val
Suppr ess display of the intended delta’s sid.
val [ options ] files
Validate that the SCCS files meet the characteristics specified in the
options. val pr oduces messages on the standard output for each file
and retur ns an 8-bit code upon exit. The codes are described in
502
18 October 2001 15:31
Chapter 18 – The Source Code Control System“Retur n Value Bits”; bits are counted left to right.
val
Options
-
Read standard input and interpret each line as a val command-
line argument. Exit with an EOF. This option is used by itself.
-mname
Compar e name with %M% keyword in file.
-rsid
Check whether the SCCS ID is ambiguous or invalid.
-s
Silence any error message.
-ytype
Compar e type with %Y% keyword in file.
Retur n Value Bits
Bit Meaning
0
1
2
3
4
5
6
7 Missing file argument.
Unknown or duplicate option.
Corrupted SCCS file.
Cannot open file, or file is not an SCCS file.
SID is invalid or ambiguous.
Nonexistent SID.
Mismatch between type and -y argument.
Mismatch between filename and -m argument.
what [ option ] files
what
Search files for the pattern @(#) and print the text that follows it.
(T ypically, files ar e binary executables.) Actually, the pattern searched
for is the value of %Z% , but the get command expands this keyword to
@(#) . The main purpose of what is to print identification strings.
Option
-s
Quit after finding the first occurrence of a pattern.
sccs and Pseudo-Commands
The compatibility packages include sccs , a front-end to the SCCS utility. This com-
mand provides a more user-friendly interface to SCCS and has the following com-
mand-line syntax:
sccs [options] command [SCCS_flags] [files]
18 October 2001 15:31
503
sccs and Pseudo-CommandsIn addition to providing all the regular SCCS commands, sccs of fers pseudo-com-
mands. These are easy-to-use, prebuilt combinations of the regular SCCS com-
mands. options apply only to the sccs inter face. command is the SCCS command
or pseudo-command to run, and SCCS_flags ar e specific options passed to the
SCCS command being run.
sccs makes it easier to specify files because it automatically prepends SCCS/s. to
any filename arguments. For example:
sccs get -e file.c
would be interpreted as:
get -e SCCS/s.file.c
Thus, when using sccs , you would first make a directory named SCCS to hold all
the s. SCCS files.
Options
-dprepath
Locate files in pr epath rather than in current directory. For example:
sccs -d/home get file.c
is interpreted as:
get /home/SCCS/s.file.c
-pendpath
Access files from directory endpath instead of SCCS . For example:
sccs -pVERSIONS get file.c
is interpreted as:
get VERSIONS/s.file.c
-r
Invoke sccs as the real user instead of as the effective user.
Pseudo-Commands
Equivalent SCCS actions are indicated in parentheses.
check
Like info , but retur n nonzer o exit codes instead of filenames.
clean
Remove from current directory any files that aren’t being edited under SCCS
(via get -e , for example).
create
Cr eate SCCS files ( admin -i followed by get ).
504
18 October 2001 15:31
Chapter 18 – The Source Code Control Systemdeledit
Same as delta followed by get -e .
delget
Same as delta followed by get .
diffs
Compar e file’s current version and SCCS version (like sccsdiff ).
edit
Get a file to edit ( get -e ).
enter
Like create , but without the subsequent get ( admin -i ).
fix Same as rmdel (must be followed by -r ).
info
List files being edited (similar to sact ).
print
Print information (like prs -e followed by get -p -m ).
tell
Like info , but list one filename per line.
unedit
Same as unget .
Solar is Notes
• SCCS is not available unless you have done at least a developer-system install.
• The environment variable PROJECTDIR specifies a location where sccs
searches for SCCS files. Ther e ar e two possible kinds of values you can use.
An absolute pathname
sccs searches for SCCS files in the directory named by $PROJECTDIR.
A user name
sccs looks in the src or source subdir ectory of the given user’s home
dir ectory.
18 October 2001 15:31
505
sccs and Pseudo-CommandsCHAPTER 19
The Revision Control System
This chapter presents the following topics:
• Overview of commands
• Basic operation
• General RCS specifications
• Conversion guide for SCCS users
• Alphabetical summary of commands
As with SCCS in the preceding chapter, the Revision Control System (RCS) is
designed to keep track of multiple file revisions, thereby reducing the amount of
storage space needed. With RCS you can automatically store and retrieve revisions,
merge or compare revisions, keep a complete history (or log) of changes, and
identify revisions using symbolic keywords. RCS is believed to be more efficient
than SCCS. Unlike SCCS, RCS preserves execute permission on the files it manages,
and you can store binary data in RCS files.
RCS is not part of standard SVR4 or Solaris. It can be obtained from the Free Soft-
war e Foundation (see http://www.gnu.or g). This chapter describes RCS Version 5.7.
For more infor mation, see Applying RCS and SCCS, listed in the Bibliography.
Over view of Commands
The three most important RCS commands are:
ci
co
rcs
Check in revisions (put a file under RCS control).
Check out revisions.
Set up or change attributes of RCS files.
506
18 October 2001 15:32Two commands provide information about RCS files:
Extract keyword values from an RCS file.
Display a summary (log) about the revisions in an RCS
file.
ident
rlog
You can compare RCS files with these commands:
merge
rcsdiff
rcsmerge
Incorporate changes from two files into a third file.
Report differ ences between revisions.
Incorporate changes from two RCS files into a third
RCS file.
The following commands help with configuration management. However, they are
consider ed optional, so they are not always installed.
rcsclean
rcsfreeze
Remove working files that have not been changed.
Label the files that make up a configuration.
Basic Operation
Nor mally, you maintain RCS files in a subdirectory called RCS , so the first step in
using RCS should be:
mkdir RCS
Next, you place an existing file (or files) under RCS control by running the check-
in command:
ci file
This creates a file called file ,v in the RCS dir ectory. file ,v is called an RCS file, and
it stores all future revisions of file. When you run ci on a file for the first time, you
ar e pr ompted to describe the contents. ci then deposits file into the RCS file as
revision 1.1.
To edit a new revision, check out a copy:
co -l file
This causes RCS to extract a copy of file fr om the RCS file. You must lock the file
with -l to make it writable by you. This copy is called a working file. When you’re
done editing, you can record the changes by checking the working file back in
again:
ci file
This time, you are prompted to enter a log of the changes made, and the file is
deposited as revision 1.2. Note that a check-in normally removes the working file.
To retrieve a read-only copy, do a check-out without a lock:
co file
Basic Operation
18 October 2001 15:32
507This is useful when you need to keep a copy on hand for compiling or searching.
As a shortcut to the previous ci / co , you could type:
ci -u file
This checks in the file but immediately checks out a read-only (“unlocked”) copy.
In practice, you would probably make a “checkpoint” of your working version and
then keep going, like this:
ci -l file
This checks in the file, and then checks it back out again, locked, for continued
work. To compar e changes between a working file and its latest revision, you can
type:
rcsdiff file
Another useful command is rlog , which shows a summary of log messages. Sys-
tem administrators can use the rcs command to set up default behavior of RCS.
General RCS Specifications
This section discusses:
• Keyword substitution
• Keywords
• Example values
• Revision numbering
• Specifying the date
• Specifying states
• Standard options and environment variables
Ke yword Substitution
RCS lets you place keyword variables in your working files. These variables are
later expanded into revision notes. You can then use the notes either as embedded
comments in the input file or as text strings that appear when the output is
printed. To create revision notes via keyword substitution, follow this procedur e:
1. In your working file, type any of the keywords listed below.
2. Check the file in.
3. Check the file out again. Upon checkout, the co command expands each key-
word to include its value. That is, co replaces instances of:
$keyword$
with:
$keyword:value $.
508
18 October 2001 15:32
Chapter 19 – The Revision Control System4.
Subsequent check-in and check-out of a file updates any existing keyword
values. Unless otherwise noted below, existing values are replaced by new
values.
Ke ywords
$Author$
$Date$
$Header$
$Id$
$Locker$
$Log$
$Name$
$RCSfile$
$Revision$
$Source$
$State$
User name of person who checked in the revision.
Date and time of check-in.
A title that includes the RCS file’s full pathname, revision num-
ber, date, author, state, and (if locked) the person who locked
the file.
Same as $Header$ , but exclude the full pathname of the RCS file.
User name of person who locked the revision. If the file isn’t
locked, this value is empty.
The message that was typed during check-in to describe the file,
pr eceded by the RCS filename, revision number, author, and
date. Log messages accumulate rather than being overwritten.
RCS uses the “comment leader” of the $Log$ line for the log
messages left in the file. The comment leader stored in the RCS
file is useful only for exchanging files with older versions of
RCS.
The symbolic name used to check in the revision, if any.
The RCS filename, without its pathname.
The assigned revision number.
The RCS filename, including its pathname.
The state assigned by the -s option of ci or rcs .
Example Values
Let’s assume that the file /projects/new/chapter3 has been checked in and out by
a user named daniel . Her e’s what keyword substitution produces for each key-
word, for the second revision of the file:
$Author: daniel $
$Date: 1992/03/18 17:51:36 $
$Header: /projects/new/chapter3,v 1.2 92/03/18 17:51:36 daniel \
Exp Locker: daniel $
$Id: chapter3,v 1.2 1992/03/18 17:51:35 daniel Exp Locker: daniel $
$Locker: daniel $
$Log:
chapter3,v $
# Revision 1.2 92/03/18 17:51:36 daniel
# Added section on error-handling
#
# Revision 1.1 92/03/18 16:49:59 daniel
General RCS Specifications
18 October 2001 15:32
509
Many commands have a -k option that provides considerable flexibility during
keyword substitution.# Initial revision
#
$Name: Alpha2 $
$RCSfile: chapter3,v $
$Revision: 1.2 $
$Source: /projects/new/chapter3,v $
$State: Exp $
Revision Numbering
Unless told otherwise, RCS commands typically operate on the latest revision.
Some commands have an -r option that specifies a revision number. In addition,
many options accept a revision number as an optional argument. (In the command
summary, this argument is shown as [R ].) Revision numbers consist of up to four
fields: release, level, branch, and sequence; but most revisions consist of only the
release and level. For example, you can check out revision 1.4 as follows:
co -l -r1.4 ch01
When you check it in again, the new revision will be marked as 1.5. Now suppose
the edited copy needs to be checked in as the next release. You would type:
ci -r2 ch01
This creates revision 2.1. You can also create a branch from an earlier revision.
The following command creates revision 1.4.1.1:
ci -r1.4.1 ch01
Numbers that begin with a period are consider ed to be relative to the default
branch of the RCS file. Normally, this is the “trunk” of the revision tree.
Numbers are not the only way to specify revisions, though. You can assign a text
label as a revision name, using the -n option of ci or rcs . You can also specify
this name in any option that accepts a revision number for an argument. For
example, you could check in each of your C files, using the same label regardless
of the current revision number:
ci -u -nPrototype *.c
In addition, you may specify a $ , which means the revision number extracted from
the keywords of a working file. For example:
rcsdiff -r$ ch01
compar es ch01 to the revision that is checked in. You can also combine names and
symbols. The command:
rcs -nDraft:$ ch*
assigns a name to the revision numbers associated with several chapter files.
510
18 October 2001 15:32
Chapter 19 – The Revision Control SystemSpecifying the Date
2000/01/10 02:00:00 Year/month/day time
The default time zone is Greenwich Mean Time (GMT), which is also referr ed to
as Coordinated Universal Time (UTC). Dates can be supplied in free format. This
lets you specify many differ ent styles. Here are some of the more common ones,
which show the same time as in the previous example:
6:00 pm lt
Assuming today is Jan. 10, 2000
2:00 AM, Jan. 10, 2000
Mon Jan 10 18:00:00 2000 LT
Mon Jan 10 18:00:00 PST 2000
The uppercase or lowercase “lt” indicates local time (here, Pacific Standard Time).
The third line shows ctime for mat (plus the “LT”); the fourth line is the date com-
mand format.
Specifying States
In some situations, particularly programming environments, you want to know the
status of a set of revisions. RCS files are marked by a text string that describes their
state. The default state is Exp (experimental). Other common choices include Stab
(stable) or Rel (r eleased). These words are user-defined and have no special inter-
nal meaning. Several keyword strings include the state in their values. In addition,
states can be supplied in options to ci , co , rcs , and rlog .
Standard Options and Environment Var iables
RCS defines an environment variable, RCSINIT, which sets up default options for
RCS commands. If you set RCSINIT to a space-separated list of options, they will
be prepended to the command-line options you supply to any RCS command.
Six options are useful to include in RCSINIT: -q , -V , -V n, -T , -x , and -z . They can
be thought of as standard options because most RCS commands accept them.
-q [ R ]
Quiet mode; don’t show diagnostic output. R specifies a file revision.
-T If the file with the new revision has a later modification time than that of the
RCS file, update the RCS file’s modification time. Otherwise, preserve the RCS
file’s modification time. This option should be used with care; see the discus-
sion in the ci manpage for more detail.
-V Print the RCS version number.
-Vn Emulate version n of RCS; useful when trading files between systems that run
dif ferent versions. n can be 3, 4, or 5.
General RCS Specifications
18 October 2001 15:32
511
Revisions are timestamped by time and date of check-in. Several keyword strings
include the date in their values. Dates can be supplied in options to ci , co , and
rlog . RCS uses the following date format as its default:-xsuffixes
Specify an alternate list of suf fixes for RCS files. Each suffix is separated by a
/ . On Unix systems, RCS files normally end with the characters ,v . The -x
option provides a workaround for systems that don’t allow a comma character
in filenames.
-ztimezone
timezone contr ols the output format for dates in keyword substitution. time-
zone should have one of the following values:
Value Effect
empty Default format: UTC with no time zone and slashes separating the
parts of the date.
The local time and date, in ISO-8601 format, with time-zone indica-
tion (YYYY - MM - DD HH : MM : SS - ZZ).
With a numeric offset from UTC, the output is in IS0-8601 format.
LT
± hh:mm
For example, when depositing a working file into an RCS file, the command:
ci -x,v/ ch01
Second suffix is blank
searches in order for the RCS filenames:
RCS/ch01,v
ch01,v
RCS/ch01
RCS allows you to specify a location for temporary files. It checks the environment
variables TMPDIR, TMP, and TEMP, in that order. If none of those exist, it uses a
default location, such as /tmp .
Conversion Guide for SCCS Users
SCCS commands have functional equivalents to RCS commands. The following
table provides a very general guide for SCCS users.
SCCS RCS
admin
admin -i
cdc
delta
get
prs
rmdel
sact
sccsdiff
unget rcs
ci
rcs -m
ci
co
ident or rlog
rcs -o
rlog
rcsdiff
co (with overwrite), or ci
with rcs -o
ident
what
512
18 October 2001 15:32
Chapter 19 – The Revision Control SystemAlphabetical Summary of Commands
ci [ options ] files
ci
Check in revisions. ci stor es the contents of the specified working
files into their corresponding RCS files. Normally, ci deletes the work-
ing file after storing it. If no RCS file exists, the working file is an ini-
tial revision. In this case, the RCS file is created, and you are
pr ompted to enter a description of the file. If an RCS file exists, ci
incr ements the revision number and prompts you to enter a message
that logs the changes made. If a working file is checked in without
changes, the file reverts to the previous revision.
The two mutually exclusive options -u and -l , along with -r , are the
most common. Use -u to keep a read-only copy of the working file
(for example, so the file can be compiled or searched). Use -l to
update a revision and then immediately check it out again with a
lock. This allows you to save intermediate changes but continue edit-
ing (for example, during a long editing session). Use -r to check in a
file with a differ ent release number. ci accepts the standard options
-q , -V , -V n, -T , -x , and -z .
Options
-d [ date ]
Check the file in with a timestamp of date or, if no date is speci-
fied, with the time of last modification.
-f [ R ]
Force a check-in even if there are no dif ferences.
-i [ R ]
Initial check-in, report an error if the RCS file already exists.
-I [ R ]
Interactive mode; prompt user even when standard input is not a
ter minal (e.g., when ci is part of a command pipeline).
-j [ R ]
Just check in and do not initialize. Report an error if the RCS file
does not already exist.
-k [ R ]
Assign a revision number, creation date, state, and author from
keyword values that were placed in the working file, instead of
computing the revision information from the local environment.
-k is useful for software distribution: the preset keywords serve
as a timestamp shared by all distribution sites.
→
Alphabetical Summary of Commands — ci
18 October 2001 15:32
513
For details on the syntax of keywords, revision numbers, dates, states, and stan-
dard options, refer to the previous discussions.ci
←
-l [ R ]
Do a co -l after checking in. This leaves a locked copy of the
next revision.
-mmsg
Use the msg string as the log message for all files checked in.
When checking in multiple files, ci nor mally pr ompts whether to
reuse the log message of the previous file. -m bypasses this
pr ompting.
-M [ R ]
Set the working file’s modification time to that of the retrieved
version. Use of -M can confuse make and should be used with
car e.
-nname
Associate a text name with the new revision number.
-Nname
Same as -n , but override a previous name.
-rR Check the file in as revision R.
Without a revision number, -r restor es the default behavior of
releasing a lock and removing the working file. It is intended to
override any default -l or -u set up by aliases or scripts. The
behavior of -r in ci is differ ent fr om most other RCS commands.
-r
-sstate
Set the state of the checked-in revision.
-tfile
Replace RCS file description with contents of file. This works
only for initial check-in.
-t-string
Replace RCS file description with string. This works only for ini-
tial check-in.
-u [ R ]
Do a co -u after checking in. This leaves a read-only copy.
-wuser
Set the author field to user in the checked-in revision.
Examples
Check in chapter files using the same log message:
ci -m’First round edits’ chap*
Check in edits to prog.c , leaving a read-only copy:
ci -u prog.c
514
18 October 2001 15:32
Chapter 19 – The Revision Control SystemStart revision level 2; refer to revision 2.1 as “Prototype”:
ci
ci -r2 -nPrototype prog.c
co [ options ] files
co
Retrieve (check out) a previously checked-in revision and place it in
the corresponding working file (or print to standard output if -p is
specified). If you intend to edit the working file and check it in again,
specify -l to lock the file. co accepts the standard options -q , -V , -V n,
-T , -x , and -z .
Options
-ddate
Retrieve latest revision whose check-in timestamp is on or before
date.
-f [ R ]
Force the working file to be overwritten.
-I [ R ]
Interactive mode; prompt user even when standard input is not a
ter minal.
-jR2:R3 [ , ...]
This works like rcsmerge . R2 and R3 specify two revisions
whose changes are merged into a third file: either the corre-
sponding working file or a third revision (any R specified by
other co options). Multiple comma-separated pairs may be pro-
vided; the output of the first join becomes the input of the next.
See the co manpage for more details.
-kc Expand keyword symbols according to flag c. c can be:
b
kv
kvl
k
o
v
Like -ko , but uses binary I/O. This is most useful on
non-Unix systems.
Expand symbols to keyword and value (the default).
Insert the locker’s name only during a ci -l or co -l .
Like kv , but always insert the locker’s name.
Expand symbols to keywords only (no values). This is
useful for ignoring trivial differ ences during file com-
parison.
Expand symbols to keyword and value present in pre-
vious revision. This is useful for binary files that don’t
allow substring changes.
Expand symbols to values only (no keywords). This
pr events further keyword substitution and is not rec-
ommended.
→
Alphabetical Summary of Commands — co
18 October 2001 15:32
515co
←
-l [ R ]
Same as -r , but also lock the retrieved revision.
-M [ R ]
Set the working file’s modification time to that of the retrieved
version. Use of -M can confuse make and should be used with
car e.
-p [ R ]
Send retrieved revision to standard output instead of to a work-
ing file. Useful for output redir ection or filtering.
-r [ R ]
Retrieve the latest revision or, if R is given, retrieve the latest
revision that is equal to or lower than R. If R is $ , retrieve the
version specified by the keywords in the working file.
-sstate
Retrieve the latest revision having the given state.
-u [ R ]
Same as -r , but also unlock the retrieved revision if you locked
it previously.
-w [ user ]
Retrieve the latest revision that was checked in either by the
invoking user or by the specified user.
Examples
Sort the latest stored version of file :
co -p file | sort
Check out (and lock) all uppercase filenames for editing:
co -l [A-Z]*
Note that filename expansion fails unless a working copy resides in
the current directory. Therefor e, this example works only if the files
wer e pr eviously checked in via ci -u . Finally, here are some differ ent
ways to extract the working files for a set of RCS files (in the current
dir ectory):
co -r3 *,v
Latest revisions of release 3
co -r3 -wjim *,v
Same, but only if checked in by jim
co -d’May 5, 2 pm LT’ *,v Latest revisions that were
modified on or before the date
co -rPrototype *,v
Latest revisions named Prototype
ident
ident [ options ] [ files ]
Extract keyword/value symbols from files. files can be text files,
object files, or dumps. ident accepts the standard option -V .
516
18 October 2001 15:32
Chapter 19 – The Revision Control SystemOptions
ident
Suppr ess war ning message when no keyword patterns are
found.
-V Print the version number of ident .
-q
Examples
If file prog.c is compiled, and it contains this line of code:
char rcsID[] = "$Author: arnold $";
the following output is produced:
$ ident prog.c prog.o
prog.c:
$Author: arnold $
prog.o:
$Author: arnold $
Show keywords for all RCS files (suppress warnings):
co -p RCS/*,v | ident -q
merge [ options ] [ diff3 options ] file1 file2 file3
mer ge
Per form a thr ee-way merge of files (via diff3 ) and place changes in
file1. file2 is the original file. file1 is the “good” modification of file2.
file3 is another, conflicting modification of file2. merge finds the differ-
ences between file2 and file3, and then incorporates those changes
into file1. If both file1 and file3 have changes to common lines, merge
war ns about overlapping lines and inserts both choices in file1. The
insertion appears as follows:
<<<<<<< file1
lines from file1</>
========
lines from file3
>>>>>>> file3
You’ll need to edit file1 by deleting one of the choices. merge exits
with a status of 0 (no overlaps), 1 (some overlaps), or 2 (unknown
pr oblem). See also rcsmer ge.
merge accepts the -A , -e , and -E options for diff3 , and simply passes
them on, causing diff3 to perfor m the corresponding kind of merge.
See the entry for dif f3 in Chapter 2, Unix Commands, for details.
(The -A option is for the GNU version of diff3 .)
→
Alphabetical Summary of Commands — mer ge
18 October 2001 15:32
517mer ge
←
Options
-L label
This option may be provided up to three times, providing differ-
ent labels in place of the filenames file1, file2, and file3, respec-
tively.
rcs
-p Send merged version to standard output instead of to file1.
-q Pr oduce overlap insertions but don’t warn about them.
rcs [ options ] files
An administrative command for setting up or changing the default
attributes of RCS files. rcs requir es you to supply at least one option.
(This is for “future expansion.”)
Among other things, rcs lets you set strict locking ( -L ), delete revi-
sions ( -o ), and override locks set by co ( -l and -u ). RCS files have an
access list (created via -a ); anyone whose username is on the list can
run rcs . The access list is often empty, meaning that rcs is available
to everyone. In addition, you can always invoke rcs if you own the
file, if you’re a privileged user, or if you run rcs with -i . rcs accepts
the standard options -q , -V , -V n, -T , -x , and -z .
Options
-ausers
Append the comma-separated list of users to the access list.
-Aotherfile
Append other file’s access list to the access list of files.
-b [ R ]
Set the default branch to R or, if R is omitted, to the highest
branch on the trunk.
-c’s’
The comment leader for $Log$ keywords is set to string s. You
could, for example, set s to .\" for troff files or set s to * for C
pr ograms. (You would need to manually insert an enclosing /*
and */ befor e and after $Log$ .)
-c is obsolescent; RCS uses the character(s) preceding $Log$ in
the file as the comment leader for log messages. You may wish
to set this, though, if you are accessing the RCS file with older
versions of RCS.
-e [ users ]
Erase everyone (or only the specified users) from the access list.
518
18 October 2001 15:32
Chapter 19 – The Revision Control SystemCr eate (initialize) an RCS file, but don’t deposit a revision.
-I Interactive mode; prompt user even when standard input is not a
ter minal.
rcs
-i
-kc Use c as the default style for keyword substitution. (See co for
values of c.) -kkv restor es the default substitution style.
-l [ R ]
Lock revision R or the latest revision. -l “r etroactively locks” a
file and is useful if you checked out a file incorrectly by typing
co instead of co -l . rcs will ask you if it should break the lock
if someone else has the file locked.
-L
Turn on strict locking (the default). This means that everyone,
including the owner of the RCS file, must use co -l to edit files.
Strict locking is recommended when files are to be shar ed. (See
-U .)
-mR:msg
Use the msg string to replace the log message of revision R.
-M
Do not send mail when breaking a lock. This is intended for
use by RCS frontends, not for direct use by users!
-nflags
Add or delete an association between a revision and a name.
flags can be:
name:R
name:
name
Associate name with revision R.
Associate name with latest revision.
Remove association of name.
-Nflags
Same as -n , but overwrite existing names.
-oR_list
Delete (outdate) revisions listed in R_list. R_list can be specified
as: R1, R1 : R2, R1 : , or : R2. When a branch is given, -o deletes
only the latest revision on it. The - range separator character
fr om RCS versions prior to 5.6 is still valid.
-sstate [ :R ]
Set the state of revision R (or the latest revision) to the word
state.
-t [ file ]
Replace RCS file description with contents of file or, if no file is
given, with standard input.
→
Alphabetical Summary of Commands — rcs
18 October 2001 15:32
519rcs
-t-string
←
Replace RCS file description with string.
-u [ R ]
The complement of -l : unlock a revision that was previously
checked out via co -l . If someone else did the check-out, you
ar e pr ompted to state the reason for breaking the lock. This
message is mailed to the original locker.
Turn on nonstrict locking. Everyone except the file owner must
use co -l to edit files. (See -L .)
-U
Examples
Associate the label To_customer with the latest revision of all RCS
files:
rcs -nTo_customer: RCS/*
Add three users to the access list of file beatle_deals :
rcs -ageorge,paul,ringo beatle_deals
Delete revisions 1.2 through 1.5:
rcs -o1.2:1.5 doc
Replace an RCS file description with the contents of a variable:
echo "$description" | rcs -t file
rcsclean
rcsclean [ options ] [ files ]
Although included with RCS, this command is optional and might not
be installed on your system. rcsclean compar es checked-out files
against the corresponding latest revision or revision R (as given by
the options). If no differ ences ar e found, the working file is removed.
(Use rcsdiff to find differ ences.) rcsclean is useful in makefiles; for
example, you could specify a “clean-up” target to update your direc-
tories. rcsclean is also useful prior to running rcsfreeze . rcsclean
accepts the standard options -q , -V , -V n, -T , -x , and -z .
Options
-kc When comparing revisions, expand keywords using style c. (See
co for values of c.)
-n [ R ]
Show what would happen but don’t actually execute.
-r [ R ]
Compar e against revision R. R can be supplied as arguments to
other options, so -r is redundant.
520
18 October 2001 15:32
Chapter 19 – The Revision Control System-u [ R ]
rcsclean
Unlock the revision if it’s the same as the working file.
Example
Remove unchanged copies of program and header files:
rcsclean *.c *.h
rcsdiff [ options ] [ diff_options ] files
rcsdif f
Compar e revisions via diff . Specify revisions using -r as follows:
# of Revisions
None
One
Two
Comparison Made
Working file against latest revision.
Working file against specified revision.
One revision against the other.
rcsdiff accepts the standard options -q , -V , -V n, -T , -x , and -z , as
well as dif f_options, which can be any valid diff option. rcsdiff
exits with a status of 0 (no differ ences), 1 (some differ ences), or 2
(unknown problem). The -c option to diff can be very useful with
rcsdiff .
rcsdiff prints “retrieving revision ...” messages to standard error, as
well as a line of equals signs for separating multiple files. It is often
useful to redir ect standard error and standard output to the same file.
Options
-kc When comparing revisions, expand keywords using style c. (See
co for values of c.)
-rR1
Use revision R1 in the comparison.
-rR2
Use revision R2 in the comparison. ( -rR1 must also be speci-
fied.)
Examples
Compar e the current working file against the last checked-in version:
rcsdiff -c ch19.sgm 2>&1 | more
Compar e the current working file against the very first version:
rcsdiff -c -r1.1 ch19.sgm 2>&1 | more
→
Alphabetical Summary of Commands — rcsdif f
18 October 2001 15:32
521rcsdif f
←
Compar e two earlier versions of a file against each other:
rcsdiff -c -r1.3 -r1.4 ch19.sgm 2>&1 | more
rcsfreeze
rcsfreeze [ name ]
Although included with RCS, this shell script is optional and might
not be installed on your system. rcsfreeze assigns a name to an
entir e set of RCS files, which must already be checked in. This is use-
ful for marking a group of files as a single configuration. The default
name is C_ n, wher e n is incremented each time you run rcsfreeze .
rcsmer ge
rcsmerge [ options ] [ diff3 options ] file
Per form a thr ee-way merge of file revisions, taking two differing ver-
sions and incorporating the changes into the working file. You must
pr ovide either one or two revisions to merge (typically with -r ).
Overlaps are handled the same as with merge , by placing warnings in
the resulting file. rcsmerge accepts the standard options -q , -V , -V n,
-T , -x , and -z . rcsmerge exits with a status of 0 (no overlaps), 1
(some overlaps), or 2 (unknown problem).
rcsmerge accepts the -A , -e , and -E options for diff3 and simply
passes them on, causing diff3 to perfor m the corresponding kind of
merge. See mer ge, and also see the entry for dif f3 in Chapter 2 for
details. (The -A option is for the GNU version of diff3 .)
Options
-kc When comparing revisions, expand keywords using style c. (See
co for values of c.)
-p [ R ]
Send merged version to standard output instead of overwriting
file.
-r [ R ]
Merge revision R or, if no R is given, merge the latest revision.
Examples
Suppose you need to add updates to an old revision (1.3) of prog.c ,
but the current file is already at revision 1.6. To incorporate the
changes:
co -l prog.c
Get latest revision
(Edit latest revision by adding updates for revision 1.3, then:)
rcsmerge -p -r1.3 -r1.6 prog.c > prog.updated.c
522
18 October 2001 15:32
Chapter 19 – The Revision Control Systemrcsmer ge
Undo changes between revisions 3.5 and 3.2, and overwrite the
working file:
rcsmerge -r3.5 -r3.2 chap08
rlog [ options ] files
rlog
Display identification information for RCS files, including the log mes-
sage associated with each revision, the number of lines added or
removed, date of last check-in, etc. With no options, rlog displays all
infor mation. Use options to display specific items. rlog accepts the
standard options -q , -V , -V n, -T , -x , and -z .
Options
-b
Prune the display; print only about the default branch.
-ddates
Display information for revisions whose check-in timestamp falls
in the range of dates (a list separated by semicolons). Be sure to
use quotes. Each date can be specified as:
d1 < d2
Select revisions between date d1 and d2, inclusive.
d1 <
Select revisions made on or after date1.
d1 >
Select revisions made on or before date1.
Timestamp comparisons are strict. If two files have exactly
the same time, < and > won’t work. Use <= and >= instead.
-h
Display the beginning of the normal rlog listing.
-l [ users ]
Display information only about locked revisions or, if users is
specified, only about revisions locked by the list of users.
-L Skip files that aren’t locked.
-N Don’t print symbolic names.
-r [ list ]
Display information for revisions in the comma-separated list of
revision numbers. If no list is given, the latest revision is used.
→
Alphabetical Summary of Commands — rlog
18 October 2001 15:32
523Items can be specified as:
rlog
←
R1
R1 .
R1 : R2
: R1
R1 :
Select revision R1. If R1 is a branch, select all revi-
sions on it.
If R1 is a branch, select its latest revision.
Select revisions R1 thr ough R2.
Select revisions from beginning of branch through R1.
Select revisions from R1 thr ough end of branch.
The – range separator character from RCS versions prior to 5.6 is
still valid.
-R
Display only the name of the RCS file.
-sstates
Display information for revisions whose state matches one from
the comma-separated list of states.
-t
Same as -h , but also display the file’s description.
-w [ users ]
Display information for revisions checked in by anyone in the
comma-separated list of users. If no users ar e supplied, assume
the name of the invoking user.
Examples
Display the revision histories of all your RCS files:
rlog RCS/*,v | more
Display names of RCS files that are locked by user daniel .
rlog -R -L -ldaniel RCS/*
Display the “title” portion (no revision history) of a working file:
rlog -t calc.c
524
18 October 2001 15:32
Chapter 19 – The Revision Control SystemCHAPTER 20
This chapter presents the following topics:
• Conceptual overview
• Command-line syntax
• Description file lines
• Macr os
• Special target names
• Writing command lines
• Sample default macros, suffixes, and rules
For more infor mation, see Managing Projects with make, listed in the Bibliogra-
phy.
Conceptual Over view
The make pr ogram generates a sequence of commands for execution by the Unix
shell. It uses a table of file dependencies provided by the programmer, and, with
this information, can perfor m updating tasks automatically for the user. It can keep
track of the sequence of commands that create certain files, and the list of files or
pr ograms that requir e other files to be current before they can operate efficiently.
When a program is changed, make can create the proper files with a minimum of
ef fort.
Each statement of a dependency is called a rule. Rules define one or more tar gets,
which are the files to be generated, and the files they depend upon, the pr er equi-
sites or dependencies. For example, prog.o would be a target that depends upon
prog.c ; each time you update prog.c , prog.o must be regenerated. It is this task
that make automates, and it is a critical one for large programs that have many
pieces.
525
18 October 2001 15:34
The make UtilityThis chapter covers the SVR4 make . Many Unix vendors have enhanced make in dif-
fer ent, and often incompatible, ways. Check your local documentation for the final
word.
On Solaris, /usr/lib/svr4.make is the generic SVR4 version of make . If you set
USE_SVR4_MAKE in the environment, /usr/ccs/bin/make or /usr/xpg4/bin/make
runs this version.
Command-Line Syntax
make [options] [targets] [macro definitions]
Options, targets, and macro definitions can appear in any order. Macr o definitions
ar e typed as:
name=string
If no makefile or Makefile exists, make will attempt to extract the most recent ver-
sion of one from an SCCS file, if one exists. (Some versions also know about RCS.)
Options
-e
Envir onment variables override any macros defined in description files.
-f file
Use file as the description file; a filename of - denotes standard input. -f can
be used more than once to concatenate multiple description files. With no -f
option, make first looks for a file named makefile , and then one named Make-
file .
-i Ignor e err or codes from commands (same as .IGNORE ).
-k Abandon the current target when it fails, but keep working with unrelated tar-
gets.
-n Print commands but don’t execute (used for testing). -n prints commands
even if they begin with @ in the description file.
Lines that begin with $(MAKE) ar e an exception. Such lines ar e executed.
However, since the -n is passed to the subsequent make in the MAKEFLAGS
envir onment variable, that make also just prints the commands it executes.
This allows you to test out all the makefile files in a whole software hierarchy
without actually doing anything.
-p Print macro definitions, suffixes, and target descriptions.
-q Query; retur n 0 if file is up to date; nonzero otherwise.
-r Do not use the default rules.
-s Do not display command lines (same as .SILENT ).
-t Touch the target files, causing them to be updated.
526
18 October 2001 15:34
Chapter 20 – The make UtilityDescr iption File Lines
Instructions in the description file are interpr eted as single lines. If an instruction
must span more than one input line, use a backslash ( \ ) at the end of the line so
that the next line is considered a continuation. The description file may contain
any of the following types of lines:
Blank lines
Blank lines are ignor ed.
Dependency lines
Depending on one or more targets, certain commands that follow are exe-
cuted. Possible formats include:
targets : prerequisites
targets :: prerequisites
In the first form, subsequent commands are executed if the prer equisites ar e
met. The second form is a variant that lets you specify the same targets on
mor e than one dependency line. In both forms, if no prer equisites ar e sup-
plied, subsequent commands are always executed (whenever any of the tar-
gets are specified). No tab should precede any tar gets. (At the end of a
dependency line, you can specify a command, preceded by a semicolon;
however, commands are typically entered on their own lines, preceded by a
tab.)
Targets of the form library ( member ) repr esent members of archive libraries,
e.g., libguide.a(dontpanic.o) .
Suf fix rules
These specify that files ending with the first suffix can be prer equisites for
files ending with the second suffix (assuming the root filenames are the
same). Either of these formats can be used:
.suffix.suffix:
.suffix:
The second form means that the root filename depends on the filename with
the corresponding suffix.
Macr o definitions
These have the following form:
name = string
Blank space is optional around the = .
Include statements
Similar to the C include directive, these have the form:
include file
Description File Lines
18 October 2001 15:34
527
Comment lines
A pound sign ( # ) can be used at the beginning of a line or anywhere in the
middle. make ignor es everything after the # .make pr ocesses the value of file for macro expansions before attempting to
open the file.
Command lines
These lines are wher e you give the commands to actually rebuild those files
that are out of date. Commands are grouped below the dependency line and
ar e typed on lines that begin with a tab. If a command is preceded by a
hyphen (–), make ignor es any error retur ned. If a command is preceded by an
at sign ( @ ), the command line won’t echo on the display (unless make is called
with -n ). Further advice on command lines is given below.
Macros
This section summarizes internal macros, modifiers, string substitution, and special
macr os.
Inter nal Macros
$?
$@
$$@
$<
$*
$%
The list of prer equisites that have been changed more recently than the
curr ent target. Can be used only in normal description file entries—not
suf fix rules.
The name of the current target, except in description file entries for mak-
ing libraries, where it becomes the library name. Can be used both in
nor mal description file entries and in suffix rules.
The name of the current target. Can be used only to the right of the
colon in dependency lines. (May not work on all versions of make .)
The name of the current prer equisite that has been modified more
recently than the current target. Can be used only in suffix rules and in
the .DEFAULT: entry.
The name—without the suffix — of the current prer equisite that has been
modified more recently than the current target. Can be used only in suffix
rules.
The name of the corresponding .o file when the current target is a library
module. Can be used both in normal description file entries and in suffix
rules.
Macro Modifier s
Macr o modifiers are not available in all variants of make .
D
The directory portion of any internal macro name except $? . Valid uses are:
$(*D)
$(<D)
$(@D)
F
The file portion of any internal macro name except $? . Valid uses are:
$(*F)
$(<F)
$(@F)
528
18 October 2001 15:34
$$(@D)
$(%D)
$$(@F)
$(%F)
Chapter 20 – The make UtilityMacro Str ing Substitution
String substitution is not available in all variants of make .
$(macro:s1=s2)
Evaluates to the current definition of $( macr o ) , after substituting the string s2
for every occurrence of s1 that occurs either immediately before a blank or
tab, or at the end of the macro definition.
Macros with Special Handling
Special Target Names
.DEFAULT:
.IGNORE:
.PRECIOUS:
.SILENT:
.SUFFIXES:
Commands associated with this target are executed if make can’t find
any description file entries or suffix rules with which to build a
requested target.
Ignor e err or codes. Same as the -i option.
Files you specify for this target are not removed when you send a sig-
nal (such as interrupt) that aborts make , or when a command line in
your description file retur ns an error.
Execute commands but do not echo them. Same as the -s option.
Suf fixes associated with this target are meaningful in suffix rules. If no
suf fixes ar e listed, the existing list of suffix rules are effectively
“tur ned of f.”
Wr iting Command Lines
Writing good, portable Makefile files is a bit of an art. Skill comes with practice
and experience. Here are some tips to get you started:
• Naming your file Makefile instead of makefile usually causes it to be listed
first with ls . This makes it easier to find in a directory with many files.
• Remember that command lines must start with a leading tab character. You
cannot just indent the line with spaces, even eight spaces. If you use spaces,
make exits with an unhelpful message about “missing separator characters.”
• Remember that $ is special to make . To get a literal $ into your command
lines, use $$ . This is particularly important if you want to access an environ-
ment variable that isn’t a make macr o. Also, if you wish to use the shell’s $$
for the current process ID, you have to type it as $$$$ .
• Write multiline shell statements, such as shell conditionals and loops, with
trailing semicolons and a trailing backslash:
if [ -f specfile ] ; then \
... ; \
else \
... ; \
fi
Writing Command Lines
18 October 2001 15:34
529Note that the shell keywords then and else don’t need the semicolon. (What
happens is that make passes the backslashes and the newlines to the shell.
The escaped newlines are not syntactically important, so the semicolons are
needed to separate the differ ent parts of the command. This can be confus-
ing. If you use a semicolon where you would normally put a newline in a
shell script, things should work correctly.)
•
Remember that each line is run in a separate shell. This means that com-
mands that change the shell’s environment (such as cd ) are inef fective acr oss
multiple lines. The correct way to write such commands is to separate com-
mands on the same line with a semicolon:
cd subdir; $(MAKE)
• For guaranteed portability, always set SHELL to /bin/sh . Some versions of
make use whatever value is in the environment for SHELL , unless it is explicitly
set in the Makefile .
• Use macros for standard commands. make alr eady helps out with this, provid-
ing macros such as $(CC) , $(YACC) , and so on.
• When removing files, start your command line with -$(RM) instead of $($RM) .
(The – causes make to ignore the exit status of the command.) This way, if
the file you were trying to remove doesn’t exist, and rm exits with an error,
make can keep going.
• When running subsidiary invocations of make , typically in subdirectories of
your main program tree, always use $(MAKE) , and not make . Lines that contain
$(MAKE) ar e always executed, even if -n has been provided, allowing you to
test out a whole hierarchy of Makefile files. This does not happen for lines
that invoke make dir ectly.
• Often, it is convenient to organize a large software project into subprojects,
with each one having a subdirectory. The top-level Makefile then just
invokes make in each subdirectory. Here’s the way to do it:
SUBDIRS = proj1 proj2 proj3
...
projects: $(SUBDIRS)
for i in $(SUBDIRS); \
do \
echo ====== Making in $$i ; \
( cd $$i ; $(MAKE) $(MAKEFLAGS) $@ ) ; \
done
Sample Default Macros, Suffixes, and Rules
.SUFFIXES: .o .c .c ̃ .y .y ̃ .l .l ̃ .s .s ̃ .sh .sh ̃ .h .h ̃ .f .f ̃ \
.C .C ̃ .Y .Y ̃ .L .L ̃
MAKE=make
BUILD=build
AR=ar
ARFLAGS=rv
AS=as
530
18 October 2001 15:34
Chapter 20 – The make UtilityASFLAGS=
CC=cc
CFLAGS=-O
F77=f77
FFLAGS=-O
GET=get
GFLAGS=
LD=ld
LDFLAGS=
LEX=lex
LFLAGS=
YACC=yacc
YFLAGS=
C++C=CC
C++FLAGS=-O
.c:
$(CC) $(CFLAGS) $< -o $@ $(LDFLAGS)
.c ̃:
$(GET) $(GFLAGS) $<
$(CC) $(CFLAGS) $*.c -o $@ $(LDFLAGS)
-rm -f $*.c
.f:
$(F77) $(FFLAGS) $< -o $@ $(LDFLAGS)
.f ̃:
$(GET) $(GFLAGS) $<
$(F77) $(FFLAGS) $*.f -o $@ $(LDFLAGS)
-rm -f $*.f
.s:
$(AS) $(ASFLAGS) $< -o $@ $(LDFLAGS)
.s ̃:
$(GET) $(GFLAGS) $<
$(AS) $(ASFLAGS) $*.s -o $* $(LDFLAGS)
-rm -f $*.s
.sh:
cp $< $@; chmod 0777 $@
.sh ̃:
$(GET) $(GFLAGS) $<
cp $*.sh $*; chmod 0777 $@
-rm -f $*.sh
.C:
$(C++C) $(C++FLAGS) $< -o $@ $(LDFLAGS)
.C ̃:
$(GET) $(GFLAGS) $<
$(C++C) $(C++FLAGS) $*.C -o $@ $(LDFLAGS)
-rm -f $*.C
.c.a:
$(CC) $(CFLAGS) -c $<
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.o
.c.o:
$(CC) $(CFLAGS) -c $<
.c ̃.a:
$(GET) $(GFLAGS) $<
$(CC) $(CFLAGS) -c $*.c
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.[co]
.c ̃.c:
$(GET) $(GFLAGS) $<
Sample Default Macros, Suffixes, and Rules
18 October 2001 15:34
531.c ̃.o:
$(GET) $(GFLAGS) $<
$(CC) $(CFLAGS) -c $*.c
-rm -f $*.c
.f.a:
$(F77) $(FFLAGS) -c $*.f
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.o
.f.o:
$(F77) $(FFLAGS) -c $*.f
.f ̃.a:
$(GET) $(GFLAGS) $<
$(F77) $(FFLAGS) -c $*.f
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.[fo]
.f ̃.f:
$(GET) $(GFLAGS) $<
.f ̃.o:
$(GET) $(GFLAGS) $<
$(F77) $(FFLAGS) -c $*.f
-rm -f $*.f
.h ̃.h:
$(GET) $(GFLAGS) $<
.l.c:
$(LEX) $(LFLAGS) $<
mv lex.yy.c $@
.l.o:
$(LEX) $(LFLAGS) $<
$(CC) $(CFLAGS) -c lex.yy.c
-rm lex.yy.c; mv lex.yy.o $@
.l ̃.c:
$(GET) $(GFLAGS) $<
$(LEX) $(LFLAGS) $*.l
mv lex.yy.c $@
-rm -f $*.l
.l ̃.l:
$(GET) $(GFLAGS) $<
.l ̃.o:
$(GET) $(GFLAGS) $<
$(LEX) $(LFLAGS) $*.l
$(CC) $(CFLAGS) -c lex.yy.c
-rm -f lex.yy.c $*.l
mv lex.yy.o $@
.s.a:
$(AS) $(ASFLAGS) -o $*.o $*.s
$(AR) $(ARFLAGS) $@ $*.o
.s.o:
$(AS) $(ASFLAGS) -o $@ $<
.s ̃.a:
$(GET) $(GFLAGS) $<
$(AS) $(ASFLAGS) -o $*.o $*.s
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.[so]
.s ̃.o:
$(GET) $(GFLAGS) $<
$(AS) $(ASFLAGS) -o $*.o $*.s
-rm -f $*.s
.s ̃.s:
$(GET) $(GFLAGS) $<
532
18 October 2001 15:34
Chapter 20 – The make Utility.sh ̃.sh:
$(GET) $(GFLAGS) $<
.y.c:
$(YACC) $(YFLAGS) $<
mv y.tab.c $@
.y.o:
$(YACC) $(YFLAGS) $<
$(CC) $(CFLAGS) -c y.tab.c
-rm y.tab.c
mv y.tab.o $@
.y ̃.c:
$(GET) $(GFLAGS) $<
$(YACC) $(YFLAGS) $*.y
mv y.tab.c $*.c
-rm -f $*.y
.y ̃.o:
$(GET) $(GFLAGS) $<
$(YACC) $(YFLAGS) $*.y
$(CC) $(CFLAGS) -c y.tab.c
-rm -f y.tab.c $*.y
mv y.tab.o $*.o
.y ̃.y :
$(GET) $(GFLAGS) $<
.C.a:
$(C++C) $(C++FLAGS) -c $<
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.o
.C.o:
$(C++C) $(C++FLAGS) -c $<
.C ̃.a:
$(GET) $(GFLAGS) $<
$(C++C) $(C++FLAGS) -c $*.C
$(AR) $(ARFLAGS) $@ $*.o
-rm -f $*.[Co]
.C ̃.C:
$(GET) $(GFLAGS) $<
.C ̃.o:
$(GET) $(GFLAGS) $<
$(C++C) $(C++FLAGS) -c $*.C
-rm -f $*.C
.L.C:
$(LEX) $(LFLAGS) $<
mv lex.yy.c $@
.L.o:
$(LEX) $(LFLAGS) $<
$(C++C) $(C++FLAGS) -c lex.yy.c
-rm lex.yy.c; mv lex.yy.o $@
.L ̃.C:
$(GET) $(GFLAGS) $<
$(LEX) $(LFLAGS) $*.L
mv lex.yy.c $@
-rm -f $*.L
.L ̃.L:
$(GET) $(GFLAGS) $<
.L ̃.o:
$(GET) $(GFLAGS) $<
$(LEX) $(LFLAGS) $*.L
$(C++C) $(C++FLAGS) -c lex.yy.c
-rm -f lex.yy.c $*.L
mv lex.yy.c $@
Sample Default Macros, Suffixes, and Rules
18 October 2001 15:34
533.Y.C:
$(YACC) $(YFLAGS) $<
mv y.tab.c $@
.Y.o:
$(YACC) $(YFLAGS) $<
$(C++C) $(C++FLAGS) -c y.tab.c
-rm y.tab.c
mv y.tab.o $@
.Y ̃.C:
$(GET) $(GFLAGS) $<
$(YACC) $(YFLAGS) $*.Y
mv y.tab.c $*.C
-rm -f $*.Y
.Y ̃.o:
$(GET) $(GFLAGS) $<
$(YACC) $(YFLAGS) $*.Y
$(C++C) $(C++FLAGS) -c y.tab.c
-rm -f y.tab.c $*.Y
mv y.tab.o $*.o
.Y ̃.Y :
$(GET) $(GFLAGS) $<
markfile.o:
markfile
echo "static char _sccsid[] = \"‘grep @’(#)’ markfile‘\";" > markfile.c
$(CC) -c markfile.c
-rm -f markfile.c
.SCCS_GET:
$(GET) $(GFLAGS) s.$@
534
18 October 2001 15:34
Chapter 20 – The make UtilityPART V
Appendixes
Part V contains an appendix of ASCII characters, an appendix describing obsolete
commands, and a Unix bibliography.
• Appendix A, ASCII Character Set
• Appendix B, Obsolete Commands
• Bibliography
18 October 2001 15:3918 October 2001 15:39APPENDIX A
ASCII Character Set
This appendix presents the set of ASCII characters, along with their equivalent val-
ues in decimal, octal, and hexadecimal. The first table shows nonprinting charac-
ters; it’s useful when you need to repr esent nonprinting characters in some printed
for m, such as octal. For example, the echo and tr commands let you specify char-
acters using octal values of the form \nnn. Also, the od command can display
nonprinting characters in a variety of forms.
The second table shows printing characters. This table is useful when using the
pr evious commands, but also when specifying a range of characters in a pattern-
matching construct.
Table A−1: Nonprinting Characters
Decimal Octal Hex Character Remark
0 000 00 CTRL-@ NUL (Null prompt)
1 001 01 CTRL-A SOH (Start of heading)
2 002 02 CTRL-B STX (Start of text)
3 003 03 CTRL-C ETX (End of text)
4 004 04 CTRL-D EOT (End of transmission)
5 005 05 CTRL-E ENQ (Enquiry)
6 006 06 CTRL-F ACK (Acknowledge)
7 007 07 CTRL-G BEL (Bell)
8 010 08 CTRL-H BS (Backspace)
9 011 09 CTRL-I HT (Horizontal tab)
10 012 0A CTRL-J LF (Linefeed)
11 013 0B CTRL-K VT (Vertical tab)
12 014 0C CTRL-L FF (Formfeed)
537
18 October 2001 14:36Table A−1: Nonprinting Characters (continued)
Decimal
Octal
Hex
Character
Remark
13 015 0D CTRL-M CR (Carriage retur n)
14 016 0E CTRL-N SO (Shift out)
15 017 0F CTRL-O SI (Shift in)
16 020 10 CTRL-P DLE (Data link escape)
17 021 11 CTRL-Q DC1 (XON)
18 022 12 CTRL-R DC2
19 023 13 CTRL-S DC3 (XOFF)
20 024 14 CTRL-T DC4
21 025 15 CTRL-U NAK (Negative acknowledge)
22 026 16 CTRL-V SYN (Synchronous idle)
23 027 17 CTRL-W ETB (End transmission blocks)
24 030 18 CTRL-X CAN (Cancel)
25 031 19 CTRL-Y EM (End of medium)
26 032 1A CTRL-Z SUB (Substitute)
27 033 1B CTRL-[ ESC (Escape)
28 034 1C CTRL-\ FS (File separator)
29 035 1D CTRL-] GS (Group separator)
30 036 1E CTRL-ˆ RS (Record separator)
31 037 1F CTRL-_ 127 177 7F
US (Unit separator)
DEL (Delete or rubout)
Table A−2: Printing Characters
Decimal Octal Hex
Character Remark
32 040 20
33 041 21 ! Exclamation point
34 35 042 22 " Double quote
043 23 # Pound sign
36 044 24 $ Dollar sign
37 045 25 % Percent sign
38 046 26 & Ampersand
39 047 27 ’ Apostr ophe
40 050 28 ( Left parenthesis
41 051 29 ) Right parenthesis
42 052 2A * Asterisk
43 053 2B + Plus sign
538
18 October 2001 14:36
Space
Appendix A – ASCII Character SetTable A−2: Printing Characters (continued)
Octal Hex Character Remark
44 054 2C , Comma
45 055 2D – Hyphen
46 056 2E . Period
47 057 2F / Slash
48 060 30 0 49 061 31 1 50 062 32 2 51 063 33 3 52 064 34 4 53 065 35 5 54 066 36 6 55 067 37 7 56 070 38 8 57 071 39 9 58 072 3A : Colon
59 073 3B ; Semicolon
60 074 3C < Left angle bracket
61 075 3D = Equal sign
62 076 3E > Right angle bracket
63 077 3F ? Question mark
64 100 40 @ At sign
65 101 41 A 66 102 42 B 67 103 43 C 68 104 44 D 69 105 45 E 70 106 46 F 71 107 47 G 72 110 48 H 73 111 49 I 74 112 4A J 75 113 4B K 76 114 4C L 77 115 4D M 78 116 4E N 79 117 4F O Decimal
Intr oduction
18 October 2001 14:36
539Table A−2: Printing Characters (continued)
Decimal Octal Hex Character 80 120 50 P 81 121 51 Q 82 122 52 R 83 123 53 S 84 124 54 T 85 125 55 U 86 126 56 V 87 127 57 W 88 130 58 X 89 131 59 Y 90 132 5A Z 91 133 5B [ Left square bracket
92 134 5C \ Backslash
93 135 5D ] Right square bracket
94 136 5E ˆ Car et
95 137 5F _ Underscor e
96 140 60 ‘ Back quote
97 141 61 a 98 142 62 b 99 143 63 c 100 144 64 d 101 145 65 e 102 146 66 f 103 147 67 g 104 150 68 h 105 151 69 i 106 152 6A j 107 153 6B k 108 154 6C l 109 155 6D m 110 156 6E n 111 157 6F o 112 160 70 p 113 161 71 q 114 162 72 r 115 163 73 s
540
18 October 2001 14:36
Appendix A – ASCII Character Set
RemarkTable A−2: Printing Characters (continued)
Decimal Octal Hex Character
Remark
116 164 74 t 117 165 75 u 118 166 76 v 119 167 77 w 120 170 78 x 121 171 79 y 122 172 7A z 123 173 7B { 124 174 7C | Vertical bar
125 175 7D } Right curly brace
126 176 7E  ̃ Tilde
Left curly brace
Intr oduction
18 October 2001 14:36
541APPENDIX B
Obsolete Commands
This appendix contains entries for commands that are still shipped with SVR4 and/
or Solaris, but which have been superseded in their functions by other commands
or technologies. Here you will find:
• Intr oduction
• Alphabetical summary of commands
Introduction
The commands in this appendix fall into several categories. This list describes the
commands and why they are obsolete.
Ar chive maintenance
lorder and tsort wer e used to order the placement of object files in a library
archive. Modern versions of ar maintain a symbol table, allowing the loader
ld to find object files as needed.
Communications
cu , uucp , uuglist , uulog , uuname , uupick , uustat , uuto , uux , and write .
These commands were used for dial-up interactive or system-to-system com-
munications. Widely available Internet connectivity has generally made them
obsolete. talk is a better alternative to write .
Compr ession
pack , pcat , and unpack have been made obsolete by compress / uncompress , and
by gzip / gunzip .
542
18 October 2001 14:38File processing
•
bfs was intended for processing large files, up to one megabyte. vi on
moder n systems easily handles files that are considerably larger.
• crypt pr ovided file encryption.
• newform was intended for data-refor matting. This is much more easily
handled with sed or awk .
• red is a restricted version of ed . In practice, the restricted versions of var-
However, its algorithm is considered
weak, and better tools are available today.
ious commands were never very useful. They were hard to set up and
use correctly. ed itself is rarely used today.
• sum appar ently just adds up the bytes in a file, making its checksum of
questionable value. cksum should be used instead.
• tabs contr olled setting tab stops on repr ogrammable ter minals. However,
Unix systems are rar ely, if ever, used for writing in the programming lan-
guages it handles.
vc pr ovided a very simple-minded form of version control. RCS and
SCCS are much better alternatives.
Layers
ismpx , jterm , jwin , layers , relogin , and shl .
All but shl ar e specific to the now obsolete AT&T Teletype 5620 DMD win-
dowing terminal. The X Window system provides windowing functionality
on modern Unix systems. shl was an attempt to provide functionality similar
to BSD job control that never caught on.
Network status
ruptime , rwho , whois .
The first two programs use daemons that often overloaded local area net-
works. The whois registry has been outgrown by the Internet, which is now
much too large for centrally tracking everyone who might use it.
Simple menus
face and fmli pr ovided a simple way to create menu-driven programs for
CR T ter minals. They simply never caught on, particularly with the increase in
popularity of systems based on the X Window system.
UPAS
mailalias , notify , and vacation ar e used with the UPAS mailing system,
which was standard with SVR4. Moder n Unix systems use sendmail .
Windowing systems
OpenWindows (started by the openwin command) was the default windowing
system on SunOS and Solaris for many years. CDE (the Common Desktop
Envir onment) is now Sun’s preferr ed windowing environment for Solaris.
OpenWindows will not be supported past Solaris 7.
Intr oduction
18 October 2001 14:38
543
•Miscellaneous
•
cof2elf converts object files and archives in COFF format to ELF format.
As ELF format is now at least 10 years old, this program is not likely to
still be necessary.
•
fmtmsg was intended to provide a standardized way of generating error
messages from shell scripts. It was never widely used.
•
fold wraps lines to fit in a specific width. fmt generally does a better
job.
•
lptest generates a ripple pattern for line printers. Today, laser printers
and ink-jet printers are mor e common.
•
newgrp dates from when Unix systems allowed a user to be in only one
gr oup at a time. Moder n Unix systems allow users to be in multiple
gr oups simultaneously.
•
news pr ovides items of interest to system users.
It is per-machine.
Usenet news software is a much better alternative.
•
pg is a simple pager. Use more instead.
Alphabetical Summary of Commands
bfs
bfs [ option ] file
Big file scanner. Read a large file, using ed -like syntax. This com-
mand is more efficient than ed for scanning very large files because
the file is not read into a buffer. Files can be up to 1024K bytes. bfs
can be used to view a large file and identify sections to be divided
with csplit . Not too useful.
Option
-
cof2elf
Do not print the file size.
cof2elf [ options ] files
Convert one or more COFF files to ELF format, overwriting the origi-
nal contents. Input can be object files or archives.
Options
544
18 October 2001 14:38
-i Ignor e unr ecognized data; do the conversion anyway.
-q Quiet mode; suppress messages while running.
Appendix B – Obsolete Commands-Qc Print information about cof2elf in output (if c = y ) or suppr ess
infor mation (if c = n , the default).
cof2elf
-sdir
Save the original files to an existing directory dir.
-V
Print the version of cof2elf on standard error.
crypt [ password ] < file > encryptedfile
cr ypt
Encrypt a file to prevent unauthorized access. passwor d is either a
string of characters you choose or the option -k , which assigns the
value of the environment variable CRYPTKEY (Solaris: CrYpTkEy) as
the password. The same passwor d encrypts a file or decrypts an
encrypted file. If no password is given, crypt pr ompts for one. crypt
is available only in the United States (due to export restrictions).
cu [ options ] [ destination ] [ command ]
cu
Call up another Unix system or a terminal via a direct line or a
modem. A non-Unix system can also be called.
Options
-bn Pr ocess lines using n-bit characters (7 or 8).
-cname
Search UUCP’s Devices file and select the local area network
that matches name (this assumes connection to a system).
-C Instead of entering interactive mode, run the command fr om
the command line with standard input and standard output con-
nected to the remote system. Solaris only.
-d Print diagnostics.
-e Send even-parity data to remote system.
-h Emulate local echo and support calls to other systems expecting
ter minals to use half duplex mode.
-H Ignor e one hangup. Useful when calling a remote system that
will disconnect and call you back with a login prompt. Solaris
only.
→
Alphabetical Summary of Commands — cu
18 October 2001 14:38
545
The algorithm used is considered weak, and this command should
not be used for serious encryption. See PGP: Pretty Good Privacy,
listed in the Bibliography.cu
←
-lline
Communicate on device named line (e.g., /dev/tty001 ).
-L Use the chat sequence specified in /etc/uucp/Systems . Solaris
only.
-n Pr ompt user for a telephone number.
-o Use odd parity (opposite of -e ).
-sn Set transmission rate to n (e.g., 1200, 2400, 9600 bps). Default is
Any .
-t
Dial an ASCII terminal that has auto-answer set.
Destination
telno
system
addr
The telephone number of the modem to connect to.
Call the system known to uucp (run uuname to list valid
system names).
An address specific to your local area network.
cu runs as two processes: transmit and receive. Transmit reads from
standard input and passes characters to the remote system; receive
reads data from the remote system and passes lines to standard out-
put. Lines that begin with a tilde (  ̃ ) are treated as commands and
not passed.
Tr ansmit Options
 ̃. Terminate the conversation.
 ̃! Escape to an interactive shell on the local system.
 ̃!cmd ...
Run command on local system (via sh -c ).
 ̃$cmd ...
Run command locally; send output to remote system.
 ̃%cd
Change directory on the local system.
 ̃%take file [ target ]
Copy file fr om remote system to tar get on the local system. If
tar get is omitted, file is used in both places. The remote system
must be running Unix for this command to work. No check-
summing of the transmitted data is provided.
 ̃%put file [ target ]
Copy file fr om the local system to tar get on the remote system.
If tar get is omitted, file is used in both places. The remote sys-
tem must be running Unix for this command to work. No
checksumming of the transmitted data is provided.
546
18 October 2001 14:38
Appendix B – Obsolete Commandscu
 ̃ ̃ ...
Use two tildes when you want to pass a line that begins with a
tilde. This lets you issue commands to more than one system in
a cu chain. For example, use  ̃ ̃. to terminate the conversation
on a second system cu d to from the first.
 ̃%b Send a BREAK sequence to the remote system.
 ̃%d Turn debug mode on or off.
 ̃t Print termio structure for local terminal. (Intended for debug-
ging.)
 ̃l Print termio structure for communication line. (Intended for
debugging.)
 ̃%ifc
Turn on/of f the DC3/DC1 XOFF/XON control protocol (charac-
ters ˆS , ˆQ ) for the remainder of the session (formerly  ̃%nostop ,
which is still valid).
 ̃%ofc
Set output flow control either on or off.
 ̃%divert
Allow/pr event diversions not specified by  ̃%take .
 ̃%old
Allow/pr event old-style syntax for diversions received.
Examples
Connect to terminal line /dev/ttya at 9600 baud:
cu -s9600 -l/dev/ttya
Connect to modem with phone number 555-9876:
cu 5559876
Connect to system named usenix :
cu usenix
face [ options ] [ files ]
face
Invoke the Framed Access Command Environment Interface and
open files. By convention, each filename must be of the form
Menu. string, Form. string, or Text. string, depending on the type of
object being opened. If no files ar e specified, face opens the FACE
menu along with the default objects specified by the environment
variable LOGINWIN.
→
Alphabetical Summary of Commands — face
18 October 2001 14:38
547Options
face
←
-a afile
Load the list of pathname aliases specified in the file afile.
Entries have the form alias = pathname. Once this file is loaded,
you can use the shorthand notation $ alias to refer to a long
pathname.
-c cfile
Load the list of command aliases specified in the file cfile. This
file allows you to modify the default behavior of FACE com-
mands or create new commands.
-i ifile
Load file ifile, which specifies startup features such as the intro-
ductory frame, banner information, screen colors, and labels.
fmli
fmli [ options ] files
Invoke the Form and Menu Language Interpreter and open files. By
convention, each filename must be of the form Menu. string,
Form. string, or Text. string, depending on the type of object being
opened.
Options
-a afile
Load the list of pathname aliases specified in the file afile.
Entries have the form alias = pathname. Once this file is loaded,
you can use the shorthand notation $ alias to refer to a long
pathname.
-c cfile
Load the list of command aliases specified in the file cfile. This
file allows you to modify the default behavior of FMLI com-
mands or create new commands.
-i ifile
Load file ifile, which specifies startup features such as the intro-
ductory frame, banner information, screen colors, and labels.
fmtmsg
fmtmsg [ options ] text
Print text as part of a formatted error message on standard error (or
on the system console). text must be quoted as a single argument.
fmtmsg is used in shell scripts to print messages in a standard format.
548
18 October 2001 14:38
Appendix B – Obsolete CommandsMessages display as follows:
label:
TO FIX:
severity:
action
fmtmsg
text
tag
You can define the MSGVERB variable to select which parts of the
message to print. Each part is described with the options below.
The SEV_LEVEL environment variable allows you to add additional
severities and associated strings to be printed when those severities
ar e pr ovided.
Options
-a action
A string describing the first action to take in recovering the
err or. The string “TO FIX:” precedes the action string.
-c source
The source of the problem, where sour ce is one of hard (hard-
war e), soft (softwar e), or firm (fir mware).
-l label
Identify the message source with a text label, often of the form
file : command.
-s severity
How serious the condition is. severity is one of halt , error ,
warn , or info .
-t tag
Another string identifier for the message.
-u types
Classify the message as one or more types (separated by com-
mas). types can be one of the keywords appl , util , or opsys
(meaning that the problem comes respectively from an applica-
tion, utility, or the kernel), either of the keywords recov or nre-
cov (application will or won’t recover), print (message displays
on standard error), and console (message displays on system
console).
fold [ options ] [ files ]
fold
Br eak the lines of the named files so that they are no wider than the
specified width. fold br eaks lines exactly at the specified width,
even in the middle of a word.
→
Alphabetical Summary of Commands — fold
18 October 2001 14:38
549Options
fold
←
-b The line width specifies bytes, not characters. Solaris only.
-s Br eak lines after the last whitespace character within the first
width characters. Solaris only.
-w n
Cr eate lines having width n (default is 80). (Can also be
invoked as - n for compatibility with BSD.)
ismpx
ismpx [ option ]
Test whether standard input is running under layers . (Command
name comes from “Is the multiplexor running?”) Output is either yes
(exit status 0) or no (exit status 1). Useful for shell scripts that down-
load programs to a layers windowing terminal or that depend on
scr een size.
Option
-s
Suppr ess output and retur n exit status only.
Example
if ismpx -s
then jwin
fi
jter m
jterm
Reset layer of windowing terminal after a program changes the ter-
minal attributes of the layer. Used only under layers . Retur ns 0 on
success, 1 otherwise.
jwin
jwin
Print size of current window in bytes. Used only under layers .
layers
layers [ options ] [ layers_program ]
A layer multiplexor for DMD windowing terminals. layers manages
asynchr onous windows on a windowing terminal. layers_ program is
a file containing a firmwar e patch that layers downloads to the ter-
minal (before layers are created or startup commands are executed).
550
18 October 2001 14:38
Appendix B – Obsolete CommandsOptions
layers
-d Print sizes of the text, data, and bss portions of a downloaded
fir mware patch on standard error.
-D Print debugging messages on standard error.
-f file
Initialize layers with a configuration given by file. Each line of
file is a layer to be created and has the format x1 y1 x2 y2 com-
mands, specifying the origin, the opposite corner, and start-up
commands. For example:
10 10 800 240 date; who; exec $SHELL
-h list
Supply a comma-separated list of STREAMS modules to push
onto a layer.
-m size
Set data part of xt packets to maximum size (32–252).
Print downloading protocol statistics and a trace of a down-
loaded firmwar e patch on standard error.
-s Report protocol statistics on standard error after exiting layers .
-t Turn on xt driver packet tracing and produce a trace dump on
standard error after exiting layers .
/usr/ccs/bin/lorder objfiles
-p
lorder
Take object filenames (e.g., files with .o suf fix) and output a list of
related pairs. The first file listed includes refer ences to external iden-
tifiers that are defined in the second. lorder output can be sent to
tsort to make the ordering of files in an archive more efficient for
loading.
Example
To produce an ordered list of object files and replace them in the
library libmyprog.a (pr ovided they are newer):
ar cru libmyprog.a ‘lorder *.o | tsort‘
/usr/ucb/lptest [ length [ n ]]
lptest
Display all 96 printable ASCII characters on the standard output.
Characters are printed in each position, forming a “ripple pattern.”
You can specify the output line length (default is 79) and display n
→
Alphabetical Summary of Commands — lptest
18 October 2001 14:38
551lptest ← lines of output (default is 200). lptest is useful for testing printers
and terminals or for running shell scripts with dummy input.
mailalias mailalias [ options ] names
Display the email addresses associated with one or more alias
names. mailalias displays addresses that are listed in the files /var/
mail/ name, $HOME/lib/names , and in the files pointed to by the list in
/etc/mail/namefiles . mailalias is called by mail .
Note: this command is part of the UPAS mailing system software.
Commercial Unix systems all use sendmail , thus this command isn’t
applicable.
Options
newfor m
-s Suppr ess names; show only corresponding mail address.
-v Verbose mode; show debugging information.
newform [ options ] files
For mat files according to the options specified. newform resembles
cut and paste and can be used to filter text output. Options can
appear more than once and can be interspersed between files
(except for -s , which must appear first).
Options
-a [ n ]
Append n characters to the end of each line or, if n isn’t speci-
fied, append characters until each line has the length specified
by -l .
-b [ n ]
Delete n characters from beginning of each line or, if n isn’t
specified, delete characters until each line has the length speci-
fied by -l .
-cm Use character m (instead of a space) when padding lines with
-a or -p ; -c must precede -a or -p .
-e [ n ]
Same as -b , but delete from the end.
-f
Display tabspec for mat used by last -o option.
-i’tabspec’
Expand tabs to spaces using tabspec conversion (default is 8
spaces); tabspec is one of the options listed under ta bs.
552
18 October 2001 14:38
Appendix B – Obsolete Commands-l [ n ]
newfor m
Use line length n (default is 72). If -l is not specified, default
line length is 80. -l usually precedes other options that modify
line length ( -a , -b , -c , -e , or -p ).
-o’tabspec’
Turn spaces into tabs using tabspec conversion.
-p [ n ]
Same as -a , but pad beginning of line.
-s
Strip leading characters from each line (up to and including first
tab); the first seven characters are moved to the end of the line
(without the tab). All lines must contain at least one tab.
Example
Remove sequence numbers from a COBOL program:
newform -l1 -b7 file
newgrp
Log in to gr oup. If gr oup name is not specified, your original group
is reinstated. If - is given, log in using the same environment as
when logging in as gr oup. Solaris allows -l as well as - .
This command is also built in to the Bourne and Korn shells. On
moder n Unix systems that allow users to simultaneously be in multi-
ple groups, this command is obsolete.
news [ options ] [ item_files ]
news
Consult the news directory for information on current events. With
no arguments, news prints all current item_files. Items usually reside
in /usr/news or /var/news .
Note: this command is not related to Usenet news.
Options
-a Print all news items, whether current or not.
-n Print names of news items, but not their contents.
-s Report the number of current news items.
notify [ options ]
notify
Infor m user when new mail arrives. With no options, indicate
whether automatic notification is enabled or disabled.
→
Alphabetical Summary of Commands — notify
18 October 2001 14:38
553
newgrp [ - ] [ group ]notify
←
Note: this command is part of the UPAS mailing system software.
Commercial Unix systems all use sendmail , thus, this command isn’t
applicable.
Options
-m file
Save mail messages to file (default is $HOME/.mailfile ). Applies
only when automatic notification is enabled ( -y option).
openwin
-n Disable mail notification. -n is used alone.
-y Enable mail notification.
/usr/openwin/bin/openwin [ options ]
Start the OpenWindows graphical user interface environment. This
envir onment is now considered obsolete; the preferr ed envir onment
is CDE (the Common Desktop Environment), and OpenWindows
will not be supported past Solaris 7. See also cde in Chapter 2, Unix
Commands.
Useful OpenWindows Commands
The following OpenWindows commands may be of interest. Look at
the manpages for more infor mation:
calctool
clock
cm
cmdtool
iconedit
mailtool
oclock
pageview
perfmeter
printtool
shelltool
snapshot
textedit
xbiff
xcalc
xditview
xedit
xhost
xload
xlock
554
18 October 2001 14:38
On-scr een scientific calculator
Clock
Calendar manager
Terminal emulator
Icon editor
Mail reader
A round clock
PostScript viewer
System-per formance meter
Print manager
Another terminal emulator (respects stty settings)
Saves portions of X display
Simple text editor
Graphical mail arrival watchdog program
Simple on-screen calculator
Device-independent troff output viewer
Simple text editor
Contr ols per missions for who can connect to display
System load monitor
Scr een saver/locker
Appendix B – Obsolete Commandsxmag
xman
xterm
Magnifies portions of the display
Viewer for manpages
Standard X Window system terminal emulator
openwin
pack [ options ] files
pack
Compact each file and place the result in file .z . The original file is
replaced. To restor e packed files to their original form, see pcat and
unpack.
The compress and gzip commands give much better compression.
Their use is recommended. (See compress and gzip in Chapter 2.)
Options
- Print number of times each byte is used, relative frequency, and
byte code.
-f Force the pack even when disk space isn’t saved.
Display (as with cat ) one or more packed files. See also pack and
unpack.
pg [ options ] [ files ]
pg
Display the named files on a terminal, one page at a time. After each
scr een is displayed, you are prompted to display the next page by
pr essing the Return key. Press h for help with additional commands;
pr ess q to quit. See also more in Chapter 2.
Options
-c Clear screen (same as -c of more ).
-e Do not pause between files.
-f Do not split long lines.
-n Issue a pg command at the prompt without waiting for a car-
riage retur n ( more works this way).
-pstr
Use string str for the command prompt. The special variable %d
displays the page number.
→
Alphabetical Summary of Commands — pg
18 October 2001 14:38
555
pcat
pcat filespg
←
-r Restricted mode; shell escapes aren’t allowed.
-s Display messages in standout mode (reverse video).
-n Use n lines for each window (default is a full screen).
+num
Begin displaying at line number num.
+/pat
Begin displaying at first line containing pattern pat.
Example
pg -p ’Page %d :’ file
red
red [ options ] [ file ]
Restricted version of ed . With red , only files in the current working
dir ectory can be edited. Shell commands using ! ar e not allowed.
relog in
relogin [ option ] [ terminal ]
Change the login entry to reflect the current window running under
layers . This ensures that commands like who and write use the cor-
rect login information. layers calls relogin automatically, but you
may sometimes want to use relogin to change the destination win-
dow for write messages. ter minal is the filename of the terminal to
change; e.g., ttyp0 .
Option
-s
ruptime
Don’t print error messages.
ruptime [ options ]
Show the status of local networked machines (similar to uptime ).
This command is generally no longer used because the supporting
daemon generates an inordinate amount of unnecessary network
traf fic.
Options
556
18 October 2001 14:38
-a Include users even if they’ve been idle for more than one hour.
Nor mally such users are not counted.
-l Sort by load average.
Appendix B – Obsolete Commands-r Reverse the sort order.
-t Sort by up time.
-u Sort by number of users.
ruptime
rwho [ option ]
rwho
Report who is logged on for all machines on the local network (simi-
lar to who ).
This command is generally no longer used because the supporting
daemon generates an inordinate amount of unnecessary network
traf fic.
Option
-a
List users even if they’ve been idle for more than one hour.
Contr ol mor e than one shell (layer) from a single terminal. From the
shl pr ompt level, you can issue the commands listed below (abbre-
viating them to any unique prefix if desired). The name text string
should not exceed eight characters. See also layers .
block name [ name2 ... ]
Block the output for each layer name (same as stty loblk ).
create [ name ]
Cr eate the layer name (no more than seven total).
delete name [ name2 ... ]
Delete the layer name.
help or ?
Pr ovide shl command syntax.
layers [ -l ] [ name ... ]
Print information about layers. -l pr ovides a ps -like display.
name
Make layer name be the current level.
quit
Exit shl and kill all the layers.
resume [ name ]
Retur n to latest layer or to layer name.
→
Alphabetical Summary of Commands — shl
18 October 2001 14:38
557
shl
shlshl
←
toggle
Flip back to the previous layer.
unblock name [ name2 ... ]
Do not block output for each layer name (same as stty
-loblk ).
sum
sum [ option ] file
Calculate and print a checksum and the number of (512-byte) blocks
for file. Possibly useful for verifying data transmission. See also
cksum in Chapter 2.
Note: /usr/ucb/sum reports sizes in kilobytes, while /usr/bin/sum
reports sizes in 512-byte blocks, even with the -r option.
Option
-r
ta bs
Use an alternate checksum algorithm; this produces the same
results as the BSD version of sum .
tabs [ tabspec ] [ options ]
Set terminal tab stops according to tabspec. The default tabspec, -8 ,
gives the standard Unix tab settings. Specify tabspec as a predefined
set of tab stops for particular languages, for example: a (IBM assem-
bler), c (COBOL), f (FOR TRAN), p (PL/1), s (SNOBOL), and u (UNI-
VAC assembler). tabspec can also be a repeated number, arbitrary
numbers, or called from a file.
Ta bspec
-n
Repeat tab every n columns (e.g., 1+n, 1+2*n, etc.).
n1 , n2 ,...
Arbitrary ascending values. If n is preceded by +, it is added
(i.e., tab is relative to previous position).
-a
1, 10, 16, 36, 72.
-a2 1, 10, 16, 40, 72.
-c
1, 8, 12, 16, 20, 55.
-c2 1, 6, 10, 14, 49.
-c3 1, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 67.
-f
558
18 October 2001 14:38
1, 7, 11, 15, 19, 23.
Appendix B – Obsolete Commands-p 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61.
-s 1, 10, 55.
-u 1, 12, 20, 44.
ta bs
--file
Read first line of file for tabs.
Options
+mn Set left margin to n (default is 10).
-Ttype
Set terminal type (default is $TERM).
/usr/ccs/bin/tsort [ file ]
tsor t
Per form a topological sort on file. Typically used with lorder to reor-
ganize an archive library for more efficient handling by ar or ld . Not
very useful. See also lorder.
Example
Find the ordering relationship of all object files, and sort them for
access by ld :
ld -o myprog ‘lorder *.o | tsort‘
unpack
unpack files
Expand one or more files, created with pack , to their original form.
See pcat and pack.
uucp [ options ] [ source! ] file [ destination! ] file
uucp
Copy a file (or group of files) from the source to the destination. The
sour ce and destination can be remote systems. The destination file
can be a directory.
Options
-c Do not copy files to the spool directory (the default).
-C Copy files to the spool directory for transfer.
-d Make directories for the copy when they don’t exist (the
default).
→
Alphabetical Summary of Commands — uucp
18 October 2001 14:38
559uucp
-f
←
Do not make directories when they don’t exist.
-gx Set grade (priority) of job. x is typically a single letter or digit,
wher e a and 1 give the highest transfer priority. Use uuglist to
show values for x.
-j Print the uucp job number.
-m When copy is complete, send mail to person who issued uucp
command.
-nuser
When copy is complete, send mail to (notify) user.
-r
Queue job, but don’t start transfer program ( uucico ).
-sfile
Send transfer status to file (a full pathname); overrides -m .
Solaris accepts but ignores this option for security reasons.
-xn Debug at level n (0–9); higher numbers give more output.
Example
This shell script sends a compressed file to system orca :
$ cat send_it
#! /bin/sh
compress $1
uucp -C -n$2 -m $1.Z orca!/var/spool/uucppublic
uncompress $1
With -C , the transfer is made from a copy in the spool directory.
(Nor mally, uucp gets the file from its original location, so you can’t
rename it or uncompress it until the call goes through.) The script
also notifies the sender and the recipient when the transfer finishes.
Her e’s a sample run:
send_it chapter1 bob
uuglist
uuglist [ option ]
List all service grades available for use with the -g option of uux and
uucp . Service grades define the priority of data transferral; they are
typically expressed as single characters or as a string.
Option
-u
560
18 October 2001 14:38
List grades available to the current user.
Appendix B – Obsolete Commandsuulog [ options ]
uulog
Print information from the uucp or uuxqt log files, which reside in
/var/uucp/.Log (down subdirectories uucico or uuxqt ). See also tail
in Chapter 2.
Options
-fsys
Issue a tail -f to print the most recent actions for a given sys-
tem.
-ssys
Print all actions for the given system.
-x
Check the uuxqt log file for the given system (used with -f or
-s ).
-n
Execute a tail command of n lines (used with -f ).
uuname
Print the names of systems uucp knows about.
Options
-c Print system names known to cu (usually the same).
-l Print the local system’s node name.
uupick [ option ]
uupick
Query the status of files sent to the user with uuto .
Option
-ssystem
Search only for files sent from system.
Interactive Responses
a [ dir ]
Move all files sent from system to the named dir.
d
Delete the entry.
m [ dir ]
Move the file to the directory dir.
→
Alphabetical Summary of Commands — uupick
18 October 2001 14:38
561
uuname [ options ]uupick
←
p Print the file.
q Quit uupick .
* Print a command summary.
!cmd
Execute the shell command cmd.
EOF Quit uupick .
RETURN
Move to next entry.
uustat
uustat [ options ]
Pr ovide infor mation about uucp requests. This command can also be
used to cancel uucp requests. Options -a , -j , -k , -m , -p , -q , and -r
cannot be used with each other.
Options
-a Report all queued jobs.
-c When used with -t , report average time spent on queue instead
of average transfer rate.
-dn When used with -t , report averages for past n minutes instead
of past hour.
-j
Report the total number of jobs displayed (use only with -a or
-s ).
-kn Kill job request n; you must own it.
-m Report accessibility of other systems.
-n Suppr ess standard output but not standard error.
-p Execute a ps -flp on active UUCP processes.
-q Report the jobs queued for all systems.
-rn Renew job n by issuing a touch on its associated files.
-ssystem
Report the status of jobs for system.
-Sx Report status for jobs of type x :
c
i
q
r
562
18 October 2001 14:38
Completed jobs.
Interrupted jobs.
Queued jobs.
Running jobs.
Appendix B – Obsolete Commandsuustat
-tsystem
Report system’s average transfer rate (in bytes per second) over
the past hour.
-uuser
Report the status of jobs for user.
uuto [ options ] sourcefiles destination
uuto
Send source files to a destination, where destination is of the form
system ! user. The user on the destination system can pick up the files
with uupick .
Options
-m Send mail when the copy is complete.
-p Copy files to the spool directory.
uux
Gather files from various systems and execute command on the
specified machine sys. uux also recognizes the uucp options -c , -C ,
-g , -r , -s , and -x .
Options
-
Same as -p (pass standard input to command).
-auser
Notify user upon completion (see -z ).
-b Print the standard input when the exit status indicates an error.
-j Print the uux job number.
-n Do not send mail if command fails.
-p Pass the standard input to command.
-z Notify invoking user upon successful completion.
vacation [ options ]
vacation
SVR4 version for UPAS. (See also vacation in Chapter 2.) Automati-
cally retur n a mail message to the sender announcing that you are
on vacation. To disable this feature, type mail -F "" .
→
Alphabetical Summary of Commands — vacation
18 October 2001 14:38
563
uux [ options ] [[ sys ] !command ]vacation
←
Options
-d
Append the date to logfile (see -l ).
-F user
Forward mail to user when unable to send mail to mailfile (see
-m ).
-l logfile
Record in logfile the names of senders who received an auto-
mated reply (default is $HOME/.maillog ).
-m mailfile
Save received messages in mailfile (default is $HOME/.mailfile ).
-M msg_file
Use msg_file as the automatic reply to mail (default is /usr/lib/
mail/std_vac_msg ).
vc
/usr/ccs/bin/vc [ options ] [ keyword=value ...]
“Version control.” Copy lines from standard input to standard output
under control of the vc keywords and arguments within the standard
input.
This command is completely unrelated to RCS and to SCCS; it is
essentially useless.
Options
-a
Replace control keywords in all lines, including text lines.
-ck Use k instead of : as the control character.
whois
-s Suppr ess war ning messages.
-t If any control characters are found before the first tab in the file,
remove all characters up to the first tab.
whois [ option ] name
Search an Internet directory for the person, login, handle, or organi-
zation specified by name. Precede name with the modifiers ! , . , or
* , alone or in combination, to limit the search to either (1) the name
of a person or of a username, (2) a handle, or (3) an organization.
564
18 October 2001 14:38
Appendix B – Obsolete CommandsOption
whois
-h host
Search on host machine host.
write user [ tty ]
message
EOF
wr ite
Initiate or respond to an interactive conversation with user. A write
session is terminated with EOF. If the user is logged in to more than
one terminal, specify a tty. See also talk in Chapter 2.
Alphabetical Summary of Commands
18 October 2001 14:38
565Bibliog raphy
Many books have been written about Unix and related topics. It would be impos-
sible to list them all, nor would that be very helpful. In this chapter, we present
the “classics”—those books that the true Unix wizard has on his or her shelf.
(Alas, some of these are now out-of-print; thus only the older Unix wizard has
them.
)
Because Unix has affected many aspects of computing over its history, you will
find books listed here on things besides just the Unix operating system itself.
This chapter presents:
• Unix descriptions and programmer’s manuals
• Unix internals
• Programming with the Unix mindset
• Programming languages
• TCP/IP networking
• Typesetting
• Emacs
• Standards
• O’Reilly books
566
18 October 2001 14:39Unix Descriptions and Prog rammer’s Manuals
1. The Bell System Technical Journal, Volume 57 Number 6, Part 2, July-August
1978. AT&T Bell Laboratories, Murray Hill, NJ, USA. ISSN 0005-8580. A spe-
cial issue devoted to Unix, by the creators of the system.
2. AT&T Bell Laboratories Technical Journal, Volume 63 Number 8, Part 2, Octo-
ber 1984. AT&T Bell Laboratories, Murray Hill, NJ, USA. Another special
issue devoted to Unix.
These two volumes were republished as:
3. UNIX System Readings and Applications, Volume 1, Prentice-Hall, Englewood
Clif fs, NJ, USA, 1987. ISBN 0-13-938532-0.
4. UNIX System Readings and Applications, Volume 2, Prentice-Hall, Englewood
Clif fs, NJ, USA, 1987. ISBN 0-13-939845-7.
5. UNIX Time-sharing System: UNIX Programmers Manual, Seventh Edition, Vol-
umes 1, 2A, 2B. Bell Telephone Laboratories, Inc., January 1979.
These are the refer ence manuals (Volume 1), and descriptive papers (Volumes
2A and 2B) for the landmark Seventh Edition Unix system, the direct ancestor
of all current commercial Unix systems.
They were reprinted by Holt Rinehart & Winston, but are now long out-of-
print. However, they are available online from Bell Labs in troff source, PDF,
and PostScript formats. See http://plan9.bell-labs.com/7thEdMan.
UNIX Research System: Programmer’s Manual, Tenth Edition, Volume 1, AT&T
Bell Laboratories, M.D. McIlroy and A.G. Hume editors, Holt Rinehart & Win-
ston, New York, NY, USA, 1990. ISBN 0-03-047532-5.
7. UNIX Research System: Papers, Tenth Edition, Volume 2, AT&T Bell Laborato-
ries, M.D. McIlroy and A.G. Hume editors, Holt Rinehart & Winston, New
York, NY, USA, 1990. ISBN 0-03-047529-5.
These are the manuals and papers for the Tenth Edition Unix system.
Although this system was not used much outside of Bell Labs, many of the
ideas from it and its predecessors were incorporated into various versions of
System V. And the manuals make interesting reading, in any case.
8.
4.4BSD Manuals, Computing Systems Research Group, University of Califor-
nia at Berkeley. O’Reilly & Associates, Sebastopol, CA, USA, 1994. ISBN:
1-56592-082-1. Out of print.
The manuals for 4.4BSD.
9.
Your Unix programmer’s manual. One of the most instructive things you can
do is read your manual from front to back. * (This is harder than it used to be,
as Unix systems have grown.) It is easier to do if your Unix vendor makes
* One summer, while working as a contract programmer, I spent my lunchtimes reading the manual for
System III (yes, that long ago), from cover to cover. I don’t know that I ever learned so much in so lit-
tle time.
Bibliography
18 October 2001 14:39
567
6.printed copies of their documentation available. Otherwise, start with the
Seventh Edition manual, and then read your local documentation as needed.
10. A Quarter Century of Unix, Peter H. Salus, Addison Wesley, Reading, MA,
USA, 1994. ISBN: 0-201-54777-5.
A delightful book that tells the history of Unix, from its inception up to the
time the book was written. It reads like a good novel, except that it’s all true!
11. The Unix Philosophy, Mike Gancarz, Digital Equipment Corp, USA, 1996.
ISBN: 1-55558-123-4.
12. Plan 9: The Manuals, The Documents, The System, AT&T Bell Laboratories,
Harcourt Brace and Company, Boston, MA, USA, 1995. ISBN: 0-03-017143-1
for the full set. ISBN: 0-03-01742-3 for just the manuals. See http://plan9.bell-
labs.com/plan9/distrib.html.
These volumes document and provide the system and source code for “Plan 9
Fr om Bell Labs,” the next-generation system done by the same people at Bell
Labs who created Unix. It contains many interesting and exciting ideas. The
set comes with a CD-ROM including full source code, or you can purchase
just the manuals.
Unix Internals
The dedicated Unix wizard knows not only how to use his or her system, but how
it works.
1.
Lions’ Commentary on UNIX 6th Edition, with Source Code, John Lions, Peer-
to-Peer Communications, San Jose, CA, USA, 1996. ISBN: 1-57398-013-7. See
http://www.peer-to-peer.com/catalog/opsr c/lions.html.
This classic work provides a look at the internals of the Sixth Edition Unix
system.
2.
The Design of the UNIX Operating System, Maurice J. Bach, Prentice-Hall,
Englewood Cliffs, NJ, USA, 1986. ISBN: 0-13-201799-7.
This book very lucidly describes the design of System V Release 2, with some
discussion of important features in System V Release 3, such as STREAMS and
the filesystem switch.
3. The Magic Garden Explained: The Internals of Unix System V Release 4: An
Open Systems Design, Ber ny Goodheart, James Cox, John R. Mashey, Prentice-
Hall, Englewood Cliffs, NJ, USA, 1994. ISBN: 0-13-098138-9.
4. Unix Internals: The New Frontiers, Uresh Vahalia, Prentice-Hall, Englewood
Clif fs, NJ, USA, 1996. ISBN: 0-13-101908-2.
5. Unix Internals: A Practical Approach, Steve D. Pate, Addison Wesley, Read-
ing, MA, USA, 1996. ISBN: 0-201-87721-X.
6. The Design and Implementation of the 4.3BSD UNIX Operating System, Samuel
J. Leffler, Marshall Kirk McKusick, Michael J. Karels and John S. Quarterman,
Addison Wesley, Reading, MA, USA, 1989. ISBN: 0-201-06196-1.
568
18 October 2001 14:39
BibliographyThis book describes the 4.3BSD version of Unix. Many important features
found in commercial Unix systems first originated in the BSD Unix systems,
such as long filenames, job control, and networking.
7.
The Design and Implementation of the 4.4 BSD Operating System, Marshall
Kirk McKusick, Keith Bostic, Michael J. Karels, John S. Quarterman, Addison
Wesley Longman, Reading, MA, USA, 1996. ISBN 0-201-54979-4.
This book is an update of the previous one, for 4.4BSD, the last Unix system
released from UCB. To quote from the publisher’s description, the book
“details the major changes in process and memory management, describes the
new extensible and stackable filesystem interface, includes an invaluable
chapter on the new network filesystem, and updates information on network-
ing and interprocess communication.”
Prog ramming with the Unix Mindset
Any book written by Brian Kernighan deserves careful reading, usually several
times. The first two books present the Unix “toolbox” programming methodology.
They will help you learn how to “think Unix.” The third book continues the pro-
cess, with a more explicit Unix focus. The fourth and fifth are about programming
in general, and also very worthwhile.
1.
Softwar e Tools, Brian W. Ker nighan and P. J. Plauger, Addison Wesley, Read-
ing, MA, USA, 1976. ISBN: 0-201-03669-X.
2.
Softwar e Tools in Pascal, Brian W. Ker nighan and P. J. Plauger, Addison Wes-
ley, Reading, MA, USA, 1981. ISBN: 0-201-10342-7.
A translation of the previous book into Pascal. Still worth reading; Pascal pro-
vides many things that FORTRAN does not.
3.
The Unix Programming Environment, Brian W. Ker nighan and Rob Pike,
Pr entice-Hall, Englewood Cliffs, NJ, USA, 1984. ISBN:0-13-937699-2 (hard-
cover), 0-13-937681-X (paperback).
This books focuses explicitly on Unix, using the tools in that environment. In
particular, it adds important material on the shell, awk , and the use of lex and
yacc . See http://cm.bell-labs.com/cm/cs/upe.
4.
The Elements of Programming Style, Second Edition. Brian W. Ker nighan and
P. J. Plauger, McGraw-Hill, New York, NY, USA, 1978. ISBN: 0-07-034207-5.
Modeled after Strunk & White’s famous The Elements of Style, this book
describes good programming practices that can be used in any environment.
* One that changed my life forever.
Bibliography
18 October 2001 14:39
569
A wonder ful book * that presents the design and code for programs equivalent
to Unix’s grep , sort , ed , and others. The programs use RATFOR (Rational
FOR TRAN), a prepr ocessor for FORTRAN with C-like control structures.5.
The Practice of Programming, Brian W. Ker nighan and Rob Pike, Addison
Wesley Longman, Reading, MA, USA, 1999. ISBN: 0-201-61586-X.
Similar to the previous book, with a somewhat stronger technical focus. See
http://cm.bell-labs.com/cm/cs/tpop.
6.
Writing Efficient Programs, Jon Louis Bentley, Prentice-Hall, Englewood Cliffs,
NJ, USA, 1982. ISBN: 0-13-970251-2 (hardcover), 0-13-970244-X (paperback).
Although not related to Unix, this is an excellent book for anyone interested
in programming efficiently.
7. Pr ogramming Pearls, Second Edition. Jon Louis Bentley, Addison Wesley,
Reading, MA, USA, 2000. ISBN: 0-201-65788-0.
8. Mor e Pr ogramming Pearls: Confessions of a Coder, Jon Louis Bentley, Addison
Wesley, Reading, MA, USA, 1988. ISBN: 0-201-11889-0.
These two excellent books, to quote Nelson H. F. Beebe, “epitomize the Unix
mindset, and are wonder ful examples of little languages, algorithm design,
and much more.” These should be on every serious programmer’s bookshelf.
9.
Advanced Programming in the Unix Environment, W. Richard Stevens, Addi-
son Wesley, Reading, MA, USA, 1992. ISBN: 0-201-56317-7.
A thick but excellent work on how to use the wealth of system calls in mod-
er n Unix systems.
Prog ramming Languages
A number of important programming languages were first developed under Unix.
Note again the books written by Brian Kernighan.
1.
The C Programming Language, Brian W. Ker nighan and Dennis M. Ritchie,
Pr entice-Hall, Englewood Cliffs, NJ, USA, 1978. ISBN: 0-13-110163-3.
The original “bible” on C. Dennis Ritchie invented C and is one of the two
“fathers” of Unix. This edition is out-of-print.
2.
The C Programming Language, Second Edition. Brian W. Ker nighan and
Dennis M. Ritchie, Prentice-Hall, Englewood Cliffs, NJ, USA, 1988. ISBN:
0-13-110362-8.
This revision of the original covers ANSI C. It retains and improves upon the
high qualities of the first edition. See http://cm.bell-labs.com/cm/cs/cbook.
3.
C: A Reference Manual, Fourth Edition, Samuel P. Harbison and Guy L. Steele,
Pr entice-Hall, Englewood Cliffs, NJ, USA, 1994. ISBN: 0-13-326224-3.
An excellent discussion of the details for those who need to know.
4.
The C++ Programming Language, Third Edition, Bjarne Stroustrup, Addison
Wesley, Reading, MA, USA, 1997. ISBN: 0-201-88954-4.
The definitive statement on C++ by the language’s inventor and the ANSI C++
committee chair. See http://www.awl.com/cseng/titles/0-201-88954-4/.
570
18 October 2001 14:39
Bibliography5.
C++ Primer, Third Edition, Stanley B. Lippman and Josée Lajoie. Addison
Wesley Longman, Reading, MA, USA, 1998. ISBN: 0-201-82470-1.
An excellent introduction
titles/0-201-82470-1/.
6.
to
C++.
See
http://www.awl.com/cseng/
The Java Programming Language, Ken Arnold and James Gosling. Addison
Wesley, Reading, MA, USA, 1997. ISBN: 0-201-31006-6.
This book is intended for learning Java, by two of the designers of the lan-
guage.
7. The Java Language Specification, James Gosling, Bill Joy, Guy L. Steele Jr.
Addison Wesley, Reading, MA, USA, 1996. ISBN: 0-201-63451-1.
8. The AWK Programming Language, Alfr ed V. Aho and Brian W. Ker nighan and
Peter J. Weinberger, Addison Wesley, Reading, MA, USA, 1987. ISBN:
0-201-07981-X.
The original definition for the awk pr ogramming language. Extremely worth-
while. See http://cm.bell-labs.com/cm/cs/awkbook.
9.
Ef fective AWK Programming, Arnold Robbins, Specialized Systems Consul-
tants, Seattle, WA, USA, 1997. ISBN: 1-57831-000-8.
A mor e tutorial treatment of awk that covers the POSIX standard for awk . It
also serves as the user’s guide for gawk . See http://www.ssc.com/ssc/eap/.
11. Practical Programming in Tcl & Tk, Brent B. Welch. Prentice-Hall, Engle-
wood Cliffs, NJ, USA, 1997. ISBN: 0-13-616830-2.
12. Ef fective Tcl/Tk Programming: Writing Better Programs in Tcl and Tk, Mark
Harrison and Michael J. McLennan. Addison Wesley, Reading, MA, USA, 1997.
ISBN: 0-201-63474-0.
13. The New Kornshell Command and Programming Language, Morris I. Bolsky
and David G. Korn, Prentice-Hall, Englewood Cliffs, NJ, USA, 1995. ISBN:
0-13-182700-6.
The definitive work on the Korn shell, by its author.
14. Hands-On KornShell 93 Programming, Barry Rosenberg, Addison Wesley
Longman, Reading, MA, USA, 1998. ISBN: 0-201-31018-X.
15. Compilers — Principles, Techniques, and Tools, Alfr ed V. Aho and Ravi Sethi
and Jeffr ey D. Ullman, Addison Wesley Longman, Reading, MA, USA, 1986.
ISBN: 0-201-10088-6.
This is the famous “dragon book” on compiler construction. It provides much
of the theory behind the operation of lex and yacc .
Bibliography
18 October 2001 14:39
571
10. Tcl and the Tk Toolkit, John K. Ousterhout. Addison Wesley, Reading, MA,
USA, 1994. ISBN: 0-201-63337-X.TCP/IP Networking
The books by Comer are well-written; they are the standard descriptions of the
TCP/IP protocols. The books by Stevens are also very highly regarded.
1. Inter networking with TCP/IP: Principles, Protocols, and Architectur e, Third
Edition, Douglas E. Comer, Prentice-Hall, Englewood Cliffs, NJ, USA, 1995.
ISBN: 0-13-216987-8.
2. Inter networking With TCP/IP: Design, Implementation, and Internals, Third
Edition, Douglas E. Comer and David L. Stevens, Prentice-Hall, Englewood
Clif fs, NJ, USA, 1998. ISBN: 0-13-973843-6.
3. Inter networking With TCP/IP: Client-Server Programming and Applications:
BSD Socket Version, Second Edition, Douglas E. Comer and David L. Stevens,
Pr entice-Hall, Englewood Cliffs, NJ, USA, 1996. ISBN: 0-13-260969-X.
4. Inter networking With TCP/IP: Client-Server Programming and Applications:
AT&T TLI Version, Douglas E. Comer and David L. Stevens, Prentice-Hall,
Englewood Cliffs, NJ, USA, 1993. ISBN: 0-13-474230-3.
5. TCP/IP Illustrated, Volume 1: The Protocols, W. Richard Stevens, Addison Wes-
ley Longman, Reading, MA, USA, 1994. ISBN: 0-201-63346-9.
6. TCP/IP Illustrated, Volume 2: The Implementation, W. Richard Stevens and
Gary R. Wright, Addison Wesley Longman, Reading, MA, USA, 1995. ISBN:
0-201-63354-X.
7. TCP/IP Illustrated, Volume 3: TCP for Transactions, HTTP, NNTP, and the Unix
Domain Protocols, W. Richard Stevens, Addison Wesley Longman, Reading,
MA, USA, 1996. ISBN: 0-201-63495-3.
8. Unix Network Programming, Volume 1: Networking APIs: Sockets and XTI, W.
Richard Stevens, Prentice-Hall, Englewood Cliffs, NJ, USA, 1997. ISBN:
0-13-490012-X.
9. Unix Network Programming, Volume 2: Interprocess Communications, W.
Richard Stevens, Prentice-Hall, Englewood Cliffs, NJ, USA, 1998. ISBN:
0-13-081081-9.
This volume and the previous one are revisions of the first edition that was
the standard book on Unix network programming for many years.
10. Unix System V Network Programming, Steven A. Rago, Addison Wesley Long-
man, Reading, MA, USA, 1993. ISBN: 0-201-56318-5.
Typesetting
1. Document Formatting and Typesetting on the Unix System, Second Edition,
Narain Gehani, Silicon Press, Summit, NJ, USA, 1987. ISBN: 0-13-938325-5.
2. Typesetting Tables on the Unix System, Henry McGilton and Mary McNabb,
Trilithon Press, Los Altos, CA, USA, 1990. ISBN: 0-9626289-0-5.
572
18 October 2001 14:39
BibliographyThis book tells you everything you might ever want to know, and then some,
about using tbl to format tables.
Emacs
1. GNU Emacs Manual, for Version 20.1, Thirteenth Edition, The Free Software
Foundation, Cambridge, MA, USA, 1998. ISBN: 1882114 06X.
2. GNU Emacs Lisp Reference Manual, for Emacs Version 20, Edition 2.4, The
Fr ee Softwar e Foundation, Cambridge, MA, USA, 1998. ISBN: 1882114 728.
3. Writing GNU Emacs Extensions, Bob Glickstein, O’Reilly & Associates,
Sebastopol, CA, USA, 1997. ISBN: 1-56592-261-1.
See also the refer ence to Lear ning GNU Emacs in the O’Reilly section.
Standards
Ther e ar e a number of “official” standards for the behavior of portable applications
among Unix and Unix-like systems. The first two entries are the standards them-
selves, the next one is a guide for using the first standard. The final two entries are
the formal standards for the C and C++ programming languages.
1.
This edition incorporates extensions for real-time applications (1003.1b-1993,
1003.1i-1995) and threads (1003.1c-1995). Electr onic versions are available via
subscription, see http://www.standar ds.ieee.org.
This book describes the interface to the operating system as seen by the C or
C++ programmer.
2.
ISO/IEC Standard 9945-2: 1993 [IEEE/ANSI Std 1003.2-1992 & IEEE/ANSI
1003.2a-1992] Information Technology — Portable Operating System Interface
(POSIX) — Part 2: Shell and Utilities IEEE, 1996. ISBN: 1-55937-406-3.
Includes and shipped with 1003.2d-1994.
This standard is more relevant for readers of this book: it describes the oper-
ating system at the level of the shell and utilities.
3. Posix Programmer’s Guide: Writing Portable Unix Programs, Donald A.
Lewine. O’Reilly & Associates, Sebastopol, CA, USA, 1991. ISBN:
0-937175-73-0.
4. X3 Secr etariat: Standar d—The C Language. X3J11/90-013. ISO Standard ISO/
IEC 9899. Computer and Business Equipment Manufacturers Association.
Washington DC, USA, 1990.
Bibliography
18 October 2001 14:39
573
ISO/IEC Standard 9945-1: 1996 [IEEE/ANSI Std 1003.1, 1996 Edition] Informa-
tion Technology — Portable Operating System Interface (POSIX)—Part 1: Sys-
tem Application: Program Interface (API) [C Language]. IEEE, 1996. ISBN:
1-55937-573-6.5.
X3 Secr etariat: Inter national Standar d—The C++ Language. X3J16-14882.
Infor mation Technology Council (NSITC). Washington DC, USA, 1998.
O’Reilly Books
Her e is a list of O’Reilly & Associates books cited throughout this book. There are,
of course, many other O’Reilly books relating to Unix. See http://www.or eilly.com/
catalog.
1. Advanced Perl Programming, Sriram Srinivasan, O’Reilly & Associates,
Sebastopol, CA, USA, 1997. ISBN: 1-56592-220-4.
2. Applying RCS and SCCS. Don Bolinger and Tan Bronson, O’Reilly & Associ-
ates, Sebastopol, CA, USA, 1995. ISBN: 1-56592-117-8.
3. Checking C Programs with lint. Ian F. Darwin, O’Reilly & Associates,
Sebastopol, CA, USA, 1988. ISBN: 0-937175-30-7.
4. Lear ning GNU Emacs, Second Edition, Debra Cameron, Bill Rosenblatt, and
Eric Raymond, O’Reilly & Associates, Sebastopol, CA, USA, 1996. ISBN:
1-56592-152-6.
5. Lear ning Perl, Second Edition, Randal L. Schwartz and Tom Christiansen,
O’Reilly & Associates, Sebastopol, CA, USA, 1997. ISBN: 1-56592-284-0.
6. Lear ning the Korn Shell, Bill Rosenblatt, O’Reilly & Associates, Sebastopol, CA,
USA, 1993. ISBN: 1-56592-054-6.
7. Lear ning the Unix Operating System, Fourth Edition, Jerry Peek, Grace Todino,
and John Strang, O’Reilly & Associates, Sebastopol, CA, USA, 1997. ISBN:
1-56592-390-1.
8. Lear ning the vi Editor, Sixth Edition, Linda Lamb and Arnold Robbins, O’Reilly
& Associates, Sebastopol, CA, USA, 1998. ISBN: 1-56592-426-6.
9. lex & yacc, Second Edition, John Levine, Tony Mason, and Doug Brown,
O’Reilly & Associates, Sebastopol, CA, USA, 1992. ISBN: 1-56592-000-7.
10. Managing Projects with make, Second Edition, Andrew Oram and Steve Tal-
bott, O’Reilly & Associates, Sebastopol, CA, USA, 1991. ISBN: 0-937175-90-0.
11. Mastering Regular Expressions, Jef frey E. F. Friedl, O’Reilly & Associates,
Sebastopol, CA, USA, 1997. ISBN: 1-56592-257-3.
12. PGP: Pretty Good Privacy, Simson Garfinkel, O’Reilly & Associates,
Sebastopol, CA, USA, 1994. ISBN: 1-56592-098-8.
13. Pr ogramming Perl, Second Edition, Larry Wall, Tom Christiansen, and Randal
L. Schwartz, O’Reilly & Associates, Sebastopol, CA, USA, 1996. ISBN:
1-56592-149-6.
14. sed & awk, Second Edition, Dale Dougherty and Arnold Robbins, O’Reilly &
Associates, Sebastopol, CA, USA, 1997. ISBN: 1-56592-225-5.
574
18 October 2001 14:39
Bibliography15. ter mcap & ter minfo. Third Edition, John Strang, Linda Mui, and Tim O’Reilly,
O’Reilly & Associates, Sebastopol, CA, USA, 1988. ISBN: 0-937175-22-6.
16. Using csh & tcsh, Paul DuBois, O’Reilly & Associates, Sebastopol, CA, USA,
1995. ISBN: 1-56592-132-1.
Bibliography
18 October 2001 14:39
57518 October 2001 14:39Index
Symbols
! ̃ string inequality::z-bang@tilde,
271
ˆ (car et)::@car et
ˆ= assignment operator::z-
car et@equal, 221, 270, 366
exclusive OR operator, 221, 271
exponentiation operator, 367
metacharacter, 297-298
: (colon)::@colon
csh command, 277
sed command, 353
sh and ksh command, 226
, (comma) operator::@comma, 221
$ (dollar sign)::@dollar
built-in shell variables, 216
field refer ence operator, 367
metacharacter, 297
. (dot) metacharacter::@dot, 297
= (equal sign)::@equal
assignment operator, 221, 270, 366
ex command, 348
sed command, 353
= = equality operator::z-
equal@equal, 221, 271, 367
= ̃ string equality::z-equal@tilde,
271
# (hash mark)::@hash
#! command::z-hash@bang, 226,
277
& (ampersand)::@ampersand
&& AND operator::z-amper-
sand@ampersand, 212, 221,
263, 271, 366
&= assignment operator::z-amper-
sand@equal, 221, 270
AND operator, 221, 271
backgr ound commands, 211, 263
ex command, 348
metacharacter, 299
* (asterisk)::@asterisk
** exponentiation operator::z-aster-
isk@asterisk, 367
*= assignment operator::z-aster-
isk@equal, 221, 270, 366
filename metacharacter, 209, 261
metacharacter, 297
multiplication operator, 220, 271,
367
! (bang)::@bang
!= inequality operator::z-
bang@equal, 221, 271, 367
ex command, 347
filename metacharacter, 209
negation in sed, 351
negation operator, 220, 271
! ̃ regular expression nonmatch::z-
bang@tilde, 367
577
18 October 2001 15:53# (hash mark)::@hash (continued)
for comments::comments, 226, 277,
353
- (hyphen)::@hyphen
-= assignment operator::z-
hyphen@equal, 221, 270, 366
subtraction operator, 220, 271, 367
- - auto-decr ement operator::z-
hyphen@hyphen, 220, 270,
367
< (left angle bracket)::@left
<& (file descriptor)::z-left@amper-
sand, 213
<< bitwise shift opera-
tor::z=left@left, 221, 271
<< redir ection operator::z-left@left,
212, 264
<<= assignment operator::z-
left@left@equal, 221
<= less than or equal opera-
tor::z=left@equal, 221, 271,
367
<> redir ection operator::z-
left@right, 213
ex command, 348
less than operator, 221, 271, 367
redir ection operator, 212, 264
% (percent)::@percent
%= assignment operator::z-per-
cent@equal, 221, 270, 366
metacharacter, 299
modulus operator, 220, 271, 367
. (period) metacharacter::@period, 297
+ (plus sign)::@plus
++ auto-increment operator::z-
plus@plus, 220, 270, 367
+= assignment operator::z-
plus@equal, 221, 270, 366
addition operator, 220, 271, 367
filename metacharacter, 209
? (question mark)::@question
?: inline conditional evaluation::z-
question@colon, 221, 366
filename metacharacter, 209, 261
’ (quotation marks)::@quotation3
quoting in csh, 262
quoting in sh and ksh, 211
> (right angle bracket)::@right
578
18 October 2001 15:53
Index
>! redir ection operator::z-
right@bang, 264
>& (file descriptor)::z-right@amper-
sand, 213
>= greater than or equal opera-
tor::z=right@equal, 221, 271,
367
>> bitwise shift opera-
tor::z=right@right, 221, 271
>> redir ection operator::z-
right@right, 212, 264
>>! redir ection operator::z-
right@right@bang, 264
>>= assignment operator::z-
right@right@equal, 221
ex command, 348
gr eater than operator, 221, 271, 367
redir ection operator, 212, 264
>| redir ection operator::z-
right@vertical, 247
; (semicolon) for command
sequences::@semicolon, 211,
263
/ (slash)::@slash
/= assignment operator::z-
slash@equal, 221, 270, 366
division operator, 220, 271, 367
 ̃ (tilde)::@tilde
binary inversion operator, 271
ex command, 348
filename metacharacter, 209, 261
metacharacter, 299
negation operator, 220
regular expression match operator,
367
| (vertical bar)::@vertical
|= assignment operator::z-verti-
cal@equal, 221, 270
OR operator, 221, 271
redir ecting command output, 211,
263
|| OR operator::z-vertical@vertical,
212, 221, 263, 271, 366
#! command::shebang command, 226,
277
@ (at sign)::@at
csh command, 291
filename metacharacter, 209A
a command (sed)::a, 353
abbr ev command (ex), 339
abbr eviations commands (emacs), 307
aborted programs, clearing terminal
settings, 145
access modes, changing, 28
active processes, reports on, 142
addbib command, 482
addr esses for ex commands, 338
addr esses for sed commands, 351
admin command (SCCS), 491, 495
alias command (csh), 277
alias command (ksh), 228
aliases
email, displaying addresses for, 552
for commands::commands, 228,
257, 277
alignment/positioning
emacs centering commands, 309
emacs indentation commands,
309-310
nr off/tr off requests for, 390
of graphics, pic prepr ocessor
for::graphics, 477
alnum character class, 210
alpha character class, 210
append command (ex), 339
appending to files, 12, 23
applets, Java, 12
appletviewer command, 12
apr opos command, 12
ar command, 12
archives, 12
copying, 34
disassembling, 53
dumping parts of, 60
Java archives, 85
loading of, 551
pax (Portable Archive Exchange),
134
removing information from, 157
reorganizing, 559
tar (Tape Archive), 166
zip command for, 196
args command (ex), 339
argv shell variable, 267
arithmetic expressions
csh shell, 270-272
ksh shell, 220-221
arithmetic operators (csh), 271
arrays
assigning in awk, 367
Kor n shell, 219
as command, 13
ASCII character set, 537-541, 551
assembly language processing
as command, 13
cc command, 24
assignment operators (csh), 270
at command, 14
atan2 function (awk), 370
atq command, 16
atr m command, 16
autoload command, 229
awk programming language, 16,
361-378
built-in variables, 366
command-line syntax, 363
commands (by category), 369-378
commands (by name), 370
implementation limits, 369
operators, 366
patter ns and procedur es, 363
user-defined functions, 368
variable and array assignment, 367
(see also nawk programming lan-
guage)
B
b command (sed)::b, 354
backgr ound pr ocesses, 191
banner command, 17
basename command, 17
(see also dirname command)
batch command, 18
batch execution
at specified date/time::specified
date/time, 14, 37
immediate, 18
printing queued jobs, 16
removing queued jobs, 16
bc command, 18
bdif f command, 21
bfs command, 544
Index
18 October 2001 15:53
579bg command, 229, 278
bibliographic refer ences, pr eprocess-
ing, 481-485
bif f command, 22
/bin directory::bin directory, 11
bitwise operators (csh), 271
blank character class, 210
block size (characters), 46
Bour ne shell (see sh)
branching commands (sed), 352
br eak command (awk), 370
br eak command (csh), 278
br eak command (sh, ksh), 229
br eaksw command, 278
BSD Compatibility Package, 3
BSD-derived system, 9
buf fers (emacs) commands for, 307
builtin command, 229
built-in shell variables
csh shell, 267
sh and ksh shells, 216
built-in variables, awk, 366
bundling commands, 193
bundling software packages, 4
C
C and C++ languages
call-graph profile data, 78
compilers, 5
compiling source files, 24
debugging, 41
detecting bugs and errors, 104
extracting messages from, 195
extracting strings for localization,
65
for matting files in, 24
symbol cross refer ences, 42
c command (sed)::c, 354
C- commands (emacs), 311-313
C shell (see csh)
cal command, 22
calculator commands
bc command, 18
dc command, 46
calendar command, 22
calendars, 22
call-graph profile data, 78
calling out (cu command), 545
cancel command, 23
580
18 October 2001 15:53
Index
canceling commands (emacs), 306
capitalization (see case)
case
converting, 46
emacs commands for, 307
case command (csh), 279
case command (sh, ksh), 230
cat command, 23
cb command, 24
cc command, 24
cd command, 25, 231, 279
cdc command (SCCS), 496
CDE (Common Desktop Environ-
ment), 26
CDPATH shell variable, 218
cdpath shell variable, 267
CD-ROM, ejecting, 59
centering (see alignment/positioning),
309
cflow command, 27
change command (ex), 339
changing directory, 25
character classes, 209, 298
character sets, converting, 83
characters, 46
ASCII character set, 537-541
buf fer block size, 46
converting DOS to ISO, 53
converting ISO to DOS, 182
counting in files, 191
Gr eek (eqn prepr ocessor), 470
mathematical (eqn prepr ocessor),
470
nr off/tr off requests for, 390
(see also text)
chdir command, 279
check pseudo-command (sccs), 504
checkeq command, 27
checking in files, 491, 497, 507, 513
checking out files, 498, 507, 515
checknr command, 27
checksum
cksum command, 31
checksum, calculating, 31, 558
chgrp command, 28
chkey command, 28
(see also keylogin command; key-
logout command)
chmod command, 28chown command, 30
ci command (RCS), 507, 513
cksum command, 31
class files (Java), disassembling, 93
classes, character, 209, 298
classifying files by data type, 69
CLASSPATH envir onment variable, 93
clean pseudo-command (sccs), 504
clear command, 31
clearing terminal display, 31
clock modes, setting, 163
close function (awk), 370
cmp command, 31
cntrl character class, 210
co command (RCS), 507, 515
cof2elf command, 544
COFF files, converting to ELF, 544
col command, 32
columns
merging file lines into, 131
selecting from files, 42
COLUMNS shell variable, 218
comb command (SCCS), 497
combination modes, setting, 162
combining files, 23
comm command, 32
command history
csh shell, 272-275
ksh shell, 222
command interpreters (see shells)
command mode (vi), 322
command substitution (csh), 273
command-line options::command line
options, xv
commands
aliases for, 228, 257, 277
all Unix commands (list), 12-200
awk programming language,
369-378
bundling, 193
csh shell, 263, 277-291
descriptions of, displaying, 192
emacs commands, list of, 304-320
executing
after logout, 128
wait between, 151
with multiple systems::multiple
systems, 563
list of basic, 6-9
lower priority, executing, 125
nr off/tr off requests, 387-391
obsolete, 542-565
sed editor, 350-360
sh and ksh shells, 211, 225-259
SVR4 vs. BSD, 9
vi editor, 323-329
comments
csh shell, 277
in files, modifying::files, modifying,
120
sh and ksh shells, 226
Common Desktop Environment
(CDE), 26
compacting files (see compressing
files)
comparing
dir ectory contents, 52
files, 21, 31-32, 50-51
document drafts, 52
comparison operators (csh), 271
compiler error messages, 61
compiling
C source files, 24
Java code, 86
RMI compiler, 147
regular expressions, 145
compr ess command, 33
compr essing files, 555
compr ession, 33, 80-81, 182
configuration variables, system, 77
continue command (awk), 370
continue command (csh), 279
continue command (sh, ksh), 232
contr ol assignments, setting, 161
contr ol modes, setting, 158
Contr ol-key commands (emacs),
311-313
conversation between users, 165, 565
converting
character sets, 83
characters
case, 46
DOS to ISO, 53
ISO to DOS, 182
spaces to tabs, 180
tabs to spaces, 62
COFF and ELF files, 544
files
into tables::tables, 196
Index
18 October 2001 15:53
581converting,
files (continued)
string_files into msg_files, 122
to Unicode::unicode, 124
tr off to PostScript, 55
number units, 181
copr ocesses (Kor n shell), 214
copy command (ex), 340
copying
archives, 34
files, 34, 46
remotely, 75, 144
with remote systems::remote
systems, 559
lines from standard input, 564
standard input, 169, 173
cor e images, creating, 75
cos function (awk), 370
cp command, 34
cpio command, 34
CRCs (cyclic redundancy checks), 31
cr eate pseudo-command (sccs), 504
cr eating dir ectories, 121
cr ontab command, 37
cr oss refer ences, 37, 42
crypt algorithm, 543
crypt command, 545
cscope command, 37
csh (C shell), 39, 203, 260-291
built-in commands, list of, 277-291
command history, 272, 274
command substitution, 273
command syntax, 263
envir onment variables, 269
expr essions, 270-272
featur es of, 204-206
filename metacharacters, 261
invoking shell, 276
job control, 275-276
pr edefined shell variables, 267
quoting, 262
redir ection syntax, 263
variables, 264-270
word substitution, 273
.cshrc file::cshrc file, 261, 268
(see also shell variables)
csplit command, 39
ctags command, 40
ctrace commands, 41
cu command, 545
582
18 October 2001 15:53
Index
curr ent date/time, 43
curr ent system name, 179
cursor-movement commands (emacs),
305
customizing login session, 202
cut command, 42
(see also join command; newform
command; paste command)
cwd shell variable, 267
cxr ef command, 42
cyclic redundancy checks (CRCs), 31
D
d command (sed)::d, 354
D command (sed)::D@, 354
data classification of files, 69
data keywords, SCCS, 493
data transmission, verifying, 31, 558
date command, 43
date/time
batch execution at specific, 14, 37
calendars, 22
curr ent, 43
specifying with RCS, 511
specifying with SCCS, 502
system usage information, 171
dc command, 46
dd command, 46
debugging
C programs, 41, 104
Java code, 94
default command, 279
deledit pseudo-command (sccs), 505
delete command (awk), 370
delete command (ex), 340
deleting
clearing terminal display, 31
dir ectories, 146
emacs commands for, 305
files from archives, 12
nr off/tr off request and macros, 48
delget pseudo-command (sccs), 505
delta command (SCCS), 491, 497
der off command, 48
description file lines (make), 527
Development System Support
(Solaris), 4
df command, 49diacritical marks (eqn), 471
dif f command, 50
SCCS utility and, 492
dif f3 command, 51
dif fmk command, 52
dif fs pseudo-command (sccs), 505
digit character class, 210
digital signatures, Java archives, 91
dircmp command, 52
dir ectories
changing (moving between), 25
comparing contents, 52
cr eating, 121
deleting, 146
moving, 123
navigating, 231, 279
news, accessing, 553
printing names of, 53, 144
renaming, 123
dir name command, 53
dirs command, 279
dis command, 53
disassembling object files, 53
disassmbling Java class files, 93
discipline functions (ksh93), 220
disk space, reporting on, 49
disks
copying archive files, 34
ejecting, 59
for matting, 67
usage information, 56
disown command, 232
displaying
calendars, 22
escape sequences, 32
files, by page, 122, 555
logged-in users, 192
manpages, 119, 192
reverse linefeeds, 32
system status information, 192
ditr off program, 381
(see also trof f pr ogram)
do command (awk), 371
do command (sh, ksh), 232
documentation for Java language, 89
documents, comparing, 52
done command, 232
dos2unix command, 53
download command, 54
dpost command, 55
du command, 56
dumps, octal, 128
E
echo command, 56, 232, 279
echo shell variable, 267
ed text editor, 57
edit command (ex), 340
edit pseudo-command (sccs), 505
edit text editor, 58
editing
bfs command, 544
files, restrictions on, 556
sed commands for, 352
EDITOR shell variable, 218
editors
str eam, 150
text, 189
egr ep command, 58
patter n-matching metacharacters,
296
eject command, 59
ELF files, converting to COFF, 544
elfdump command, 60
emacs editor, 302-320
commands (by category), 304
commands (by keystrokes), 311
commands (by name), 315
patter n-matching metacharacters,
296
email
displaying addresses for aliases,
552
mail notification, 22
reading and sending, 116
email messages
automatic replies to, 185, 563
encoding binary files for, 185
new, notifying user of, 553
reading and sending, 117
encoded files, recr eating original file,
185
encrypting files, 545
end command, 279
End User System Support (Solaris), 4
endif command, 280
end-of-file character (EOF), xv
endsw command, 280
Index
18 October 2001 15:53
583enter pseudo-command (sccs), 505
Entir e Distribution (Solaris), 5
env command, 60
ENV environment variable, 209
ENV shell variable, 218
envir onment, displaying, 60
envir onment variables, 269
modifying values, 60
printing values of, 141
EOF (end-of-file character), xv
eqn prepr ocessor (nr off/tr off), 27,
469-473
equations, formatting in nrof f/trof f,
469-473
erasing (see deleting)
err or command, 61
err or messages
compiler, 61
for matting, 548
esac command, 233
escape sequences, displaying, 32
/etc directory::etc directory
/etc/passwd file, 203, 209, 261
/etc/pr ofile file, 209
(see also shell variables)
eval command (csh), 280
eval command (sh, ksh), 233
evaluating expressions, 63
ex editor, 61, 337-348
command syntax, 337
commands, list of, 339
patter n-matching metacharacters,
296
search-and-r eplace examples, 300
exec command (csh), 280
exec command (sh, ksh), 234
executable files, shared objects for,
102
executing commands
after logout, 128
of lower priority::lower priority,
125
wait between, 151
EXINIT environment variable, 270
exit command (awk), 371
exit command (csh), 280
exit command (ksh, sh), 234
exit status, 171
commands, 174
exp function (awk), 371
584
18 October 2001 15:53
Index
expand command, 62
expanding files, 559
(see also pack command; pcat
command)
export command, 234
expr command, 63
expr essions, C shell, 270-272
expr essions, evaluating, 63
exstr command, 65
extracting columns/fields from files, 42
F
face command, 547
factor command, 67
false command, 67, 235
fc command, 222, 235-236
FCEDIT shell variable, 218
fdfor mat command, 67
fflush function (gawk), 371
fg command (csh), 281
fg command (sh, ksh), 236
fgr ep command, 68
fi command, 236
FIGNORE shell variable, 218
fignor e shell variable, 267
file command, 69
file command (ex), 340
file creation mode mask, 179
file descriptors, 213
file inquiry operators (csh), 271
filec shell variable, 267
filenames
metacharacters for, 209, 261, 295
stripping from pathnames, 53
files
access and modification times,
updating, 172
archives (see archives)
binary, converting for email, 185
br eaking lines of, 549
calculating checksum for, 31, 558
checking in, 491, 497, 507, 513
checking out, 491, 498, 507, 515
classifying by data type, 69
combining into module, 98-102
comments in, modifying, 120
comparing, 21, 31-32, 50-51, 149
document drafts, 52files (continued)
compiling, 24, 196
compr ession, 33, 80-81, 182, 555
converting
character sets in, 83
DOS to ISO, 53
into tables::tables, 196
ISO to DOS, 182
string_files into msg_files, 122
copying, 34, 46
fr om tape::tape, 166
remotely, 75, 144
with remote systems::remote
systems, 559
counting words/characters/lines of,
191
deleting, 146
disassembling, 53
displaying
by page::page, 122, 555
pr ofile data for, 142
dumping parts of, 60
editing (see text editors)
bfs command, 544
restrictions on, 556
emacs commands for handling, 304
encoded, recr eating original file,
185
encrypting and decrypting (vi), 189
expanding, 559
extracting columns/fields, 42
for matting, 24, 140, 552
for matting lines in, 74
inserting compiler error messages,
61
joining similar lines of, 95
listing
for current directory, 114
related pairs of, 551
shar ed objects for, 102
those to be executed, 192
merging lines into columns, 131
moving, 123
numbering lines in, 125
on multiple systems, commands
for::multiple systems, 563
ownership of, 28, 30
packed, displaying, 555
paging, 122, 555
patching, 132
per missions, 28
PostScript (see PostScript files)
printing
appending to, 23
initial lines of, 83
last lines of, 164
pseudonyms (links) for, 105
recovering after crash, 189
removing information from, 157
renaming, 123
restoring from tape, 166
revision control (see revision con-
tr ol)
searching contents, 58, 68, 79
by line beginnings::line begin-
nings, 109
by pattern matching::patter n
matching, 16
for newline/null sequence::new-
line/null sequence, 156
message files, 155
searching for, 70-74
sending to printer, 109-111
size of, 151
sorting, 559
lines in, 152
removing duplicate lines, 181
source, sending, 563
splitting into multiple files
based on context, 39
based on size, 155
stripping trof f/nrof f codes, 48
symbol tables for, printing, 127
uncompr essing, 180, 196
write-pr otected, deleting, 146
filesystem-r elated parameters, 77
find command, 70-74
finger command, 74
fix pseudo-command (sccs), 505
floppy disks (see disks)
flowcharting function calls, 27
fmli command, 548
FMLI (Form and Message Language
Interpr eter), 548
fmt command, 74
fmtmsg command, 548
fold command, 549
fonts
loading to PostScript files, 54
Index
18 October 2001 15:53
585fonts (continued)
nr off/tr off requests for, 390
for command (awk), 371
for command (ksh93), 237
for command (sh, ksh), 236
for each command, 281
For m and Message Language Inter-
pr eter, 548
for matting disks and memory cards,
67
for matting err or messages, 548
for matting files, 140, 552
FPATH shell variable, 218
Framed Access Command Environ-
ment, 547
fr ee disk space, reporting, 49
ftp command, 75
FTP (File Transfer Protocol), 75
function command (awk), 372
function command (ksh), 237
functions
flowcharting, 27
listing names, 40
functions command, 237
G
g command (sed)::g, 355
G command (sed)::G@, 355
gawk programming language, 363
(see also awk programming lan-
guage)
gcor e command, 75
gencat command, 76
generating filenames, 17
genmsg command, 76
gensub function (gawk), 372
get command (SCCS), 491, 498
getconf command, 77, 238
getline command (awk), 372
getopts command, 238
gettext command, 78
gettxt command, 78
glob command, 281
global command (ex), 340
goto command, 282
gpr of command, 78
graph character class, 210
586
18 October 2001 15:53
Index
graphics
for matting in nrof f/trof f, 473-481
Gr eek characters (eqn prepr ocessor),
470
gr ep command, 79
patter n-matching metacharacters,
296
gr oups
displaying user membership, 80
file ownership for, 28
listing IDs for, 84
logging in to, 553
gr oups command, 80
gsub function (awk), 372
gunzip command, 80
gzcat command, 80
gzip command, 81
H
h command (sed)::h, 355
H command (sed)::H@, 356
hardpaths shell variable, 267
hardwar e flow control modes
setting, 163
hash command (ksh), 239
hash command (sh), 238
hashstat command, 282
head command, 83
headers
Java code, 90
help
emacs commands for, 310
manpage keyword lookup, 12
online manual (see manpages)
help command (SCCS), 500
hist command, 239
histchars shell variable, 268
HISTCMD shell variable, 217
HISTEDIT shell variable, 218
HISTFILE shell variable, 218
history command, 272
history, command
csh shell, 272-275
ksh shell, 222
history command (csh), 282
history command (ksh), 240
.history file::history file, 261
history shell variable, 268HISTSIZE shell variable, 218
HOME environment variable, 269
HOME shell variable, 218
home shell variable, 268
horizontal alignment (see alignment/
positioning)
horizontal spacing (see whitespace)
host machine, 83
hostid command, 83
hostname command, 83
(see also uuname command)
hyphenation
nr off/tr off requests for, 390
I
i command (sed)::i, 356
iconv command, 83
id command, 84
ident command (RCS), 516
identification keywords, SCCS, 493
if command (awk), 372
if command (csh), 282
if command (sh, ksh), 240
IFS shell variable, 218
ignor eeof shell variable, 268
images, formatting in nrof f/trof f,
473-481
indentation, emacs commands for,
309-310
index function (awk), 373
indxbib command, 483
info pseudo-command (sccs), 505
InfoZIP format, 196
inodes, reporting on, 49
input modes, setting, 159
insert command (ex), 341
insert mode (vi), 322
installation levels (Solaris), 4
int function (awk), 373
integer command, 240
interactive conversation, 165, 565
interactive use of shells, 202
inter nationalization, 65, 78
Inter net dir ectory, searching, 564
interpr ocess communication facilities,
84
invoking the shell, 224-225, 276
I/O processing commands (sed), 352
ipcr m command, 84
ipcs command, 84
ismpx command, 550
(see also layers command)
J
jar command, 85
java command, 86
java_g command, 88
Java language
applets, running, 12
compiling code, 86
debugging, 94
digital signatures for Java files, 91
disassembling class files, 93
documentation, 89
Java Runtime Environment, 96
RMI compiler, 147
javac command, 88
javadoc command, 89
javah command, 90
javakey command, 91
javald command, 93
javap command, 93
jdb command, 94
job control
for csh shell::csh shell, 275-276
for sh and ksh shells::sh and ksh
shells, 223-224
in shell scripts::shell scripts, 97
jobs command (csh), 283
jobs command (sh, ksh), 240
join command, 95
join command (ex), 341
jr e command, 96
jsh, 223
jsh command, 97
jter m command, 550
(see also layers command)
jwin command, 550
K
k command (ex), 341
keylogin command, 97
(see also chkey command; key-
logout command)
keylogout command, 98
Index
18 October 2001 15:53
587keylogout command (continued)
(see also chkey command; key-
login command)
keywords
RCS utility, 508
SCCS utility, 493
kill command, 98, 241, 283
Kor n shell (ksh), 203
ksh (Korn shell), 203, 207-259
arithmetic expressions, 220-221
arrays, 219
built-in commands, list of, 225-259
command history, 222
command syntax, 211
copr ocesses, 214
discipline functions, 220
featur es of, 204-206
filename metacharacters, 209
invoking shell, 224-225
job control, 223-224
pr edefined shell variables, 216
quoting, 210
redir ection syntax, 212
setting restrictions on, 145, 225
variables, 214-220
L
l command (sed)::l, 356
LANG shell variable, 218
Latin-1 character set
converting files to, 124
layers
in windowing terminals, reset-
ting::windowing, 550
multiple, controlling from one ter-
minal, 557
layers command, 550
LC_ALL shell variable, 218
LC_COLLATE shell variable, 218
LC_CTYPE shell variable, 218
LC_MESSAGES variable::LC MES-
SAGES, 78
LC_NUMERIC shell variable, 218
ld command, 98-102
ldd command, 102
Lempel-Ziv (L Z 7 7) coding, 81
length function (awk), 373
let command, 242
lex command, 103
588
18 October 2001 15:53
Index
(see also yacc command)
lexical analysis programs, generating,
103
limit command, 284
line breaks, nrof f/trof f requests and,
386
line command, 103
line information commands (sed), 352
line numbers
nr off/tr off requests for, 391
line-edit mode, 222
LINENO shell variable, 217
line-oriented text editor, 58
lines
br eaking, 549
counting in files, 191
numbering in files, 125
reading from standard input, 103
lines (files), formatting, 74
LINES shell variable, 218
links
cr eating for files, 105
editors, 98-102
lint command, 104
list command (ex), 341
listing files
for current directory, 114
in archives::archives, 12
to be executed::executed, 192
listing users, 105
listusers command, 105
ln command, 105
loading fonts to PostScript files, 54
local modes, setting, 160
locale
definitions, reaching, 106
getting information on, 106
locale command, 106
localedef command, 106
localization of strings, 65, 78
log function (awk), 373
logged-in users
displaying list, 185
report on, 557
logger command, 107
logging
messages, 107
logging in
as another user, 164logging in (continued)
changing to current window, 556
displaying name, 109
to groups::gr oups, 553
logical operators (csh), 271
login command, 108, 285
.login file::login file, 261
(see also shell variables)
login sessions (see sessions)
customizing, 202
logname command, 109
LOGNAME environment variable, 270
logout command, 285
.logout file::logout file, 261
look command, 109
lookbib command, 483
lorder command, 551
lower character class, 210
lowercase (see case)
lp command, 109-111
lpq command, 111
lpr command, 111
lpr m command, 111
lpr of command, 112
(see also gprof command; prof
command)
lpstat command, 113
lptest command, 551
ls command, 114
L Z 7 7 coding::LZ77 coding, 81
M
M- commands (emacs), 314
m4 processor, 115
machine faults
tracing, 153, 174
macr o commands (emacs), 309
macr o names, listing, 40
macr os
eqn prepr ocessor, 470
for make utility::make utility,
528-534
man macros, 458-464
me macros, 443-457
mm macros, 413-433
ms macros, 434-442
pic prepr ocessors, 474
pr ocessing, nr off/tr off requests for,
391
tbl prepr ocessor, 466
mail (see email; email messages)
mail command, 116
MAIL environment variable, 270
mail notification, 22
mail shell variable, 268
MAIL shell variable, 218
mailalias command, 552
MAILCHECK shell variable, 218
MAILPATH shell variable, 218
mailx command, 117
make command, 118
make utility, 525-534
command-line syntax, 526
description file lines, 527
macr os, 528
special target names, 529
writing Makefile files, 529
Makefile files, writing, 529
makefiles
overriding, 118
man command, 119
man macros, 458-464
inter nal names, 463
pr edefined strings, 462
manpages
displaying, 119
displaying command descriptions
in, 192
keyword lookup, 12
MANPATH envir onment variable, 119
map command (ex), 341
margins, nrof f/trof f requests for, 391
mark command (ex), 342
match function (awk), 373
mathematical functions (ksh93), 221
mathematics
characters for (eqn prepr ocessor),
470
equations, formatting in nrof f/trof f,
469-473
mcs command, 120
me macros, 443-457
number registers, 455
pr edefined strings, 454
measur ements for nrof f/trof f, 385
merge command (RCS), 517
Index
18 October 2001 15:53
589mesg command, 121
messages
appending and merging, 76
extracting, 76
retrieving, 78
searching message contents, 155
messages, error, 548
metacharacters
for filenames::filenames
csh shell, 261
sh and ksh shells, 209
for pattern matching::patter n
matching, 295-299
Meta-key commands (emacs), 314
mkdir command, 121
mkmsgs command, 122
mm macros, 413-433
number registers, 429
pr edefined string names, 429
reserved macro and string names,
432
modes
clock, setting, 163
combination, setting, 162
hardwar e flow control, 163
input, 158-159
local, 160
output, 160
telnet, 170
mon.out file, 25
mor e command, 122
move command (ex), 342
moving
dir ectories and files, 123
files in archives, 12
ms macros, 434-442
number registers, 440-441
reserved macro and string names,
440
msgfmt command, 123
multiple redir ection, 213, 264
multiplexor (layers), testing standard
input for, 550
mv command, 123
590
18 October 2001 15:53
Index
N
n command (sed)::n, 356
N command (sed)::N@, 357
namer ef command, 242
names
dir ectories, printing, 53
files (see filenames)
functions and macros, listing, 40
paths (see pathnames)
native2ascii command, 124
nawk programming language, 124,
363
(see also awk programming lan-
guage)
newfor m command, 552
(see also cut command; paste com-
mand)
newgrp command, 242, 553
news command, 553
news directory, accessing, 553
next command (awk), 373
next command (ex), 342
nextfile command (gawk), 373
nice command, 125, 285
nl command, 125
nm command, 127
nobeep shell variable, 268
noclobber shell variable, 268
noglob shell variable, 268
nohup command, 128, 242, 286
nonomatch shell variable, 268
notification, mail, 22
notify command, 286, 553
notify shell variable, 268
nr off for matting language
checking mismatched delimiters, 27
removing all requests/macr os, 48
nr off program, 381-391
command-line invocation, 382
conceptual overview, 383
eliminating .so requests, 151
eqn processor, 469-473
escape sequences, 405
pic processor, 473-481
pr edefined registers, 407
pr eprocessors of, 465-485
refer processor, 481-485
requests (by group), 390nr off program (continued)
requests (by name), 392
requests, list of, 387-391
special characters, 408
tbl processor, 466-469
null commands, 174
number command (ex), 342
number registers
in man macros::man macros, 463
in me macros::me macros, 455
in mm macros::mm macros,
429-432
in ms macros::ms macros, 440-441
in nrof f/trof f::nrof f/trof f, 391
numbering lines in files, 125
numbers
prime factors, 67
numbers, converting units of, 181
O
oawk programming language (see
awk programming language)
object files (see archives; files)
generating, 13
removing information from, 157
obsolete commands, 542-565
octal dumps, producing, 128
od command, 128
OLDPWD shell variable, 217
onintr command, 286
online manual (see manpages)
open command (ex), 342
openwin command, 554
operators, awk, 366
operators, C shell, 270
OPTARG shell variable, 217
OPTIND shell variable, 217
output modes, setting, 160
output processing commands (sed),
352
ownership, file
changing, 28
ownership of files, 30
P
p command (sed)::p, 357
P command (sed)::P@, 357
pack command, 555
packed files, displaying, 555
page command, 130
(see also more command)
PAGER environment variable, 119
pagination, nrof f/trof f requests for, 391
paging files, 122, 555
paragraphs, emacs commands for, 306
passwd command, 130
passwd file, 209, 261
passwords
changing, 28, 130
cr eating, 130
displaying information, 130
for files::files, 545
pr ompting for, 97
paste command, 131
patch command, 132
PA TH envir onment variable, 269
PA TH shell variable, 218
pathchk command, 133
pathname modifiers, 266
pathnames
checking for acceptability, 133
searching for files, 70-74
stripping filenames from, 53
patter n matching, 295-301
patter ns, awk, 363
pax command, 134
pcat command, 555
PCMCIA memory cards, formatting, 67
perl command, 137
per missions, file
changing, 28
pg command, 555
pic prepr ocessor (nr off/tr off), 473-481
.plan file::plan file, 74
.po files::po files, 123
popd command, 286
Portable Archive Exchange (PAX), 134
portable object files, 123
positioning (see alignment/position-
ing)
POSIX 1003.2 standards, 10, 573
Index
18 October 2001 15:53
591PostScript files
adding fonts to, 54
cr eating fr om tr off, 55
PPID shell variable, 217
pr command, 140
pr edefined shell variables
csh shell, 267
sh and ksh shells, 216
pr eprocessors for nrof f/trof f system,
465-485
pr eserve command (ex), 343
prime factors, 67
primitives, pic prepr ocessor, 475
print character class, 210
print command, 243
print command (awk), 373
print command (ex), 343
print pseudo-command (sccs), 505
printenv command, 141
printers, testing, 551
printf command, 141, 243
printf command (awk), 374
printing
banners, 17
cancelling print requests, 23
curr ent system name, 179
envir onment variable values, 141
file contents (see files, printing)
file creation mode mask, 179
files, 23, 109-111
fr om archives::archives, 12
lines specified, 164
log files
of copied files, 561
queue
displaying, 111
removing requests from, 111
status of, 113
sending files, 111
strings, 141
system configuration variables, 77
system names known to uucp, 561
system usage information, 185
ter minal capability, 172
ter minal device name, 178
to standard output::standard out-
put, 56
pr ocedures, awk, 364
592
18 October 2001 15:53
Index
pr ocesses
contr olling (see job control)
cor e images of, 75
ter minating IDs, 98
pr of command, 142
pr ofile data, displaying, 78
for files, 142
for programs generally, 112
.pr ofile file::pr ofile, 209
(see also shell variables)
pr ograms
displaying profile data for, 112
getting description of, 178
lexical analysis
generating, 103
.pr oject file::pr oject file, 74
PROJECTDIR environment variable,
505
pr ompt shell variable, 268
prs command (SCCS), 500
data keywords for, 493
prt command (SCCS), 501
ps command, 142
PS files (see PostScript files)
PS# shell variables, 219
pseudo-commands, SCCS, 503-505
pushd command, 287
put command (ex), 343
putting and yanking commands (sed),
352
pwd command, 144, 244
PWD shell variable, 217, 270
Q
q command (sed)::q, 358
queued jobs, obtaining reports on, 562
quit command (ex), 343
quoting
csh shell, 262
sh and ksh shells, 210
R
r command (ksh), 244
r command (sed)::r, 358
rand function (awk), 375
RANDOM shell variable, 217
rcp command, 144
rcs command (RCS), 518RCS subdirectory, 507
RCS utility, 506-524
commands (by category), 506-507
commands (by name), 513-524
keyword substitution, 508
keywords, list of, 509
options and environment variables,
511
revision numbering, 510
revision states, 511
SCCS command equivalents, 512
timestamp specifications, 511
rcsclean command (RCS), 520
rcsdif f command (RCS), 508, 521
rcsfr eeze command (RCS), 522
RCSINIT environment variable, 511
rcsmerge command (RCS), 522
read command (ex), 343
read command (ksh), 244
read command (sh), 244
reading email messages, 117
readonly command, 245
recording session, 149
recover command (ex), 344
red editor, 556
(see also ed editor)
redir ect command, 245
redir ections
csh forms for, 263
sh and ksh forms for, 212
refer command, 483
refer processor (nrof f/trof f), 481-485
refer encing arrays, 219
regcmp command, 145
regions, emacs commands for, 306
regular expressions
compiling, 145
for sed command addresses::sed
command addresses, 351
lexical analysis program, 103
searching file contents, 58, 68
searching files for, 79
rehash command, 287
relogin command, 556
remote communications (calling out),
545
remote file transfer, 75
remote host, connecting to, 145
remote object registry, 148
remote shell (see rsh)
remote systems
copying files between, 75, 144, 559
removable media
checking if inserted, 190
ejecting, 59
removing (see deleting)
remsh command (see rsh)
renaming
dir ectories and files, 123
repeat command, 287
replacing files in archives, 12
replacing text, metacharacters for, 300
REPLY shell variable, 217
reports
on active processes::active pro-
cesses, 142
on system status::system status, 562
requests, nrof f/trof f, 387-391
reset command, 145
(see also tset command)
restricted shells, 148, 225
retur n command, 246
retur n command (awk), 375
reverse linefeeds, displaying, 32
revision control
RCS utility, 506-524
commands (by category),
506-507
commands (by name), 513-524
keyword substitution, 508
keywords, list of, 509
options and environment vari-
ables, 511
revision numbering, 510
SCCS utility, 489-505, 512
commands (by category), 490
commands (by name), 495-503
data keywords, 493
identification keywords, 493
pseudo-commands, 503-505
revision numbering, 491
revision numbers (RCS), 510
revision numbers (SCCS), 491
rewind command (ex), 344
rksh command, 145, 225
rlog command (RCS), 523
rlogin command, 145
rm command, 146
rmdel command (SCCS), 502
Index
18 October 2001 15:53
593rmdir command, 146
(see also mkdir command)
RMI (remote method invocation)
compiler, 147
rmic command, 147
rmir egistry command, 148
roffbib command, 484
rsh (remote shell), 148, 203, 225
(see also sh command)
ruptime command, 556
rwho command, 557
(see also who command)
S
s command (sed)::s, 358
sact command (SCCS), 502
savehist shell variable, 268
SCCS utility, 489-505
commands (by category), 490
commands (by name), 495-503
data keywords, 493
envir onment variables, 505
identification keywords, 493
pseudo-commands, 503-505
RCS command equivalents, 512
revision numbering, 491
timestamp specifications, 502
sccsdif f command (SCCS), 502
script command, 149
scripts, shell (see shell scripts)
sdif f command, 149
searching
by pattern matching::patter n
matching, 16
file contents, 58, 68, 79
by line beginnings::line begin-
nings, 109
for newline/null sequence::new-
line/null sequence, 156
message files, 155
for files::files, 70-74
Inter net dir ectory, 564
patter n matching, 295-301
search-and-r eplace, 300
SECONDS shell variable, 217
secr et keys
decrypting, 97
deleting, 98
594
18 October 2001 15:53
Index
secur e network services
decrypting secret keys in, 97
deleting secret keys in, 98
secur e shell, 156
security
digital signatures for Java files, 91
sed editor, 150, 349-360
command syntax, 350-360
command-line syntax, 350
commands (by category), 352
commands (by name), 353
patter n-matching metacharacters,
296
search-and-r eplace examples, 300
select command, 246
semaphor e sets, removing, 84
sending email messages, 117
service grades, listing, 560
sessions (see login sessions)
recording, 149
:set command (vi)::set command (vi),
332-336
set command (csh), 288
set command (ex), 344
set command (sh, ksh), 246
setenv command, 288
sh (Bourne shell), 202, 207-259
built-in commands, list of, 225-259
command syntax, 211
featur es of, 204-206
filename metacharacters, 209
invoking shell, 224-225
job control, 223-224
pr edefined shell variables, 216
quoting, 210
redir ection syntax, 212
setting restrictions on, 148, 225
variables, 214-220
sh command, 150
SHACCT shell variable, 219
shar ed memory identifiers, removing,
84
shell characters (emacs), 308
shell command (ex), 344
SHELL environment variable, 270
shell layers, 557
shell scripts, 202
for background processes::back-
gr ound pr ocesses, 191shell scripts (continued)
job control via, 97
reading from terminal, 103
running, 551
SHELL shell variable, 219
shell variables
csh shell, 267
sh and ksh shells, 216-219
shells
invoking, 224-225, 276
multiple
contr olling fr om one terminal,
557
overview of, 201-206
restricted, 225
types (flavors) of, 202
shift command (csh), 288
shift command (sh, ksh), 248
shl command, 557
signals, tracing, 153, 174
signing on to system, 108
sin function (awk), 375
size
buf fer block size, 46
file compression (see compression)
size command, 151
sleep command, 151, 249
.so requests, eliminating in nrof f or
tr off files::so requests, 151
soelim command, 151
softwar e bundling, 4
Solaris 7, 3
installation levels, 4
SCCS with, 505
sort command, 152
(see also comm command; join
command; uniq command)
sortbib command, 485
sorting files, 559
joining lines of sorted files, 95
removing duplicate lines, 181
sotruss command, 153
source command, 289
source command (ex), 344
source files, sending, 563
space (see whitespace)
spacing (see whitespace)
spell command, 154
split command, 155
split function (awk), 375
splitting files, 39
sprintf command (awk), 375
sqrt function (awk), 375
srand function (awk), 376
srchtxt command, 155
standard input (see STDIN)
standard output, printing to, 56
state, revision (RCS), 511
status shell variable, 268
STDIN (standard input)
copying, 169, 173
STDOUT, printing to, 56
stop command (csh), 289
stop command (ksh93), 249
stop command (sh, ksh), 249
str eam editors, 150
str ftime function (gawk), 376
strings
localizing, 65, 78
printing, 141
pr ocessing, nr off/tr off requests for,
391
strings command, 156
strip command, 157
stty command, 157-164
su command, 164
sub function (awk), 376
substitute command (ex), 344
substr function (awk), 376
sum command, 558
SunOS 5.7 operating system, 4
suspend command (csh), 289
suspend command (sh, ksh), 249
SVR4 (System V Release 4), 3
switch command, 289
symbol cross refer ences, 37, 42
symbol tables, printing, 127
syntax on command line, xv
system
configuration variables, printing, 77
system calls, tracing, 153, 174
system dictionary, adding to, 154
system function (awk), 376
system name, current, 179
system usage information, 171, 190
logged-in users, 556
printing, 185
System V Release 4 (SVR4), 3
system variables, awk, 366
Index
18 October 2001 15:53
595systime function (gawk), 376
T
t command (ex), 345
t command (sed)::t, 359
tab characters
converting spaces to, 180
expanding to spaces, 62
tab stops, setting, 558
tables
converting files into, 196
symbol tables, printing, 127
tables, formatting in nrof f/trof f,
466-469
tabs command, 558
tabs, nrof f/trof f requests for, 391
tag command (ex), 345
tail command, 164
talk command, 165
tape files, copying/restoring, 34, 166
tar command, 166
targets, updating, 118
tbl prepr ocessor (nr off/tr off), 466-469
tee command, 169
tell pseudo-command (sccs), 505
telnet command, 170
telnet modes, 170
TERM environment variable, 269
TERM shell variable, 219
ter m shell variable, 268
ter minals
capability of, 172
clearing displays, 31
clearing settings, 145
device name, printing, 178
resetting window layers, 550
setting modes, 177
setting options, 157-164
testing, 551
ter minating pr ocess IDs, 98
ter mination status for background pro-
cesses, 191
test command, 171, 249
text, 46
ASCII character set, 537-541
converting spaces into tabs, 180
expanding tabs into spaces, 62
line formatting, 74
patter n matching, 295-301
596
18 October 2001 15:53
Index
searching for (see searching)
(see also characters)
text editors
ed, 57
edit, 58
emacs (see emacs editor)
ex, 61
patter n-matching metacharacters
for, 296
recovering files after crash, 189
scr een-oriented, 189
vedit editor, 187
vi editor (see vi)
text formatting
man macros, 458-464
inter nal names, 463
pr efedined strings, 462
me macros, 443-457
number registers, 455
pr efedined strings, 454
mm macros, 413-433
number registers, 429
pr edefined string names, 429
reserved macro and string
names, 432
ms macros, 434-442
number registers, 440-441
reserved macro and string
names, 440
nr off and trof f pr ograms, 381-391
command-line invocation, 382
conceptual overview, 383
default request operation, 387
eqn processor, 469-473
escape sequences, 405
pic processor, 473-481
pr edefined registers, 407
refer processor, 481-485
requests (by group), 390
requests (by name), 392
special characters, 408
tbl processor, 466-469
nr off/tr off prepr ocessors, 187,
465-485
TEXTDOMAIN environment variable,
78
TEXTDOMAINDIR environment vari-
able, 78
time command, 171, 252, 290time shell variable, 268
times command (ksh93), 253
times command (sh, ksh), 253
timestamps, RCS, 511
timestamps, SCCS, 502
timex command, 171
TMOUT shell variable, 219
tolower function (awk), 377
touch command, 172
toupper function (awk), 377
tput command, 172
tr command, 173
tracing signals, 153, 174
translating strings (see localization of
strings)
transposition commands (emacs), 306
trap command, 253
tr off for matting language
checking mismatched delimiters, 27
converting to PostScript, 55
removing all requests/macr os, 48
tr off program, 381-391
command-line invocation, 382
conceptual overview, 383
eliminating .so requests, 151
eqn processor, 469-473
escape sequences, 405
for matting source code for, 187
pic processor, 473-481
pr edefined registers, 407
pr eprocessors of, 465-485
refer processor, 481-485
requests (by group), 390
requests (by name), 392
requests, list of, 387-391
special characters, 408
tbl processor, 466-469
true command, 174, 254
truss command, 174
tset command, 177
tsort command, 559
tty command, 178
type command, 178, 254
typeset command, 254
U
ulimit command, 256
umask command, 179, 257, 290
(see also chmod command)
unabbr eviate command (ex), 345
unalias command (csh), 290
unalias command (ksh), 257
uname command, 179
uncompr ess command, 180
uncompr essing files, 180, 196
undo command (ex), 345
undoing, emacs commands for, 306
unedit pseudo-command (sccs), 505
unexpand command, 180
unget command (SCCS), 502
unhash command, 290
Unicode character set
converting files to, 124
uniq command, 181
units command, 181
units of measurements (nrof f/trof f),
385
Unix
bundling software packages, 4
shells (see shells)
versions of, 3
Unix commands (list), 12-200
unix2dos command, 182
unlimit command, 290
unmap command (ex), 346
unpack command, 559
(see also pack command; pcat
command)
unset command (csh), 290
unset (ksh), 257
unset (sh), 257
unsetenv command, 290
until command, 258
unzip command, 182
upper character class, 210
uppercase (see case)
uptime command, 185
usage information, 171, 190
usage information (disks), 56
USER environment variable, 270
user shell variable, 268
users
displaying data about, 74
Index
18 October 2001 15:53
597users (continued)
displaying group membership, 80
IDs
displaying, 84
infor mation on those logged in,
190
listing, 105
logged-in
displaying list, 185, 192
displaying system usage, 556
report on, 557
per missions
changing, 121
user names, printing, 193
users command, 185
/usr directory::usr directory
/usr/ccs/bin directory, 11
/usr/dt/bin directory, 11
/usr/java/bin directory, 11
/usr/openwin/bin directory, 11
/usr/ucb directory, 11
/usr/ucb directory::usr ucb direc-
tory, 9
uucp command, 559
(see also uustat command)
uucp requests
cancelling, 562
obtaining information on, 562
uudecode command, 185
uuencode command, 185
uuglist command, 560
uulog command, 561
(see also tail command)
uuname command, 561
(see also uucp command)
uupick command, 561
(see also uuto command)
uustat command, 562
(see also uucp command)
uuto command, 563
(see also uupick command)
uux command, 563
V
v command (ex), 346
vacation command, 185, 563
val command (SCCS), 502
variable modifiers, C shell, 266
variable substitution, 215, 265
598
18 October 2001 15:53
Index
variables
awk built-in variables, 366
csh shell, 264-270
sh and ksh shells, 214-220
system configuration, printing, 77
vc command (obsolete), 564
vedit editor, 187
verbose shell variable, 268
version command (ex), 346
versions of Unix, 3
vertical alignment (see alignment/posi-
tioning)
vertical spacing (see whitespace)
vgrind command, 187
vi editor, 189, 321-336
accessing multiple files, 328
commands (by keystroke), 329
edit commands, 326
ex commands in, 337
interacting with Unix, 328
macr os, 329
movement commands, 324
patter n-matching metacharacters,
296
saving and exiting, 327
:set command::set command,
332-336
setting up, 332
(see also ex editor)
view command (see vi editor)
visual command (ex), 346
VISUAL shell variable, 219
volcheck command, 190
W
w command, 190
w command (sed)::w, 360
wait command, 191, 258, 291
wc command, 191
what command (SCCS), 503
whatis command, 192
whence command, 258
which command, 192
while command (awk), 377
while command (csh), 291
while command (sh, ksh), 258
whitespace
converting spaces into tabs, 180whitespace (continued)
expanding tabs into spaces, 62
nr off/tr off requests for, 391
whitespace character class, 210
whitespace, nrof f/trof f requests for,
391
who command, 192
whoami command, 193
(see also logname command)
whois command, 564
wildcards
filename metacharacters
csh shell, 261
sh and ksh shells, 209
windows
asynchr onous
managing, 550
default
setting size, 189
emacs, commands for, 308
size
printing, 550
setting, 164
testing standard input for, 550
word abbreviations (emacs), 307
word substitution (csh), 273
wordlist files, 154
words, counting in files, 191
wq command (ex), 347
write command, 565
write command (ex), 346
writing to standard output, 56
X
x command (sed)::x, 360
xargs command, 193
xdigit character class, 210
xgettext command, 195
xit command (ex), 347
XPG4 standards, 10
Y
y command (sed)::y, 360
yacc command, 196
yank command (ex), 347
yanking and putting commands (sed),
352
Z
z command (ex), 347
zcat command, 196
zip command, 196
zipinfo command, 200
$Author$ keyword (RCS)::Author, 509
$Date$ keyword (RCS)::Date, 509
$Header$ keyword (RCS)::Header, 509
$Locker$ keyword (RCS)::Locker, 509
$Log$ keyword (RCS)::Log, 509
$Name$ keyword (RCS)::Name, 509
$RCS$ keyword (RCS)::RCS, 509
$Revision$ keyword (RCS)::Revision,
509
$Source$ keyword (RCS)::Source, 509
$State$ keyword (RCS)::State, 509
‘ (quotation marks)::@quotation4
command substitution, 211, 263
quoting in csh, 262
quoting in sh and ksh, 211
\ (backslash)::@backslash
filename metacharacter, 209
metacharacter, 298
quoting in csh, 262
quoting in sh and ksh, 211
command command::command com-
mand, 231
shell shell variable::shell shell vari-
able, 268
" (quotation marks)::@quotation2, 210,
262
( ) (par entheses) for grouping com-
mands::@par entheses, 211,
263
[ ] (brackets)::@brackets
filename metacharacter, 209, 261
metacharacters, 298
[[ ]] command (ksh)::z-
bracket@bracket, 227
{ } (braces)::@braces
filename metacharacter, 261
gr oups of commands, 211
metacharacter, 298
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditatio
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by gi
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself.
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But befo
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five tim
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start 
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggest
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minut
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"Design and Analysis of Algorithm
(CSE 305)
Chapter 3- Greedy Algorithm
By Simon H.
simonhadush@gmail.comContents
 Introduction
 Optimization Problem
 Greedy Algorithms
 Fraction Knapsack problem
 Huffman code
 Job Sequencing With Deadlines
2Introduction
 A given problem can be solved using various different algorithm design techniques or
strategies and some techniques deliver much more efficient solutions than others.
 So, different problems require different kinds of techniques to provide efficient and
optimized solution.
 Selecting a proper design technique for algorithms is a complex but important task.
3Introduction Cont ...
 Some commonly used algorithm design techniques/strategy are:
 Divide and conquer
 Greedy algorithms
 Dynamic programming
 Backtracking Algorithms
 Branch and Bound Algorithms
 Randomized algorithms
 Some of the techniques will cover in this course and in this chapter we will discuses about
Greedy Algorithms.
4Optimization Problem
 Optimization problem: a problem of finding the best solution from all feasible solutions.
 General characteristics of an optimization problem:
 Ingredients:
 Instances: The possible inputs to the problem.
 Solutions for Instance: Each instance has large set of valid solutions.
 Cost of Solution: Each solution has an easy-to-compute cost or value.
 Specification:
 Preconditions: The input is one instance.
 Postconditions: A valid solution with optimal cost (minimum or maximum)
 The two commonly techniques used for optimization problem are:
 Greedy Algorithms
 Dynamic Programming
 All those optimization techniques are using different approaches to solve the problem.
5Optimization Problem cont...
 Greedy Algorithms :
 Make a choice at each step and make the choice before solving the subproblems.
 Most of time solve problems in top-down strategy
 Efficient (took less time) ,but not reliable always
 Every solvable problem can’t be solved by greedy algorithm.
 Local optimization
 Dynamic programming:
 Make a choice at each step and choice depends on knowing optimal solutions to subproblems and solve subproblems
first.
 Most of time solve problems in bottom-up strategy
 More reliable, but always took more or equal time as compared to greedy algorithm
 Took more space because of Memorization
 Dynamic programming is applicable to problems exhibiting the properties of overlapping subproblems and optimal
substructure.
 Every solvable problem can be solved by Dynamic algorithm.
 Global optimization
 Example: If u and v are two vertices in a graph G, problem-1 "determine whether there is a path between u and v in G" .
This is not an optimization problem, b/c only have one solution . Problem-2 “find the/a shortest path between u and v in
graph G" is an optimization problem, b/c may have many paths between u and v.Greedy Algorithms
 Let us start our discussion with simple theory that will give us an understanding of the
Greedy technique. In the game of Chess, every time we make a decision about a move,
we have to also think about the future consequences.Whereas, in the game of Tennis
(orVolleyball), our action is based on the immediate situation. This means that in some
cases making a decision that looks right at that moment gives the best solution
(Greedy),but in other cases it doesn’t. The Greedy technique is best suited for looking
at the immediate situation .
 Greedy algorithm is an algorithm strategy or technique used for optimization problem.
 Greedy algorithms try to find a localized optimum solution at each step in hope of
getting a globally optimal solution at the end. However, usually greedy algorithms do
not provide globally optimized solutions. But sometimes it may provide depending on
the problem.
7Greedy Algorithms Cont..
 Elements of Greedy Algorithms : there are two basic properties of optimal greedy
algorithms :
1. Greedy-choice property:
This property says that the global optimal solution can be obtained by making a locally optimal solution
(greedy). The choice made by a greedy algorithm may depend on earlier choices, but not on future
choices or all the solutions to the sub-problem. It iteratively makes one greedy choice after another and
reduces the given problem to a smaller one.
2. Optimal substructure:
A problem exhibits optimal substructure if an optimal solution to the problem contains optimal
solutions to the subproblems. That means we can solve subproblems and build up the solutions to solve
larger problems.
 The local optimal choice will also be global, but usually, it fails.
8Greedy Algorithms Cont..
 Greedy Strategy : Greedy algorithms work in stages. In each stage/step, a decision is made that is
good at that point, without bothering about the future. This means that some local best is chosen. It
assumes that a local good selection makes for a global optimal solution.
 A greedy algorithm has :
 A set of candidate solutions
 Function that checks if the candidates are feasible solution
 Selection function indicating at a given time which is the most promising candidate not yet used
 Objective function giving the value of a solution; this is the function we are trying to optimize.
 Feasible solution is a solution which satisfying constraints.
 Optimal solution is a solution achieving the objective of satisfying the minimum or maximum result to
the problem.
 To select optimal solution from feasible solutions, there must be predefined objective function that
needs to be optimized (either maximized or minimized) at a given point. A Greedy algorithm makes
greedy choices at each step to ensure that the objective function is optimized. The Greedy algorithm has
9 only one shot to compute the optimal solution so that it never goes back and reverses theGreedy Algorithms Cont...
 The general method of Greedy algorithms :
solution =0
Greedy Algorithm(x, n)
{
for i =1 to n do
{
y= select(x)
if feasible(y) then
{
solution= solution +y;
}
}
}
10
Where x is any input values to the greedy and n is the
number of the values.
e.g n= 5
x x1
x2
x3
x4
x5Greedy Algorithms Cont..
 Advantages and Disadvantages of Greedy Method :
 The main advantage of the Greedy method is that it is straight forward, easy to
understand ,fast and easy to code. In Greedy algorithms, once we make a decision, we
do not have to spend time revising the already computed values. Its main disadvantage
is that for many problems there is no greedy algorithm. That means, in many cases
there is no guarantee that making locally optimal improvements in a locally optimal
solution gives the optimal global solution .
11Greedy Algorithms Cont..
 Examples of Greedy Algorithms
 Fractional Knapsack Problem
 Data compression
 Huffman coding
 Scheduling
 Activity Selection
 Minimizing time in system
 Deadline scheduling
 Graph Algorithms
 Breath First Search (shortest path 4 un-weighted graph)
 Dijkstra’s (shortest path) Algorithm
 Minimum Spanning Trees
 Other Heuristics
 Coloring a graph
 Traveling Salesman
12
 Set-covering giving the value of a solution; this is the function we are trying to optimizeGreedy Algorithms Cont..
 Example one: Suppose a person want to travel from one location A to other location B and
must be reach within 12 hrs. The total time which will take by bicycle , car, train and airplane
are 36 hrs, 1 month , 16 hrs , 10 hrs and 2 hrs respectively. The cost for the traveling on-foot,
bicycle , car, train and airplane are 0, 50, 100, 200 and 1000 respectively. So, by which one is
more optimized to travel from location A to B.
A
On foot, s1
bicycle, s2
Airplane, s5
Train, s4
Car,s3
Solution :
 Given constraint : <=12 hrs
 Feasible solution = s4 and s5 are <=12 hrs
13
B
Optimal solution = s4, travel by train is
affordable , because .
s4= p4/t4=200/10=20 (cheap)
s2= p5/t5=1000/2=500 (expensive )Knapsack problem
 Knapsack Problem: is a given a set of items, each with a weight and a value, determine a subset of items to include
in a collection so that the total weight is less than or equal to a given limit weight and the total value is as large as possible.
 The knapsack problem is in combinatorial optimization problem. It appears as a subproblem in many, more complex
mathematical models of real-world problems.
 Based on the nature of the items, Knapsack problems are categorized into two :
 Fractional Knapsack problem : can takes parts (break items ), as well as wholes for maximizing the total value of
knapsack. This problem can be solved using greedy algorithm
 0/1 Knapsack problem : not allowed to break items. Can only take the whole item or don’t take it. This problem
can not solved by greedy algorithm, it can solved by Dynamic Programming (DP) and we will see on DP chapter.
14Knapsack problem
 Fractional Knapsack problem: Fractional knapsack problem is solved using greedy method in the
following steps :
 Step-01: For each item, compute its value / weight ratio.
 Step-02: Arrange all the items in decreasing order of their value/weight ratio which calculated in
step -01.
 Step-03: Start putting the items into the knapsack beginning from the item with the highest ratio.
 Put as many items as you can into the knapsack.
 Time Complexity : The main time taking step is the sorting of all items in decreasing order
of their value / weight ratio.
 If the items are already arranged in the required order, then while loop takes O(n) time.
 The average time complexity of Quick Sort is O(nlogn).
 Therefore, total time taken including the sort is O(nlogn).
15Fractional Knapsack problem cont..
 Example:
 For the given set of items and knapsack capacity = 60 kg, find the optimal solution for the fractional
knapsack problem making use of greedy approach. Or
 A thief enters a house for robbing it. He can carry a maximal weight of 60 kg into his bag. There are 5 items
in the house with the following weights and values. What items should thief take if he can even take the
fraction of any item with him?
 Given the weight and value as the following table :
16Fractional Knapsack problem cont..
 Solution of the above fractional knapsack problem.
 Step-01: Compute the value / weight ratio for each item .
ratio = vi/wi , where i is each item, and wi and vi is weight and value of the item i.
Step 02: Sort all the items in decreasing order of their value/weight ratio calculate in step 01.
17
Item1 Item2 Item5 Item4
(6) (3.6) (3.5)
(4)
Item3
(3)Fractional Knapsack problem cont..
 Step-03: Start filling the knapsack by putting the items into it one by one.
 Now,
 Knapsack weight left to be filled is 20 kg but item-4 has a weight of 22 kg.
 Since in fractional knapsack problem, even the fraction of any item can be taken.
 So, knapsack will contain the following items-
< I1 , I2 , I5 , (20/22) I4 >
 Total cost of the knapsack = 160 + (20/22) x 77 = 160 + 70

18
= 230 unitsHuffman Coding Problem
 Huffman Coding:
 Huffman Coding is a famous Greedy Algorithm.
 It is used for the lossless data compression.
 It uses variable length encoding.
 It assigns variable length code to all the characters.
 The code length of a character depends on how frequently it occurs in the given text.
 The character which occurs most frequently gets the smallest code.
 The character which occurs least frequently gets the largest code.
 It is also known as Huffman Encoding.
 Prefix Rule:
 Huffman Coding implements a rule known as a prefix rule.
 This is to prevent the ambiguities while decoding.
 It ensures that the code assigned to any character is not a prefix of the code assigned to any other character.
19Huffman Coding Problem Cont ...
 There are two major phases in Huffman Coding:
I. Building a Huffman Tree from the input characters.
II. Assigning code to the characters by traversing the Huffman Tree.
 Huffman Tree:
 The steps involved in the construction of Huffman Tree are as follows :-
 Step-01:
 Create a leaf node for each character of the text.
 Leaf node of a character contains the occurring frequency of that character.
 Step-02:
 Arrange all the nodes in increasing order of their frequency value.
20Huffman Coding Problem Cont ...
 Step-03:
 Considering the first two nodes having minimum frequency,
 Create a new internal node.
 The frequency of this new node is the sum of frequency of those two nodes.
 Make the first node as a left child and the other node as a right child of the newly created node.
 Step-04:
 Keep repeating Step-02 and Step-03 until all the nodes form a single tree.
 The tree finally obtained is the desired Huffman Tree.
 Important formula :
 The following 2 formulas are important to solve the problems based on Huffman Coding:
 Formula-01:
21Huffman Coding Problem Cont ...
 Formula-02:
 Total number of bits in Huffman encoded message = Total number of characters in the message x
Average code length per character
=∑ ( frequency i ) x Average code length per character
 Example_01 of Huffman Coding : A file contains the following characters with the frequencies as
shown. If Huffman Coding is used for data compression, determine.
22
I. Huffman Code for each character
II. Average code length
III. Length of Huffman encoded message (in bits)Huffman Coding Problem Cont ...
Solution :
Phase I : First let us construct the Huffman Tree. Huffman Tree is constructed in the following steps.
Step 01 :
10 15 12
a e i
Step 02 :
Step 03 :
23
3 4 13 1
o u s tHuffman Coding Problem Cont ...
Step 04 :
Step 05:
24Step 06 :
25Step 07 :
26Step 08 :
27Huffman Coding Problem Cont ...
 Phase II :
 We assign weight to all the edges of the constructed Huffman Tree.
 Let us assign weight ‘0’ to the left edges and weight ‘1’ to the right edges.
 Rule
 If you assign weight ‘0’ to the left edges, then assign weight ‘1’ to the right edges.
 If you assign weight ‘1’ to the left edges, then assign weight ‘0’ to the right edges.
 Any of the above two conventions may be followed.
 But follow the same convention at the time of decoding that is adopted at the time of encoding.
28 After assigning weight to all the edges, the modified Huffman Tree is-
29 Now, let us answer each part of the given problem one by one :
1. Huffman Code For Characters-
 To write Huffman Code for any character, traverse the Huffman Tree from root node to the leaf
node of that character.
 Following this rule, the Huffman Code for each character is-
a = 111
 e = 10
 i = 00
 o = 11001
 u = 1101
 s = 01
 t = 11000

 From here, we can observe-
 Characters occurring less frequently in the text are assigned the larger code.
 Characters occurring more frequently in the text are assigned the smaller code.
302. Average Code Length
 Using formula-01, we have-
 Average code length = ∑ ( frequency i x code length i ) / ∑ ( frequency i )
= { (10 x 3) + (15 x 2) + (12 x 2) + (3 x 5) + (4 x 4) + (13 x 2) + (1 x 5)
} / (10 + 15 + 12 + 3 + 4 + 13 + 1)
= 2.52
3. Length of Huffman Encoded Message
 Using formula-02, we have-
 Total number of bits in Huffman encoded message = Total number of characters in the message x
Average code length per character
= 58 x 2.52
= 146.16
≅ 147 bits
31Exercise : from example-01 Huffman code, answered the following questions.
a. Decode this bit strings 10001101 to character string
1
e
i
u
10001101= eiu
a. Encode this sting “ see it out”
seeitout= 01101000110001100111000
32
go rightExample of Job Sequencing With Deadlines-
 The sequencing of jobs on a single processor with deadline constraints is called as Job
Sequencing with Deadlines. Here:





You are given a set of jobs.
Each job has a defined deadline and some profit associated with it.
The profit of a job is given only when that job is completed within its deadline.
Only one processor is available for processing all the jobs.
Processor takes one unit of time to complete a job.
 The problem states of Job sequencing with deadline is
“How can the total profit be maximized if only one job can be completed at a time?”
33Job Sequencing With Deadlines-
 The job sequencing problem can be solved using greedy algorithm to get the optimal solution.
 Below are described the steps to solve the problem.
 Step-01:
 Sort all the given jobs in decreasing order of their profit.
 Step-02:
 Check the value of maximum deadline.
 Draw a Gantt chart where maximum time on Gantt chart is the value of maximum deadline.
 Step-03:
 Pick up the jobs one by one.
 Put the job on Gantt chart as far as possible from 0 ensuring that the job gets completed before
its deadline.
34Job Sequencing With Deadlines Cont...
 Example : Given the jobs, their deadlines and associated profits as shown.
 Answer the following questions-
1.
2.
3.
35
Write the optimal schedule that gives maximum profit.
Are all the jobs completed in the optimal schedule?
What is the maximum earned profit?Job Sequencing With Deadlines Cont...
 Solution :
 Step-01: Sort all the given jobs in decreasing order of their profit.
 Step -02 :
 Value of maximum deadline = 5.
 So, draw a Gantt chart with maximum time on Gantt chart = 5 units as shown-
 Now,
 We take each job one by one in the order they appear in Step-01.
36
 We place the job on Gantt chart as far as possible from 0.Job Sequencing With Deadlines Cont...
 Step-03:
 We take job J4.
 Since its deadline is 2, so we place it in the first empty cell before deadline 2 as-
 Step 04 :
 We take job J1.
 Since its deadline is 5, so we place it in the first empty cell before deadline 5 as-
37Job Sequencing With Deadlines Cont...
 Step-05:
 We take job J3.
 Since its deadline is 3, so we place it in the first empty cell before deadline 3 as-
 Step 06 :
 We take job J2.
 Since its deadline is 3, so we place it in the first empty cell before deadline 3.
 Since the second and third cells are already filled, so we place job J2 in the first cell as-
38Job Sequencing With Deadlines Cont...
 Step-07:
 Now, we take job J5.
 Since its deadline is 4, so we place it in the first empty cell before deadline 4 as-
 Now,
 The only job left is job J6 whose deadline is 2.
 All the slots before deadline 2 are already occupied.
 Thus, job J6 can not be completed.
 Now, the given questions can be answered as the following:
39Job Sequencing With Deadlines Cont...
 Part-01:
 The optimal schedule is-
J2 , J4 , J3 , J5 , J1
 This is the required order in which the jobs must be completed in order to obtain the maximum profit.
Part-02:
 All the jobs are not completed in optimal schedule.
 This is because job J6 could not be completed within its deadline.
Part-03:
 Maximum earned profit = Sum of profit of all the jobs in optimal schedule
40
= Profit of job J2 + Profit of job J4 + Profit of job J3 + Profit of job J5 + Profit of job J1
= 180 + 300 + 190 + 120 + 200
= 990 units
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditatio
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by gi
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself.
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But befo
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five tim
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start 
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggest
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minut
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I praythe night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayes.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayre this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayn experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
or light, the seed will die, that is possible, but the seed did
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I praythe night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayes.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayre this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I prayn experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
or light, the seed will die, that is possible, but the seed did
more total the happening will be. After practicing it continually for a few days you will start to feel the results.
Don't be afraid if you don't feel results right away. If nothing happens quickly, there is no need to feel anxious. Even if
it takes many lives for someone who is thirsty to discover the
soul, it is not much time. It takes us years just to learn ordinary things. So by doing this experiment with total determination, patience and silence, the results are assured.
You will relax the body by giving suggestions to these five
chakras. Then, when I tell you to relax the breathing, let it
relax. And I will tell you that your breathing is becoming
silent.. .then make the suggestion. Finally I will tell you that
your thoughts are disappearing and the mind is becoming
empty.
This will be our meditation experiment. But before this
meditation, we will make these suggestions for two minutes,
and before making these suggestions for two minutes we will
make the resolution five times.
Now we will start the night meditation. Everybody has to
lie down for this meditation. It is only to be done lying
down. So make space for yourself. We will sit and make the
resolution, make the suggestions, and then lie down.
205T H E P A T H O F M E D I T A T I O N
truth: your birthright
Chapter 8My Beloved Ones,
OMEONE has asked: What is truth? Is it possible to know
it partially? And if not, then what can one do to attain it?
Because it is not possible for every person to be a sage.
First, each person has the potential to become a sage. It is
a different matter if someone does not transform this potential into a reality. It is a different matter if a seed is unable to
grow into a tree, but every seed has the intrinsic capacity for
becoming a tree. Every seed has this potential. That it does
not become one is an entirely different matter. If it does not
get fertilized, does not find any soil, does not get any water
or light, the seed will die, that is possible, but the seed did
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
have the potential.
Each and every person has the potential to become a sage.
That is why you should first of all drop this idea from your
mind that to become enlightened is the special privilege of
only some people. To become enlightened is not the right
of any special people. And the people who have spread this
idea are only doing it to feed their egos. If someone says that
it is very difficult to become enlightened and possible for
only very few people, it nourishes their ego. This is just a
way for some people to fulfill their ego. Otherwise, everyone
has the potential to be a sage, because there is space and
opportunity for everyone to experience truth.
208T R U T H : Y O U R B I R T H R I G H T
I said it is another thing if you don't experience it. For
that, only you will be responsible, your potential will not be
responsible. All of us sitting here have the power to get up
and walk, but if we don't walk and go on sitting, then what?
You discover your powers by making them active; you don't
know them until you use them.
Right now you are just sitting here, and no one can know
that you have the capacity to walk. And if you look inside
yourself, even you will not be able to locate this capacity to
walk. You will not be able to find it. You will only know
whether you have the capacity to walk after you try to walk.
And only after you go through the process of trying to become enlightened will you know if you have the potential or
not. Those who don't try will definitely feel that only some
people have this potential. This is wrong.
So the first thing: you have to understand that to attain to
truth is everyone's right, it is everyone's birthright. In this respect no one has any special rights.
And the second thing which has been asked is: "What is
truth? And is it possible to know it partially?"
Truth cannot be known partially, because truth is one. It
cannot be broken into parts. This means that it is not possible for a person to know a little bit of truth now, then a little
bit more, and then a little bit more. It does not happen like
this. Truth is experienced as one. This means that it is not a
gradual process. It is experienced totally, it is experienced in
an explosion. But if I say that it can only be known totally,
you will feel a little apprehensive because you feel so weak,
how can you possibly know it totally?
W h e n a man climbs up to the roof of the house he
reaches it all at once, yet he has climbed the steps to it one at
2 0 9T H E P A T H O F M E D I T A T I O N
a time. He does not reach the roof in one step. W h e n he is on
the first step he is not on the roof and when he is on the last
step he is still not on the roof; he begins to approach the roof,
but he is still not on it.
It is possible to move closer to the truth gradually, but
when you arrive at truth it is total. This means that you can
gradually move closer to truth, but the attainment of truth is
total, it is never in parts. It is never in fragments, remember
this.
So the introduction to meditation that I have given you
is a set of steps: you will not know truth through them,
but you will move closer to truth through them. And
at the last step which I have called 'emptiness of the emotions', when you j u m p beyond this emptiness of the
emotions too, you experience truth. But then truth is known
in its totality.
The experience of the divine does not come in fragments,
it happens as a whole. But the way to reach the divine is divided into many parts. Remember this: the way to reach the
divine is divided into parts, but truth itself is not in parts. So
don't think, "How can a person as weak as I am know the
whole truth? I can only manage to know it if it can be known
bit by bit."
No, you will also be able to know it because you only
need to walk on the path for a short distance at a time. It is
not possible to walk the whole length of the path all at once.
You cannot walk the whole length of a path at once; you
have to walk a little at a time. But the destination is always
reached as a whole, you never get there in parts - remember
this.
210T R U T H : Y O U R B I R T H R I G H T
Someone has asked: What is truth?
There is no way to say it in words. To this day, it has been
impossible to say it in human language - and it will never be
said in the future either. It is not that in the past we did not
have a language rich enough to say it, and that we will be
able to say it in the future. It will never be said.
There is a reason for this. Languages developed for the
purpose of communicating with other people. Language was
created in order to communicate with people, it was not created to express truth. And it is unlikely that any of the people
who created language had known truth. This is why there is
no word for the ultimate truth. And the people who knew
truth did not know it through language, they knew it
through silence. This means that when they experienced
truth they were totally silent, no word existed there. So there
is a problem: when they started talking about it after the experience, they found one point, truth, which there was no
way to describe. It is not possible to provide words for it.
And when they provided words, the words were incomplete,
they fell short.
And on the basis of these words alone, conflicts arose -
based on these very same words! Because all words are inadequate, they are unable to express truth. They are just like
hints. It is as if somebody is pointing his finger to the moon,
and if we grab his finger thinking that this is the moon, then
there will be trouble. The finger is not the moon. The finger
is just an indication. Whoever grabs hold of the indication
will be in trouble. You have to let go of the finger so that
the thing to which it is pointing becomes visible. You have
to drop the words, and only then will you have a glimpse
211T H E P A T H O F M E D I T A T I O N
of truth. But someone who grabs hold of the words will miss
the experience.
This is why there is no way for me to tell you what truth
is. And if somebody claims to be telling you, he is deceiving
himself. If somebody tells you this, he is deceiving himself
and you. There is no way to describe truth. Yes, there is a
way to tell you how to experience truth. The method to
know truth, the process, can be described, but what truth is
cannot be said.
There are methods to attain truth, but there are no definitions of truth. During these three days I have discussed these
methods, and you may feel that we have completely ignored
truth itself. I have talked about truth, but I have never said
what truth actually is.
No, it cannot be said, it can only be experienced. Truth
cannot be described but it can be experienced - and it will be
your experience. The method can be given, but the experience of truth will be your own. The experience of truth is always individual, and it is not possible to communicate it to
another.
So this is why I will not tell you what truth is. It is not because I want to withhold something from you, but because it
cannot be said. In ages past, during the time of the Upanishads, whenever it happened that someone would go to a
sage and ask, "What is truth?" the sage would look hard at
the person.
Again the person would ask, "What is truth?" Then he
would ask a third time, "What is truth?"
And the sage would say, "I tell you again and again, but
you don't understand."
The person would say, "What are you saying? I have asked
212T R U T H : Y O U R B I R T H R I G H T
you three times, and all three times you were silent. And you
say that you have told me again and again?"
Then the sage would say, "I wish you were able to understand my silence, because then you will have understood
what truth is."
Silence is the only way to say it. Those who have known
truth have become silent. W h e n truth is talked about, they
become silent. If you can be silent, you can know it. If you
are not silent you will not be able to know it.
You can know the truth, but you cannot make
another person know it. This is why I won't say what truth is
- because it cannot be said.
Someone has asked: Are a person's actions bound by the
result of the actions oj many lives, and if so, then what is
left in the hands of the individual in this life?
The question is: "If we are controlled by our actions in the
past and the values of our past lives, what can we do now?" It
has been rightly asked. If it is true that a person is absolutely
bound by his past actions, then what is in his own hands?
What can he do in the present? And if it is true that he is not
at all bound by his actions of the past, then what is the point
in doing anything? - because if he is not bound by his past
actions, he will not be bound tomorrow by whatever he does
now. So if he does something good today there will be no
possibility to benefit from that good deed tomorrow. And if
he is totally bound by his actions in the past there will be no
meaning in anything he does - because he cannot do anything, he will be totally bound.
213T H E P A T H O P M E D I T A T I O N
On the other hand, if he is totally free there will be no
point in doing anything, because whatever he does tomorrow
he will be free of it, and his past actions will not affect him.
That is why man is neither completely bound nor completely
free: one of his legs is tied and the other is free.
Once somebody asked Hazrat Ali, "Is man free or bound
by his actions?"
Ali said, "Raise one of your legs."
The man was free to raise either his left or right leg. He
raised his left leg. Then Ali said, "Now raise the other one."n has the thirst and quest for bliss
within him, as long as man wants to rise above unhappiness.
If you are unhappy and you are aware that you are unhappy, don't go on tolerating this suffering, don't go on living
with it. Stand up against the suffering and do something to
get rid of it. There is very little difference between what an
ordinary man does when he is in suffering and what a meditator does when he is in suffering. W h e n an ordinary person
is suffering he looks for a way to forget about it, and when a
meditator is suffering he looks for a way to destroy the pain.
There are only two kinds of people in the world: one kind is
looking for ways to forget pain and suffering, and the other
kind is looking for ways to destroy pain and suffering. I pray
